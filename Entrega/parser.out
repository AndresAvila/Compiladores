Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal
Rule 2     addProcedureDir -> <empty>
Rule 3     cicloVars -> vars cicloVars
Rule 4     cicloVars -> <empty>
Rule 5     vars -> createVariableDir VAR auxVar1
Rule 6     createVariableDir -> <empty>
Rule 7     auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON
Rule 8     addTypeGlobal -> <empty>
Rule 9     idVars -> ID addVariableDir ambIdVars
Rule 10    addVariableDir -> <empty>
Rule 11    ambIdVars -> COMMA idVars
Rule 12    ambIdVars -> <empty>
Rule 13    tipo -> INT ambAuxTipo1
Rule 14    tipo -> BOOL ambAuxTipo1
Rule 15    tipo -> STRING ambAuxTipo1
Rule 16    tipo -> FLOAT ambAuxTipo1
Rule 17    tipo -> CHAR ambAuxTipo1
Rule 18    ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt
Rule 19    ambAuxTipo1 -> noEsArr
Rule 20    esArr -> <empty>
Rule 21    noEsArr -> <empty>
Rule 22    cicloVarsMain -> varsMain cicloVarsMain
Rule 23    cicloVarsMain -> <empty>
Rule 24    varsMain -> createVariableDirMain VAR auxVar1Main
Rule 25    createVariableDirMain -> <empty>
Rule 26    auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON
Rule 27    addTypeMain -> <empty>
Rule 28    idVarsMain -> ID addVariableDirMain ambIdVarsMain
Rule 29    addVariableDirMain -> <empty>
Rule 30    ambIdVarsMain -> COMMA idVarsMain
Rule 31    ambIdVarsMain -> <empty>
Rule 32    bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE
Rule 33    recursivo -> RETURN exp SEMICOLON paso23
Rule 34    recursivo -> <empty>
Rule 35    cicloBloque -> estatuto cicloBloque
Rule 36    cicloBloque -> <empty>
Rule 37    bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN exp SEMICOLON RBRACE
Rule 38    cicloBloqueFuncion -> estatuto cicloBloqueFuncion
Rule 39    cicloBloqueFuncion -> <empty>
Rule 40    cicloVarsFuncion -> varsFuncion cicloVarsFuncion
Rule 41    cicloVarsFuncion -> <empty>
Rule 42    varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion
Rule 43    createVariableDirFuncion -> <empty>
Rule 44    auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON
Rule 45    addTypeFuncion -> <empty>
Rule 46    idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion
Rule 47    addVariableDirFuncion -> <empty>
Rule 48    ambIdVarsFuncion -> COMMA idVarsFuncion
Rule 49    ambIdVarsFuncion -> <empty>
Rule 50    estatuto -> asignacion
Rule 51    estatuto -> condicion
Rule 52    estatuto -> escritura
Rule 53    estatuto -> ciclo
Rule 54    asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
Rule 55    auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b paso27
Rule 56    auxAsignacion1 -> <empty>
Rule 57    escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
Rule 58    auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1
Rule 59    ambAuxEscritura1 -> COMMA auxEscritura1
Rule 60    ambAuxEscritura1 -> <empty>
Rule 61    auxEscritura2 -> exp
Rule 62    auxEscritura2 -> CTESTRING paso1 assignDirectionCteString
Rule 63    cicloExpresion -> expresion paso10
Rule 64    auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion
Rule 65    auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion
Rule 66    auxCicloExpresion -> <empty>
Rule 67    expresion -> exp auxExpresion
Rule 68    auxExpresion -> GTHAN mayor exp
Rule 69    auxExpresion -> LTHAN menor exp
Rule 70    auxExpresion -> NOTEQUAL diferente exp
Rule 71    auxExpresion -> GETHAN mayorIg exp
Rule 72    auxExpresion -> LETHAN menorIg exp
Rule 73    auxExpresion -> EQUAL igual exp
Rule 74    auxExpresion -> <empty>
Rule 75    expAndOr -> cicloExpresion auxCicloExpresion
Rule 76    condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
Rule 77    auxCondicion -> ELSE paso13 bloque
Rule 78    auxCondicion -> <empty>
Rule 79    exp -> cicloExp
Rule 80    cicloExp -> termino paso4 ambExp
Rule 81    ambExp -> auxExp cicloExp
Rule 82    ambExp -> <empty>
Rule 83    auxExp -> PLUS paso3_suma
Rule 84    auxExp -> MINUS paso3_resta
Rule 85    termino -> cicloTermino
Rule 86    cicloTermino -> factor paso5 ambCicloTermino
Rule 87    ambCicloTermino -> auxTermino cicloTermino
Rule 88    ambCicloTermino -> <empty>
Rule 89    auxTermino -> MULTI paso2_mult
Rule 90    auxTermino -> DIVIDE paso2_div
Rule 91    factor -> LPAREN paso6 exp RPAREN paso7
Rule 92    factor -> auxFactor varcte
Rule 93    auxFactor -> auxExp
Rule 94    auxFactor -> <empty>
Rule 95    varcte -> ID paso1 addType auxVarcte
Rule 96    varcte -> CTEINT paso1 cteInt assignDirectionCteInt
Rule 97    varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat
Rule 98    varcte -> CTECHAR paso1 cteChar assignDirectionCteChar
Rule 99    varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool
Rule 100   varcte -> CTESTRING paso1 cteString assignDirectionCteString
Rule 101   varcte -> llamada
Rule 102   assignDirectionCteInt -> <empty>
Rule 103   assignDirectionCteFloat -> <empty>
Rule 104   assignDirectionCteChar -> <empty>
Rule 105   assignDirectionCteBool -> <empty>
Rule 106   assignDirectionCteString -> <empty>
Rule 107   addType -> <empty>
Rule 108   auxVarcte -> LPAREN exp RPAREN
Rule 109   auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27
Rule 110   auxVarcte -> <empty>
Rule 111   cicloFuncion -> funcion cicloFuncion
Rule 112   cicloFuncion -> <empty>
Rule 113   funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22
Rule 114   addProcDirectoryFunc -> <empty>
Rule 115   initDicFunc -> <empty>
Rule 116   auxFunction -> parametros
Rule 117   auxFunction -> <empty>
Rule 118   parametros -> auxParametros
Rule 119   auxParametros -> tipo ID addParameters ambAuxParametros
Rule 120   addParameters -> <empty>
Rule 121   ambAuxParametros -> COMMA auxParametros
Rule 122   ambAuxParametros -> <empty>
Rule 123   ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17
Rule 124   llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28
Rule 125   auxLlamada -> argumentos
Rule 126   auxLlamada -> <empty>
Rule 127   argumentos -> auxArgumentos1
Rule 128   argumentos -> <empty>
Rule 129   auxArgumentos1 -> exp paso25 ambAuxArgumentos1
Rule 130   ambAuxArgumentos1 -> COMMA auxArgumentos1
Rule 131   ambAuxArgumentos1 -> <empty>
Rule 132   lectura -> READ LPAREN ID RPAREN SEMICOLON
Rule 133   paso1 -> <empty>
Rule 134   paso2_mult -> <empty>
Rule 135   paso2_div -> <empty>
Rule 136   paso3_suma -> <empty>
Rule 137   paso3_resta -> <empty>
Rule 138   paso4 -> <empty>
Rule 139   paso5 -> <empty>
Rule 140   paso6 -> <empty>
Rule 141   paso7 -> <empty>
Rule 142   paso6b -> <empty>
Rule 143   paso7b -> <empty>
Rule 144   paso8_and -> <empty>
Rule 145   paso8_or -> <empty>
Rule 146   paso9 -> <empty>
Rule 147   paso10 -> <empty>
Rule 148   paso11 -> <empty>
Rule 149   paso12 -> <empty>
Rule 150   paso13 -> <empty>
Rule 151   paso14 -> <empty>
Rule 152   paso15 -> <empty>
Rule 153   paso16 -> <empty>
Rule 154   paso17 -> <empty>
Rule 155   paso18 -> <empty>
Rule 156   paso19 -> <empty>
Rule 157   paso20 -> <empty>
Rule 158   paso21 -> <empty>
Rule 159   paso22 -> <empty>
Rule 160   paso23 -> <empty>
Rule 161   paso24 -> <empty>
Rule 162   paso25 -> <empty>
Rule 163   paso26 -> <empty>
Rule 164   paso27 -> <empty>
Rule 165   paso28 -> <empty>
Rule 166   pasoFinal -> <empty>
Rule 167   cteInt -> <empty>
Rule 168   cteFloat -> <empty>
Rule 169   cteChar -> <empty>
Rule 170   cteBool -> <empty>
Rule 171   cteString -> <empty>
Rule 172   cteLlamada -> <empty>
Rule 173   mayor -> <empty>
Rule 174   menor -> <empty>
Rule 175   mayorIg -> <empty>
Rule 176   menorIg -> <empty>
Rule 177   igual -> <empty>
Rule 178   diferente -> <empty>
Rule 179   asig -> <empty>

Terminals, with rules where they appear

AND                  : 64
BOOL                 : 14
CALL                 : 124
CHAR                 : 17
COLON                : 7 26 44 124
COMMA                : 11 30 48 59 121 130
CTEBOOL              : 99
CTECHAR              : 98
CTEFLOAT             : 97
CTEINT               : 18 96
CTESTRING            : 62 100
DIVIDE               : 90
ELSE                 : 77
EQUAL                : 73
EQUALA               : 54
FLOAT                : 16
FUNCTION             : 113
GETHAN               : 71
GTHAN                : 68
ID                   : 1 9 28 46 54 95 113 119 124 132
IF                   : 76
INT                  : 13
LBRACE               : 32 37
LBRACKET             : 18 55 109
LETHAN               : 72
LPAREN               : 57 76 91 108 113 123 124 132
LTHAN                : 69
MAIN                 : 1
MINUS                : 84
MULTI                : 89
NOTEQUAL             : 70
OR                   : 65
PLUS                 : 83
PRINT                : 57
PROGRAM              : 1
RBRACE               : 32 37
RBRACKET             : 18 55 109
READ                 : 132
RETURN               : 33 37
RPAREN               : 57 76 91 108 113 123 124 132
SEMICOLON            : 1 7 26 33 37 44 54 57 132
STRING               : 15
VAR                  : 5 24 42
WHILE                : 123
error                : 

Nonterminals, with rules where they appear

addParameters        : 119
addProcDirectoryFunc : 113
addProcedureDir      : 1
addType              : 54 95
addTypeFuncion       : 44
addTypeGlobal        : 7
addTypeMain          : 26
addVariableDir       : 9
addVariableDirFuncion : 46
addVariableDirMain   : 28
ambAuxArgumentos1    : 129
ambAuxEscritura1     : 58
ambAuxParametros     : 119
ambAuxTipo1          : 13 14 15 16 17
ambCicloTermino      : 86
ambExp               : 80
ambIdVars            : 9
ambIdVarsFuncion     : 46
ambIdVarsMain        : 28
argumentos           : 125
asig                 : 54
asignacion           : 50
assignDirectionCteBool : 99
assignDirectionCteChar : 98
assignDirectionCteFloat : 97
assignDirectionCteInt : 18 96
assignDirectionCteString : 62 100
auxArgumentos1       : 127 130
auxAsignacion1       : 54
auxCicloExpresion    : 64 65 75
auxCondicion         : 76
auxEscritura1        : 57 59
auxEscritura2        : 58
auxExp               : 81 93
auxExpresion         : 67
auxFactor            : 92
auxFunction          : 113
auxLlamada           : 124
auxParametros        : 118 121
auxTermino           : 87
auxVar1              : 5
auxVar1Funcion       : 42
auxVar1Main          : 24
auxVarcte            : 95
bloque               : 1 76 77 123
bloqueFuncion        : 113
ciclo                : 53
cicloBloque          : 32 35
cicloBloqueFuncion   : 37 38
cicloExp             : 79 81
cicloExpresion       : 64 65 75
cicloFuncion         : 1 111
cicloTermino         : 85 87
cicloVars            : 1 3
cicloVarsFuncion     : 37 40
cicloVarsMain        : 22 32
condicion            : 51
createVariableDir    : 5
createVariableDirFuncion : 42
createVariableDirMain : 24
cteBool              : 99
cteChar              : 98
cteFloat             : 97
cteInt               : 96
cteLlamada           : 124
cteString            : 100
diferente            : 70
esArr                : 18
escritura            : 52
estatuto             : 35 38
exp                  : 33 37 54 55 61 67 68 69 70 71 72 73 91 108 109 129
expAndOr             : 76 123
expresion            : 63
factor               : 86
funcion              : 111
idVars               : 7 11
idVarsFuncion        : 44 48
idVarsMain           : 26 30
igual                : 73
initDicFunc          : 113
lectura              : 
llamada              : 101
mayor                : 68
mayorIg              : 71
menor                : 69
menorIg              : 72
noEsArr              : 19
parametros           : 116
paso1                : 54 62 95 96 97 98 99 100
paso10               : 63
paso11               : 54
paso12               : 76
paso13               : 77
paso14               : 76
paso15               : 123
paso16               : 123
paso17               : 123
paso18               : 58
paso19               : 1
paso20               : 1
paso21               : 37
paso22               : 113
paso23               : 33 113
paso24               : 124
paso25               : 129
paso26               : 124
paso27               : 55 109
paso28               : 124
paso2_div            : 90
paso2_mult           : 89
paso3_resta          : 84
paso3_suma           : 83
paso4                : 80
paso5                : 86
paso6                : 91 124
paso6b               : 55 109
paso7                : 91 124
paso7b               : 55 109
paso8_and            : 64
paso8_or             : 65
paso9                : 64 65
pasoFinal            : 1
programa             : 0
recursivo            : 32
termino              : 80
tipo                 : 7 26 44 113 119
varcte               : 92
vars                 : 3
varsFuncion          : 40
varsMain             : 22

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal
    (2) addProcedureDir -> .

    SEMICOLON       reduce using rule 2 (addProcedureDir -> .)

    addProcedureDir                shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProcedureDir . SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON . paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal
    (156) paso19 -> .

    FUNCTION        reduce using rule 156 (paso19 -> .)
    MAIN            reduce using rule 156 (paso19 -> .)
    VAR             reduce using rule 156 (paso19 -> .)

    paso19                         shift and go to state 6

state 6

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 . cicloVars cicloFuncion MAIN paso20 bloque pasoFinal
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    cicloVars                      shift and go to state 7
    vars                           shift and go to state 8
    createVariableDir              shift and go to state 9

state 7

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars . cicloFuncion MAIN paso20 bloque pasoFinal
    (111) cicloFuncion -> . funcion cicloFuncion
    (112) cicloFuncion -> .
    (113) funcion -> . FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22

    MAIN            reduce using rule 112 (cicloFuncion -> .)
    FUNCTION        shift and go to state 11

    cicloFuncion                   shift and go to state 12
    funcion                        shift and go to state 10

state 8

    (3) cicloVars -> vars . cicloVars
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    createVariableDir              shift and go to state 9
    cicloVars                      shift and go to state 13
    vars                           shift and go to state 8

state 9

    (5) vars -> createVariableDir . VAR auxVar1

    VAR             shift and go to state 14


state 10

    (111) cicloFuncion -> funcion . cicloFuncion
    (111) cicloFuncion -> . funcion cicloFuncion
    (112) cicloFuncion -> .
    (113) funcion -> . FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22

    MAIN            reduce using rule 112 (cicloFuncion -> .)
    FUNCTION        shift and go to state 11

    cicloFuncion                   shift and go to state 15
    funcion                        shift and go to state 10

state 11

    (113) funcion -> FUNCTION . tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 18

state 12

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion . MAIN paso20 bloque pasoFinal

    MAIN            shift and go to state 22


state 13

    (3) cicloVars -> vars cicloVars .

    FUNCTION        reduce using rule 3 (cicloVars -> vars cicloVars .)
    MAIN            reduce using rule 3 (cicloVars -> vars cicloVars .)


state 14

    (5) vars -> createVariableDir VAR . auxVar1
    (7) auxVar1 -> . idVars COLON tipo addTypeGlobal SEMICOLON
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 25

    idVars                         shift and go to state 23
    auxVar1                        shift and go to state 24

state 15

    (111) cicloFuncion -> funcion cicloFuncion .

    MAIN            reduce using rule 111 (cicloFuncion -> funcion cicloFuncion .)


state 16

    (16) tipo -> FLOAT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt
    (19) ambAuxTipo1 -> . noEsArr
    (21) noEsArr -> .

    LBRACKET        shift and go to state 27
    ID              reduce using rule 21 (noEsArr -> .)
    SEMICOLON       reduce using rule 21 (noEsArr -> .)

    ambAuxTipo1                    shift and go to state 26
    noEsArr                        shift and go to state 28

state 17

    (15) tipo -> STRING . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt
    (19) ambAuxTipo1 -> . noEsArr
    (21) noEsArr -> .

    LBRACKET        shift and go to state 27
    ID              reduce using rule 21 (noEsArr -> .)
    SEMICOLON       reduce using rule 21 (noEsArr -> .)

    ambAuxTipo1                    shift and go to state 29
    noEsArr                        shift and go to state 28

state 18

    (113) funcion -> FUNCTION tipo . ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22

    ID              shift and go to state 30


state 19

    (17) tipo -> CHAR . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt
    (19) ambAuxTipo1 -> . noEsArr
    (21) noEsArr -> .

    LBRACKET        shift and go to state 27
    ID              reduce using rule 21 (noEsArr -> .)
    SEMICOLON       reduce using rule 21 (noEsArr -> .)

    ambAuxTipo1                    shift and go to state 31
    noEsArr                        shift and go to state 28

state 20

    (13) tipo -> INT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt
    (19) ambAuxTipo1 -> . noEsArr
    (21) noEsArr -> .

    LBRACKET        shift and go to state 27
    ID              reduce using rule 21 (noEsArr -> .)
    SEMICOLON       reduce using rule 21 (noEsArr -> .)

    ambAuxTipo1                    shift and go to state 32
    noEsArr                        shift and go to state 28

state 21

    (14) tipo -> BOOL . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt
    (19) ambAuxTipo1 -> . noEsArr
    (21) noEsArr -> .

    LBRACKET        shift and go to state 27
    ID              reduce using rule 21 (noEsArr -> .)
    SEMICOLON       reduce using rule 21 (noEsArr -> .)

    ambAuxTipo1                    shift and go to state 33
    noEsArr                        shift and go to state 28

state 22

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN . paso20 bloque pasoFinal
    (157) paso20 -> .

    LBRACE          reduce using rule 157 (paso20 -> .)

    paso20                         shift and go to state 34

state 23

    (7) auxVar1 -> idVars . COLON tipo addTypeGlobal SEMICOLON

    COLON           shift and go to state 35


state 24

    (5) vars -> createVariableDir VAR auxVar1 .

    VAR             reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    FUNCTION        reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    MAIN            reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)


state 25

    (9) idVars -> ID . addVariableDir ambIdVars
    (10) addVariableDir -> .

    COMMA           reduce using rule 10 (addVariableDir -> .)
    COLON           reduce using rule 10 (addVariableDir -> .)

    addVariableDir                 shift and go to state 36

state 26

    (16) tipo -> FLOAT ambAuxTipo1 .

    SEMICOLON       reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)
    ID              reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)


state 27

    (18) ambAuxTipo1 -> LBRACKET . CTEINT RBRACKET esArr assignDirectionCteInt

    CTEINT          shift and go to state 37


state 28

    (19) ambAuxTipo1 -> noEsArr .

    ID              reduce using rule 19 (ambAuxTipo1 -> noEsArr .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> noEsArr .)


state 29

    (15) tipo -> STRING ambAuxTipo1 .

    SEMICOLON       reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)
    ID              reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)


state 30

    (113) funcion -> FUNCTION tipo ID . initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22
    (115) initDicFunc -> .

    LPAREN          reduce using rule 115 (initDicFunc -> .)

    initDicFunc                    shift and go to state 38

state 31

    (17) tipo -> CHAR ambAuxTipo1 .

    SEMICOLON       reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)
    ID              reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)


state 32

    (13) tipo -> INT ambAuxTipo1 .

    SEMICOLON       reduce using rule 13 (tipo -> INT ambAuxTipo1 .)
    ID              reduce using rule 13 (tipo -> INT ambAuxTipo1 .)


state 33

    (14) tipo -> BOOL ambAuxTipo1 .

    SEMICOLON       reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)
    ID              reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)


state 34

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 . bloque pasoFinal
    (32) bloque -> . LBRACE cicloVarsMain cicloBloque recursivo RBRACE

    LBRACE          shift and go to state 39

    bloque                         shift and go to state 40

state 35

    (7) auxVar1 -> idVars COLON . tipo addTypeGlobal SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 41

state 36

    (9) idVars -> ID addVariableDir . ambIdVars
    (11) ambIdVars -> . COMMA idVars
    (12) ambIdVars -> .

    COMMA           shift and go to state 43
    COLON           reduce using rule 12 (ambIdVars -> .)

    ambIdVars                      shift and go to state 42

state 37

    (18) ambAuxTipo1 -> LBRACKET CTEINT . RBRACKET esArr assignDirectionCteInt

    RBRACKET        shift and go to state 44


state 38

    (113) funcion -> FUNCTION tipo ID initDicFunc . LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22

    LPAREN          shift and go to state 45


state 39

    (32) bloque -> LBRACE . cicloVarsMain cicloBloque recursivo RBRACE
    (22) cicloVarsMain -> . varsMain cicloVarsMain
    (23) cicloVarsMain -> .
    (24) varsMain -> . createVariableDirMain VAR auxVar1Main
    (25) createVariableDirMain -> .

    ID              reduce using rule 23 (cicloVarsMain -> .)
    IF              reduce using rule 23 (cicloVarsMain -> .)
    PRINT           reduce using rule 23 (cicloVarsMain -> .)
    WHILE           reduce using rule 23 (cicloVarsMain -> .)
    RETURN          reduce using rule 23 (cicloVarsMain -> .)
    RBRACE          reduce using rule 23 (cicloVarsMain -> .)
    VAR             reduce using rule 25 (createVariableDirMain -> .)

    createVariableDirMain          shift and go to state 46
    cicloVarsMain                  shift and go to state 47
    varsMain                       shift and go to state 48

state 40

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque . pasoFinal
    (166) pasoFinal -> .

    $end            reduce using rule 166 (pasoFinal -> .)

    pasoFinal                      shift and go to state 49

state 41

    (7) auxVar1 -> idVars COLON tipo . addTypeGlobal SEMICOLON
    (8) addTypeGlobal -> .

    SEMICOLON       reduce using rule 8 (addTypeGlobal -> .)

    addTypeGlobal                  shift and go to state 50

state 42

    (9) idVars -> ID addVariableDir ambIdVars .

    COLON           reduce using rule 9 (idVars -> ID addVariableDir ambIdVars .)


state 43

    (11) ambIdVars -> COMMA . idVars
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 25

    idVars                         shift and go to state 51

state 44

    (18) ambAuxTipo1 -> LBRACKET CTEINT RBRACKET . esArr assignDirectionCteInt
    (20) esArr -> .

    ID              reduce using rule 20 (esArr -> .)
    SEMICOLON       reduce using rule 20 (esArr -> .)

    esArr                          shift and go to state 52

state 45

    (113) funcion -> FUNCTION tipo ID initDicFunc LPAREN . auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22
    (116) auxFunction -> . parametros
    (117) auxFunction -> .
    (118) parametros -> . auxParametros
    (119) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    RPAREN          reduce using rule 117 (auxFunction -> .)
    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 53
    auxFunction                    shift and go to state 54
    auxParametros                  shift and go to state 55
    parametros                     shift and go to state 56

state 46

    (24) varsMain -> createVariableDirMain . VAR auxVar1Main

    VAR             shift and go to state 57


state 47

    (32) bloque -> LBRACE cicloVarsMain . cicloBloque recursivo RBRACE
    (35) cicloBloque -> . estatuto cicloBloque
    (36) cicloBloque -> .
    (50) estatuto -> . asignacion
    (51) estatuto -> . condicion
    (52) estatuto -> . escritura
    (53) estatuto -> . ciclo
    (54) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (76) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (57) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (123) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RETURN          reduce using rule 36 (cicloBloque -> .)
    RBRACE          reduce using rule 36 (cicloBloque -> .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    PRINT           shift and go to state 58
    WHILE           shift and go to state 59

    ciclo                          shift and go to state 60
    estatuto                       shift and go to state 61
    condicion                      shift and go to state 62
    cicloBloque                    shift and go to state 63
    asignacion                     shift and go to state 66
    escritura                      shift and go to state 67

state 48

    (22) cicloVarsMain -> varsMain . cicloVarsMain
    (22) cicloVarsMain -> . varsMain cicloVarsMain
    (23) cicloVarsMain -> .
    (24) varsMain -> . createVariableDirMain VAR auxVar1Main
    (25) createVariableDirMain -> .

    ID              reduce using rule 23 (cicloVarsMain -> .)
    IF              reduce using rule 23 (cicloVarsMain -> .)
    PRINT           reduce using rule 23 (cicloVarsMain -> .)
    WHILE           reduce using rule 23 (cicloVarsMain -> .)
    RETURN          reduce using rule 23 (cicloVarsMain -> .)
    RBRACE          reduce using rule 23 (cicloVarsMain -> .)
    VAR             reduce using rule 25 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 68
    createVariableDirMain          shift and go to state 46
    varsMain                       shift and go to state 48

state 49

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal .)


state 50

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal . SEMICOLON

    SEMICOLON       shift and go to state 69


state 51

    (11) ambIdVars -> COMMA idVars .

    COLON           reduce using rule 11 (ambIdVars -> COMMA idVars .)


state 52

    (18) ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr . assignDirectionCteInt
    (102) assignDirectionCteInt -> .

    ID              reduce using rule 102 (assignDirectionCteInt -> .)
    SEMICOLON       reduce using rule 102 (assignDirectionCteInt -> .)

    assignDirectionCteInt          shift and go to state 70

state 53

    (119) auxParametros -> tipo . ID addParameters ambAuxParametros

    ID              shift and go to state 71


state 54

    (113) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction . RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22

    RPAREN          shift and go to state 72


state 55

    (118) parametros -> auxParametros .

    RPAREN          reduce using rule 118 (parametros -> auxParametros .)


state 56

    (116) auxFunction -> parametros .

    RPAREN          reduce using rule 116 (auxFunction -> parametros .)


state 57

    (24) varsMain -> createVariableDirMain VAR . auxVar1Main
    (26) auxVar1Main -> . idVarsMain COLON tipo addTypeMain SEMICOLON
    (28) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 75

    auxVar1Main                    shift and go to state 73
    idVarsMain                     shift and go to state 74

state 58

    (57) escritura -> PRINT . LPAREN auxEscritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 76


state 59

    (123) ciclo -> WHILE . paso15 LPAREN expAndOr RPAREN paso16 bloque paso17
    (152) paso15 -> .

    LPAREN          reduce using rule 152 (paso15 -> .)

    paso15                         shift and go to state 77

state 60

    (53) estatuto -> ciclo .

    ID              reduce using rule 53 (estatuto -> ciclo .)
    IF              reduce using rule 53 (estatuto -> ciclo .)
    PRINT           reduce using rule 53 (estatuto -> ciclo .)
    WHILE           reduce using rule 53 (estatuto -> ciclo .)
    RETURN          reduce using rule 53 (estatuto -> ciclo .)
    RBRACE          reduce using rule 53 (estatuto -> ciclo .)


state 61

    (35) cicloBloque -> estatuto . cicloBloque
    (35) cicloBloque -> . estatuto cicloBloque
    (36) cicloBloque -> .
    (50) estatuto -> . asignacion
    (51) estatuto -> . condicion
    (52) estatuto -> . escritura
    (53) estatuto -> . ciclo
    (54) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (76) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (57) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (123) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RETURN          reduce using rule 36 (cicloBloque -> .)
    RBRACE          reduce using rule 36 (cicloBloque -> .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    PRINT           shift and go to state 58
    WHILE           shift and go to state 59

    ciclo                          shift and go to state 60
    asignacion                     shift and go to state 66
    estatuto                       shift and go to state 61
    condicion                      shift and go to state 62
    cicloBloque                    shift and go to state 78
    escritura                      shift and go to state 67

state 62

    (51) estatuto -> condicion .

    ID              reduce using rule 51 (estatuto -> condicion .)
    IF              reduce using rule 51 (estatuto -> condicion .)
    PRINT           reduce using rule 51 (estatuto -> condicion .)
    WHILE           reduce using rule 51 (estatuto -> condicion .)
    RETURN          reduce using rule 51 (estatuto -> condicion .)
    RBRACE          reduce using rule 51 (estatuto -> condicion .)


state 63

    (32) bloque -> LBRACE cicloVarsMain cicloBloque . recursivo RBRACE
    (33) recursivo -> . RETURN exp SEMICOLON paso23
    (34) recursivo -> .

    RETURN          shift and go to state 79
    RBRACE          reduce using rule 34 (recursivo -> .)

    recursivo                      shift and go to state 80

state 64

    (54) asignacion -> ID . paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (133) paso1 -> .

    LBRACKET        reduce using rule 133 (paso1 -> .)
    EQUALA          reduce using rule 133 (paso1 -> .)

    paso1                          shift and go to state 81

state 65

    (76) condicion -> IF . LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14

    LPAREN          shift and go to state 82


state 66

    (50) estatuto -> asignacion .

    ID              reduce using rule 50 (estatuto -> asignacion .)
    IF              reduce using rule 50 (estatuto -> asignacion .)
    PRINT           reduce using rule 50 (estatuto -> asignacion .)
    WHILE           reduce using rule 50 (estatuto -> asignacion .)
    RETURN          reduce using rule 50 (estatuto -> asignacion .)
    RBRACE          reduce using rule 50 (estatuto -> asignacion .)


state 67

    (52) estatuto -> escritura .

    ID              reduce using rule 52 (estatuto -> escritura .)
    IF              reduce using rule 52 (estatuto -> escritura .)
    PRINT           reduce using rule 52 (estatuto -> escritura .)
    WHILE           reduce using rule 52 (estatuto -> escritura .)
    RETURN          reduce using rule 52 (estatuto -> escritura .)
    RBRACE          reduce using rule 52 (estatuto -> escritura .)


state 68

    (22) cicloVarsMain -> varsMain cicloVarsMain .

    ID              reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)
    IF              reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)
    PRINT           reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)
    WHILE           reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)
    RETURN          reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)
    RBRACE          reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)


state 69

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .

    VAR             reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    FUNCTION        reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    MAIN            reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)


state 70

    (18) ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt .

    ID              reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt .)
    SEMICOLON       reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt .)


state 71

    (119) auxParametros -> tipo ID . addParameters ambAuxParametros
    (120) addParameters -> .

    COMMA           reduce using rule 120 (addParameters -> .)
    RPAREN          reduce using rule 120 (addParameters -> .)

    addParameters                  shift and go to state 83

state 72

    (113) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN . bloqueFuncion addProcDirectoryFunc paso23 paso22
    (37) bloqueFuncion -> . LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN exp SEMICOLON RBRACE

    LBRACE          shift and go to state 84

    bloqueFuncion                  shift and go to state 85

state 73

    (24) varsMain -> createVariableDirMain VAR auxVar1Main .

    VAR             reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    ID              reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    IF              reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    PRINT           reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    WHILE           reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    RETURN          reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    RBRACE          reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)


state 74

    (26) auxVar1Main -> idVarsMain . COLON tipo addTypeMain SEMICOLON

    COLON           shift and go to state 86


state 75

    (28) idVarsMain -> ID . addVariableDirMain ambIdVarsMain
    (29) addVariableDirMain -> .

    COMMA           reduce using rule 29 (addVariableDirMain -> .)
    COLON           reduce using rule 29 (addVariableDirMain -> .)

    addVariableDirMain             shift and go to state 87

state 76

    (57) escritura -> PRINT LPAREN . auxEscritura1 RPAREN SEMICOLON
    (58) auxEscritura1 -> . auxEscritura2 paso18 ambAuxEscritura1
    (61) auxEscritura2 -> . exp
    (62) auxEscritura2 -> . CTESTRING paso1 assignDirectionCteString
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 88
    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

  ! CTESTRING       [ reduce using rule 94 (auxFactor -> .) ]

    termino                        shift and go to state 89
    cicloTermino                   shift and go to state 93
    factor                         shift and go to state 94
    cicloExp                       shift and go to state 95
    auxEscritura1                  shift and go to state 96
    auxEscritura2                  shift and go to state 97
    auxFactor                      shift and go to state 99
    auxExp                         shift and go to state 91
    exp                            shift and go to state 100

state 77

    (123) ciclo -> WHILE paso15 . LPAREN expAndOr RPAREN paso16 bloque paso17

    LPAREN          shift and go to state 101


state 78

    (35) cicloBloque -> estatuto cicloBloque .

    RETURN          reduce using rule 35 (cicloBloque -> estatuto cicloBloque .)
    RBRACE          reduce using rule 35 (cicloBloque -> estatuto cicloBloque .)


state 79

    (33) recursivo -> RETURN . exp SEMICOLON paso23
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    termino                        shift and go to state 89
    exp                            shift and go to state 102
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 80

    (32) bloque -> LBRACE cicloVarsMain cicloBloque recursivo . RBRACE

    RBRACE          shift and go to state 103


state 81

    (54) asignacion -> ID paso1 . addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (107) addType -> .

    LBRACKET        reduce using rule 107 (addType -> .)
    EQUALA          reduce using rule 107 (addType -> .)

    addType                        shift and go to state 104

state 82

    (76) condicion -> IF LPAREN . expAndOr paso12 RPAREN bloque auxCondicion paso14
    (75) expAndOr -> . cicloExpresion auxCicloExpresion
    (63) cicloExpresion -> . expresion paso10
    (67) expresion -> . exp auxExpresion
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    expAndOr                       shift and go to state 105
    termino                        shift and go to state 89
    cicloExpresion                 shift and go to state 106
    auxExp                         shift and go to state 91
    cicloTermino                   shift and go to state 93
    factor                         shift and go to state 94
    cicloExp                       shift and go to state 95
    auxFactor                      shift and go to state 99
    expresion                      shift and go to state 107
    exp                            shift and go to state 108

state 83

    (119) auxParametros -> tipo ID addParameters . ambAuxParametros
    (121) ambAuxParametros -> . COMMA auxParametros
    (122) ambAuxParametros -> .

    COMMA           shift and go to state 109
    RPAREN          reduce using rule 122 (ambAuxParametros -> .)

    ambAuxParametros               shift and go to state 110

state 84

    (37) bloqueFuncion -> LBRACE . cicloVarsFuncion paso21 cicloBloqueFuncion RETURN exp SEMICOLON RBRACE
    (40) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (41) cicloVarsFuncion -> .
    (42) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (43) createVariableDirFuncion -> .

    ID              reduce using rule 41 (cicloVarsFuncion -> .)
    IF              reduce using rule 41 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 41 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 41 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 41 (cicloVarsFuncion -> .)
    VAR             reduce using rule 43 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 111
    cicloVarsFuncion               shift and go to state 112
    createVariableDirFuncion       shift and go to state 113

state 85

    (113) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion . addProcDirectoryFunc paso23 paso22
    (114) addProcDirectoryFunc -> .

    FUNCTION        reduce using rule 114 (addProcDirectoryFunc -> .)
    MAIN            reduce using rule 114 (addProcDirectoryFunc -> .)

    addProcDirectoryFunc           shift and go to state 114

state 86

    (26) auxVar1Main -> idVarsMain COLON . tipo addTypeMain SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 115

state 87

    (28) idVarsMain -> ID addVariableDirMain . ambIdVarsMain
    (30) ambIdVarsMain -> . COMMA idVarsMain
    (31) ambIdVarsMain -> .

    COMMA           shift and go to state 117
    COLON           reduce using rule 31 (ambIdVarsMain -> .)

    ambIdVarsMain                  shift and go to state 116

state 88

    (62) auxEscritura2 -> CTESTRING . paso1 assignDirectionCteString
    (133) paso1 -> .

    COMMA           reduce using rule 133 (paso1 -> .)
    RPAREN          reduce using rule 133 (paso1 -> .)

    paso1                          shift and go to state 118

state 89

    (80) cicloExp -> termino . paso4 ambExp
    (138) paso4 -> .

    PLUS            reduce using rule 138 (paso4 -> .)
    MINUS           reduce using rule 138 (paso4 -> .)
    COMMA           reduce using rule 138 (paso4 -> .)
    RPAREN          reduce using rule 138 (paso4 -> .)
    SEMICOLON       reduce using rule 138 (paso4 -> .)
    GTHAN           reduce using rule 138 (paso4 -> .)
    LTHAN           reduce using rule 138 (paso4 -> .)
    NOTEQUAL        reduce using rule 138 (paso4 -> .)
    GETHAN          reduce using rule 138 (paso4 -> .)
    LETHAN          reduce using rule 138 (paso4 -> .)
    EQUAL           reduce using rule 138 (paso4 -> .)
    AND             reduce using rule 138 (paso4 -> .)
    OR              reduce using rule 138 (paso4 -> .)
    RBRACKET        reduce using rule 138 (paso4 -> .)

    paso4                          shift and go to state 119

state 90

    (84) auxExp -> MINUS . paso3_resta
    (137) paso3_resta -> .

    ID              reduce using rule 137 (paso3_resta -> .)
    CTEINT          reduce using rule 137 (paso3_resta -> .)
    CTEFLOAT        reduce using rule 137 (paso3_resta -> .)
    CTECHAR         reduce using rule 137 (paso3_resta -> .)
    CTEBOOL         reduce using rule 137 (paso3_resta -> .)
    CTESTRING       reduce using rule 137 (paso3_resta -> .)
    CALL            reduce using rule 137 (paso3_resta -> .)
    LPAREN          reduce using rule 137 (paso3_resta -> .)
    PLUS            reduce using rule 137 (paso3_resta -> .)
    MINUS           reduce using rule 137 (paso3_resta -> .)

    paso3_resta                    shift and go to state 120

state 91

    (93) auxFactor -> auxExp .

    ID              reduce using rule 93 (auxFactor -> auxExp .)
    CTEINT          reduce using rule 93 (auxFactor -> auxExp .)
    CTEFLOAT        reduce using rule 93 (auxFactor -> auxExp .)
    CTECHAR         reduce using rule 93 (auxFactor -> auxExp .)
    CTEBOOL         reduce using rule 93 (auxFactor -> auxExp .)
    CTESTRING       reduce using rule 93 (auxFactor -> auxExp .)
    CALL            reduce using rule 93 (auxFactor -> auxExp .)


state 92

    (83) auxExp -> PLUS . paso3_suma
    (136) paso3_suma -> .

    ID              reduce using rule 136 (paso3_suma -> .)
    CTEINT          reduce using rule 136 (paso3_suma -> .)
    CTEFLOAT        reduce using rule 136 (paso3_suma -> .)
    CTECHAR         reduce using rule 136 (paso3_suma -> .)
    CTEBOOL         reduce using rule 136 (paso3_suma -> .)
    CTESTRING       reduce using rule 136 (paso3_suma -> .)
    CALL            reduce using rule 136 (paso3_suma -> .)
    LPAREN          reduce using rule 136 (paso3_suma -> .)
    PLUS            reduce using rule 136 (paso3_suma -> .)
    MINUS           reduce using rule 136 (paso3_suma -> .)

    paso3_suma                     shift and go to state 121

state 93

    (85) termino -> cicloTermino .

    PLUS            reduce using rule 85 (termino -> cicloTermino .)
    MINUS           reduce using rule 85 (termino -> cicloTermino .)
    GTHAN           reduce using rule 85 (termino -> cicloTermino .)
    LTHAN           reduce using rule 85 (termino -> cicloTermino .)
    NOTEQUAL        reduce using rule 85 (termino -> cicloTermino .)
    GETHAN          reduce using rule 85 (termino -> cicloTermino .)
    LETHAN          reduce using rule 85 (termino -> cicloTermino .)
    EQUAL           reduce using rule 85 (termino -> cicloTermino .)
    AND             reduce using rule 85 (termino -> cicloTermino .)
    OR              reduce using rule 85 (termino -> cicloTermino .)
    RPAREN          reduce using rule 85 (termino -> cicloTermino .)
    RBRACKET        reduce using rule 85 (termino -> cicloTermino .)
    COMMA           reduce using rule 85 (termino -> cicloTermino .)
    SEMICOLON       reduce using rule 85 (termino -> cicloTermino .)


state 94

    (86) cicloTermino -> factor . paso5 ambCicloTermino
    (139) paso5 -> .

    MULTI           reduce using rule 139 (paso5 -> .)
    DIVIDE          reduce using rule 139 (paso5 -> .)
    PLUS            reduce using rule 139 (paso5 -> .)
    MINUS           reduce using rule 139 (paso5 -> .)
    COMMA           reduce using rule 139 (paso5 -> .)
    RPAREN          reduce using rule 139 (paso5 -> .)
    SEMICOLON       reduce using rule 139 (paso5 -> .)
    GTHAN           reduce using rule 139 (paso5 -> .)
    LTHAN           reduce using rule 139 (paso5 -> .)
    NOTEQUAL        reduce using rule 139 (paso5 -> .)
    GETHAN          reduce using rule 139 (paso5 -> .)
    LETHAN          reduce using rule 139 (paso5 -> .)
    EQUAL           reduce using rule 139 (paso5 -> .)
    AND             reduce using rule 139 (paso5 -> .)
    OR              reduce using rule 139 (paso5 -> .)
    RBRACKET        reduce using rule 139 (paso5 -> .)

    paso5                          shift and go to state 122

state 95

    (79) exp -> cicloExp .

    RPAREN          reduce using rule 79 (exp -> cicloExp .)
    GTHAN           reduce using rule 79 (exp -> cicloExp .)
    LTHAN           reduce using rule 79 (exp -> cicloExp .)
    NOTEQUAL        reduce using rule 79 (exp -> cicloExp .)
    GETHAN          reduce using rule 79 (exp -> cicloExp .)
    LETHAN          reduce using rule 79 (exp -> cicloExp .)
    EQUAL           reduce using rule 79 (exp -> cicloExp .)
    AND             reduce using rule 79 (exp -> cicloExp .)
    OR              reduce using rule 79 (exp -> cicloExp .)
    COMMA           reduce using rule 79 (exp -> cicloExp .)
    RBRACKET        reduce using rule 79 (exp -> cicloExp .)
    SEMICOLON       reduce using rule 79 (exp -> cicloExp .)


state 96

    (57) escritura -> PRINT LPAREN auxEscritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 123


state 97

    (58) auxEscritura1 -> auxEscritura2 . paso18 ambAuxEscritura1
    (155) paso18 -> .

    COMMA           reduce using rule 155 (paso18 -> .)
    RPAREN          reduce using rule 155 (paso18 -> .)

    paso18                         shift and go to state 124

state 98

    (91) factor -> LPAREN . paso6 exp RPAREN paso7
    (140) paso6 -> .

    LPAREN          reduce using rule 140 (paso6 -> .)
    PLUS            reduce using rule 140 (paso6 -> .)
    MINUS           reduce using rule 140 (paso6 -> .)
    ID              reduce using rule 140 (paso6 -> .)
    CTEINT          reduce using rule 140 (paso6 -> .)
    CTEFLOAT        reduce using rule 140 (paso6 -> .)
    CTECHAR         reduce using rule 140 (paso6 -> .)
    CTEBOOL         reduce using rule 140 (paso6 -> .)
    CTESTRING       reduce using rule 140 (paso6 -> .)
    CALL            reduce using rule 140 (paso6 -> .)

    paso6                          shift and go to state 125

state 99

    (92) factor -> auxFactor . varcte
    (95) varcte -> . ID paso1 addType auxVarcte
    (96) varcte -> . CTEINT paso1 cteInt assignDirectionCteInt
    (97) varcte -> . CTEFLOAT paso1 cteFloat assignDirectionCteFloat
    (98) varcte -> . CTECHAR paso1 cteChar assignDirectionCteChar
    (99) varcte -> . CTEBOOL paso1 cteBool assignDirectionCteBool
    (100) varcte -> . CTESTRING paso1 cteString assignDirectionCteString
    (101) varcte -> . llamada
    (124) llamada -> . CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28

    ID              shift and go to state 132
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 129
    CTECHAR         shift and go to state 127
    CTEBOOL         shift and go to state 134
    CTESTRING       shift and go to state 126
    CALL            shift and go to state 133

    varcte                         shift and go to state 128
    llamada                        shift and go to state 130

state 100

    (61) auxEscritura2 -> exp .

    COMMA           reduce using rule 61 (auxEscritura2 -> exp .)
    RPAREN          reduce using rule 61 (auxEscritura2 -> exp .)


state 101

    (123) ciclo -> WHILE paso15 LPAREN . expAndOr RPAREN paso16 bloque paso17
    (75) expAndOr -> . cicloExpresion auxCicloExpresion
    (63) cicloExpresion -> . expresion paso10
    (67) expresion -> . exp auxExpresion
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    expAndOr                       shift and go to state 135
    termino                        shift and go to state 89
    cicloExpresion                 shift and go to state 106
    auxExp                         shift and go to state 91
    cicloTermino                   shift and go to state 93
    factor                         shift and go to state 94
    cicloExp                       shift and go to state 95
    auxFactor                      shift and go to state 99
    expresion                      shift and go to state 107
    exp                            shift and go to state 108

state 102

    (33) recursivo -> RETURN exp . SEMICOLON paso23

    SEMICOLON       shift and go to state 136


state 103

    (32) bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE .

    ID              reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE .)
    IF              reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE .)
    PRINT           reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE .)
    WHILE           reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE .)
    RETURN          reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE .)
    RBRACE          reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE .)
    $end            reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE .)
    ELSE            reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE .)


state 104

    (54) asignacion -> ID paso1 addType . auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (55) auxAsignacion1 -> . LBRACKET paso6b exp RBRACKET paso7b paso27
    (56) auxAsignacion1 -> .

    LBRACKET        shift and go to state 138
    EQUALA          reduce using rule 56 (auxAsignacion1 -> .)

    auxAsignacion1                 shift and go to state 137

state 105

    (76) condicion -> IF LPAREN expAndOr . paso12 RPAREN bloque auxCondicion paso14
    (149) paso12 -> .

    RPAREN          reduce using rule 149 (paso12 -> .)

    paso12                         shift and go to state 139

state 106

    (75) expAndOr -> cicloExpresion . auxCicloExpresion
    (64) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (65) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (66) auxCicloExpresion -> .

    AND             shift and go to state 140
    OR              shift and go to state 142
    RPAREN          reduce using rule 66 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 141

state 107

    (63) cicloExpresion -> expresion . paso10
    (147) paso10 -> .

    AND             reduce using rule 147 (paso10 -> .)
    OR              reduce using rule 147 (paso10 -> .)
    RPAREN          reduce using rule 147 (paso10 -> .)

    paso10                         shift and go to state 143

state 108

    (67) expresion -> exp . auxExpresion
    (68) auxExpresion -> . GTHAN mayor exp
    (69) auxExpresion -> . LTHAN menor exp
    (70) auxExpresion -> . NOTEQUAL diferente exp
    (71) auxExpresion -> . GETHAN mayorIg exp
    (72) auxExpresion -> . LETHAN menorIg exp
    (73) auxExpresion -> . EQUAL igual exp
    (74) auxExpresion -> .

    GTHAN           shift and go to state 146
    LTHAN           shift and go to state 149
    NOTEQUAL        shift and go to state 144
    GETHAN          shift and go to state 148
    LETHAN          shift and go to state 150
    EQUAL           shift and go to state 147
    AND             reduce using rule 74 (auxExpresion -> .)
    OR              reduce using rule 74 (auxExpresion -> .)
    RPAREN          reduce using rule 74 (auxExpresion -> .)

    auxExpresion                   shift and go to state 145

state 109

    (121) ambAuxParametros -> COMMA . auxParametros
    (119) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 53
    auxParametros                  shift and go to state 151

state 110

    (119) auxParametros -> tipo ID addParameters ambAuxParametros .

    RPAREN          reduce using rule 119 (auxParametros -> tipo ID addParameters ambAuxParametros .)


state 111

    (40) cicloVarsFuncion -> varsFuncion . cicloVarsFuncion
    (40) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (41) cicloVarsFuncion -> .
    (42) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (43) createVariableDirFuncion -> .

    ID              reduce using rule 41 (cicloVarsFuncion -> .)
    IF              reduce using rule 41 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 41 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 41 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 41 (cicloVarsFuncion -> .)
    VAR             reduce using rule 43 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 111
    cicloVarsFuncion               shift and go to state 152
    createVariableDirFuncion       shift and go to state 113

state 112

    (37) bloqueFuncion -> LBRACE cicloVarsFuncion . paso21 cicloBloqueFuncion RETURN exp SEMICOLON RBRACE
    (158) paso21 -> .

    ID              reduce using rule 158 (paso21 -> .)
    IF              reduce using rule 158 (paso21 -> .)
    PRINT           reduce using rule 158 (paso21 -> .)
    WHILE           reduce using rule 158 (paso21 -> .)
    RETURN          reduce using rule 158 (paso21 -> .)

    paso21                         shift and go to state 153

state 113

    (42) varsFuncion -> createVariableDirFuncion . VAR auxVar1Funcion

    VAR             shift and go to state 154


state 114

    (113) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc . paso23 paso22
    (160) paso23 -> .

    FUNCTION        reduce using rule 160 (paso23 -> .)
    MAIN            reduce using rule 160 (paso23 -> .)

    paso23                         shift and go to state 155

state 115

    (26) auxVar1Main -> idVarsMain COLON tipo . addTypeMain SEMICOLON
    (27) addTypeMain -> .

    SEMICOLON       reduce using rule 27 (addTypeMain -> .)

    addTypeMain                    shift and go to state 156

state 116

    (28) idVarsMain -> ID addVariableDirMain ambIdVarsMain .

    COLON           reduce using rule 28 (idVarsMain -> ID addVariableDirMain ambIdVarsMain .)


state 117

    (30) ambIdVarsMain -> COMMA . idVarsMain
    (28) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 75

    idVarsMain                     shift and go to state 157

state 118

    (62) auxEscritura2 -> CTESTRING paso1 . assignDirectionCteString
    (106) assignDirectionCteString -> .

    COMMA           reduce using rule 106 (assignDirectionCteString -> .)
    RPAREN          reduce using rule 106 (assignDirectionCteString -> .)

    assignDirectionCteString       shift and go to state 158

state 119

    (80) cicloExp -> termino paso4 . ambExp
    (81) ambExp -> . auxExp cicloExp
    (82) ambExp -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    COMMA           reduce using rule 82 (ambExp -> .)
    RPAREN          reduce using rule 82 (ambExp -> .)
    SEMICOLON       reduce using rule 82 (ambExp -> .)
    GTHAN           reduce using rule 82 (ambExp -> .)
    LTHAN           reduce using rule 82 (ambExp -> .)
    NOTEQUAL        reduce using rule 82 (ambExp -> .)
    GETHAN          reduce using rule 82 (ambExp -> .)
    LETHAN          reduce using rule 82 (ambExp -> .)
    EQUAL           reduce using rule 82 (ambExp -> .)
    AND             reduce using rule 82 (ambExp -> .)
    OR              reduce using rule 82 (ambExp -> .)
    RBRACKET        reduce using rule 82 (ambExp -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 159
    ambExp                         shift and go to state 160

state 120

    (84) auxExp -> MINUS paso3_resta .

    ID              reduce using rule 84 (auxExp -> MINUS paso3_resta .)
    CTEINT          reduce using rule 84 (auxExp -> MINUS paso3_resta .)
    CTEFLOAT        reduce using rule 84 (auxExp -> MINUS paso3_resta .)
    CTECHAR         reduce using rule 84 (auxExp -> MINUS paso3_resta .)
    CTEBOOL         reduce using rule 84 (auxExp -> MINUS paso3_resta .)
    CTESTRING       reduce using rule 84 (auxExp -> MINUS paso3_resta .)
    CALL            reduce using rule 84 (auxExp -> MINUS paso3_resta .)
    LPAREN          reduce using rule 84 (auxExp -> MINUS paso3_resta .)
    PLUS            reduce using rule 84 (auxExp -> MINUS paso3_resta .)
    MINUS           reduce using rule 84 (auxExp -> MINUS paso3_resta .)


state 121

    (83) auxExp -> PLUS paso3_suma .

    ID              reduce using rule 83 (auxExp -> PLUS paso3_suma .)
    CTEINT          reduce using rule 83 (auxExp -> PLUS paso3_suma .)
    CTEFLOAT        reduce using rule 83 (auxExp -> PLUS paso3_suma .)
    CTECHAR         reduce using rule 83 (auxExp -> PLUS paso3_suma .)
    CTEBOOL         reduce using rule 83 (auxExp -> PLUS paso3_suma .)
    CTESTRING       reduce using rule 83 (auxExp -> PLUS paso3_suma .)
    CALL            reduce using rule 83 (auxExp -> PLUS paso3_suma .)
    LPAREN          reduce using rule 83 (auxExp -> PLUS paso3_suma .)
    PLUS            reduce using rule 83 (auxExp -> PLUS paso3_suma .)
    MINUS           reduce using rule 83 (auxExp -> PLUS paso3_suma .)


state 122

    (86) cicloTermino -> factor paso5 . ambCicloTermino
    (87) ambCicloTermino -> . auxTermino cicloTermino
    (88) ambCicloTermino -> .
    (89) auxTermino -> . MULTI paso2_mult
    (90) auxTermino -> . DIVIDE paso2_div

    PLUS            reduce using rule 88 (ambCicloTermino -> .)
    MINUS           reduce using rule 88 (ambCicloTermino -> .)
    COMMA           reduce using rule 88 (ambCicloTermino -> .)
    RPAREN          reduce using rule 88 (ambCicloTermino -> .)
    SEMICOLON       reduce using rule 88 (ambCicloTermino -> .)
    GTHAN           reduce using rule 88 (ambCicloTermino -> .)
    LTHAN           reduce using rule 88 (ambCicloTermino -> .)
    NOTEQUAL        reduce using rule 88 (ambCicloTermino -> .)
    GETHAN          reduce using rule 88 (ambCicloTermino -> .)
    LETHAN          reduce using rule 88 (ambCicloTermino -> .)
    EQUAL           reduce using rule 88 (ambCicloTermino -> .)
    AND             reduce using rule 88 (ambCicloTermino -> .)
    OR              reduce using rule 88 (ambCicloTermino -> .)
    RBRACKET        reduce using rule 88 (ambCicloTermino -> .)
    MULTI           shift and go to state 161
    DIVIDE          shift and go to state 164

    ambCicloTermino                shift and go to state 162
    auxTermino                     shift and go to state 163

state 123

    (57) escritura -> PRINT LPAREN auxEscritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 165


state 124

    (58) auxEscritura1 -> auxEscritura2 paso18 . ambAuxEscritura1
    (59) ambAuxEscritura1 -> . COMMA auxEscritura1
    (60) ambAuxEscritura1 -> .

    COMMA           shift and go to state 166
    RPAREN          reduce using rule 60 (ambAuxEscritura1 -> .)

    ambAuxEscritura1               shift and go to state 167

state 125

    (91) factor -> LPAREN paso6 . exp RPAREN paso7
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    termino                        shift and go to state 89
    exp                            shift and go to state 168
    factor                         shift and go to state 94
    cicloTermino                   shift and go to state 93
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95

state 126

    (100) varcte -> CTESTRING . paso1 cteString assignDirectionCteString
    (133) paso1 -> .

    MULTI           reduce using rule 133 (paso1 -> .)
    DIVIDE          reduce using rule 133 (paso1 -> .)
    PLUS            reduce using rule 133 (paso1 -> .)
    MINUS           reduce using rule 133 (paso1 -> .)
    COMMA           reduce using rule 133 (paso1 -> .)
    RPAREN          reduce using rule 133 (paso1 -> .)
    SEMICOLON       reduce using rule 133 (paso1 -> .)
    GTHAN           reduce using rule 133 (paso1 -> .)
    LTHAN           reduce using rule 133 (paso1 -> .)
    NOTEQUAL        reduce using rule 133 (paso1 -> .)
    GETHAN          reduce using rule 133 (paso1 -> .)
    LETHAN          reduce using rule 133 (paso1 -> .)
    EQUAL           reduce using rule 133 (paso1 -> .)
    AND             reduce using rule 133 (paso1 -> .)
    OR              reduce using rule 133 (paso1 -> .)
    RBRACKET        reduce using rule 133 (paso1 -> .)

    paso1                          shift and go to state 169

state 127

    (98) varcte -> CTECHAR . paso1 cteChar assignDirectionCteChar
    (133) paso1 -> .

    MULTI           reduce using rule 133 (paso1 -> .)
    DIVIDE          reduce using rule 133 (paso1 -> .)
    PLUS            reduce using rule 133 (paso1 -> .)
    MINUS           reduce using rule 133 (paso1 -> .)
    COMMA           reduce using rule 133 (paso1 -> .)
    RPAREN          reduce using rule 133 (paso1 -> .)
    SEMICOLON       reduce using rule 133 (paso1 -> .)
    GTHAN           reduce using rule 133 (paso1 -> .)
    LTHAN           reduce using rule 133 (paso1 -> .)
    NOTEQUAL        reduce using rule 133 (paso1 -> .)
    GETHAN          reduce using rule 133 (paso1 -> .)
    LETHAN          reduce using rule 133 (paso1 -> .)
    EQUAL           reduce using rule 133 (paso1 -> .)
    AND             reduce using rule 133 (paso1 -> .)
    OR              reduce using rule 133 (paso1 -> .)
    RBRACKET        reduce using rule 133 (paso1 -> .)

    paso1                          shift and go to state 170

state 128

    (92) factor -> auxFactor varcte .

    MULTI           reduce using rule 92 (factor -> auxFactor varcte .)
    DIVIDE          reduce using rule 92 (factor -> auxFactor varcte .)
    PLUS            reduce using rule 92 (factor -> auxFactor varcte .)
    MINUS           reduce using rule 92 (factor -> auxFactor varcte .)
    AND             reduce using rule 92 (factor -> auxFactor varcte .)
    OR              reduce using rule 92 (factor -> auxFactor varcte .)
    RPAREN          reduce using rule 92 (factor -> auxFactor varcte .)
    COMMA           reduce using rule 92 (factor -> auxFactor varcte .)
    RBRACKET        reduce using rule 92 (factor -> auxFactor varcte .)
    SEMICOLON       reduce using rule 92 (factor -> auxFactor varcte .)
    GTHAN           reduce using rule 92 (factor -> auxFactor varcte .)
    LTHAN           reduce using rule 92 (factor -> auxFactor varcte .)
    NOTEQUAL        reduce using rule 92 (factor -> auxFactor varcte .)
    GETHAN          reduce using rule 92 (factor -> auxFactor varcte .)
    LETHAN          reduce using rule 92 (factor -> auxFactor varcte .)
    EQUAL           reduce using rule 92 (factor -> auxFactor varcte .)


state 129

    (97) varcte -> CTEFLOAT . paso1 cteFloat assignDirectionCteFloat
    (133) paso1 -> .

    MULTI           reduce using rule 133 (paso1 -> .)
    DIVIDE          reduce using rule 133 (paso1 -> .)
    PLUS            reduce using rule 133 (paso1 -> .)
    MINUS           reduce using rule 133 (paso1 -> .)
    COMMA           reduce using rule 133 (paso1 -> .)
    RPAREN          reduce using rule 133 (paso1 -> .)
    SEMICOLON       reduce using rule 133 (paso1 -> .)
    GTHAN           reduce using rule 133 (paso1 -> .)
    LTHAN           reduce using rule 133 (paso1 -> .)
    NOTEQUAL        reduce using rule 133 (paso1 -> .)
    GETHAN          reduce using rule 133 (paso1 -> .)
    LETHAN          reduce using rule 133 (paso1 -> .)
    EQUAL           reduce using rule 133 (paso1 -> .)
    AND             reduce using rule 133 (paso1 -> .)
    OR              reduce using rule 133 (paso1 -> .)
    RBRACKET        reduce using rule 133 (paso1 -> .)

    paso1                          shift and go to state 171

state 130

    (101) varcte -> llamada .

    MULTI           reduce using rule 101 (varcte -> llamada .)
    DIVIDE          reduce using rule 101 (varcte -> llamada .)
    PLUS            reduce using rule 101 (varcte -> llamada .)
    MINUS           reduce using rule 101 (varcte -> llamada .)
    COMMA           reduce using rule 101 (varcte -> llamada .)
    RPAREN          reduce using rule 101 (varcte -> llamada .)
    SEMICOLON       reduce using rule 101 (varcte -> llamada .)
    GTHAN           reduce using rule 101 (varcte -> llamada .)
    LTHAN           reduce using rule 101 (varcte -> llamada .)
    NOTEQUAL        reduce using rule 101 (varcte -> llamada .)
    GETHAN          reduce using rule 101 (varcte -> llamada .)
    LETHAN          reduce using rule 101 (varcte -> llamada .)
    EQUAL           reduce using rule 101 (varcte -> llamada .)
    AND             reduce using rule 101 (varcte -> llamada .)
    OR              reduce using rule 101 (varcte -> llamada .)
    RBRACKET        reduce using rule 101 (varcte -> llamada .)


state 131

    (96) varcte -> CTEINT . paso1 cteInt assignDirectionCteInt
    (133) paso1 -> .

    MULTI           reduce using rule 133 (paso1 -> .)
    DIVIDE          reduce using rule 133 (paso1 -> .)
    PLUS            reduce using rule 133 (paso1 -> .)
    MINUS           reduce using rule 133 (paso1 -> .)
    COMMA           reduce using rule 133 (paso1 -> .)
    RPAREN          reduce using rule 133 (paso1 -> .)
    SEMICOLON       reduce using rule 133 (paso1 -> .)
    GTHAN           reduce using rule 133 (paso1 -> .)
    LTHAN           reduce using rule 133 (paso1 -> .)
    NOTEQUAL        reduce using rule 133 (paso1 -> .)
    GETHAN          reduce using rule 133 (paso1 -> .)
    LETHAN          reduce using rule 133 (paso1 -> .)
    EQUAL           reduce using rule 133 (paso1 -> .)
    AND             reduce using rule 133 (paso1 -> .)
    OR              reduce using rule 133 (paso1 -> .)
    RBRACKET        reduce using rule 133 (paso1 -> .)

    paso1                          shift and go to state 172

state 132

    (95) varcte -> ID . paso1 addType auxVarcte
    (133) paso1 -> .

    LPAREN          reduce using rule 133 (paso1 -> .)
    LBRACKET        reduce using rule 133 (paso1 -> .)
    MULTI           reduce using rule 133 (paso1 -> .)
    DIVIDE          reduce using rule 133 (paso1 -> .)
    PLUS            reduce using rule 133 (paso1 -> .)
    MINUS           reduce using rule 133 (paso1 -> .)
    COMMA           reduce using rule 133 (paso1 -> .)
    RPAREN          reduce using rule 133 (paso1 -> .)
    SEMICOLON       reduce using rule 133 (paso1 -> .)
    GTHAN           reduce using rule 133 (paso1 -> .)
    LTHAN           reduce using rule 133 (paso1 -> .)
    NOTEQUAL        reduce using rule 133 (paso1 -> .)
    GETHAN          reduce using rule 133 (paso1 -> .)
    LETHAN          reduce using rule 133 (paso1 -> .)
    EQUAL           reduce using rule 133 (paso1 -> .)
    AND             reduce using rule 133 (paso1 -> .)
    OR              reduce using rule 133 (paso1 -> .)
    RBRACKET        reduce using rule 133 (paso1 -> .)

    paso1                          shift and go to state 173

state 133

    (124) llamada -> CALL . COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28

    COLON           shift and go to state 174


state 134

    (99) varcte -> CTEBOOL . paso1 cteBool assignDirectionCteBool
    (133) paso1 -> .

    MULTI           reduce using rule 133 (paso1 -> .)
    DIVIDE          reduce using rule 133 (paso1 -> .)
    PLUS            reduce using rule 133 (paso1 -> .)
    MINUS           reduce using rule 133 (paso1 -> .)
    COMMA           reduce using rule 133 (paso1 -> .)
    RPAREN          reduce using rule 133 (paso1 -> .)
    SEMICOLON       reduce using rule 133 (paso1 -> .)
    GTHAN           reduce using rule 133 (paso1 -> .)
    LTHAN           reduce using rule 133 (paso1 -> .)
    NOTEQUAL        reduce using rule 133 (paso1 -> .)
    GETHAN          reduce using rule 133 (paso1 -> .)
    LETHAN          reduce using rule 133 (paso1 -> .)
    EQUAL           reduce using rule 133 (paso1 -> .)
    AND             reduce using rule 133 (paso1 -> .)
    OR              reduce using rule 133 (paso1 -> .)
    RBRACKET        reduce using rule 133 (paso1 -> .)

    paso1                          shift and go to state 175

state 135

    (123) ciclo -> WHILE paso15 LPAREN expAndOr . RPAREN paso16 bloque paso17

    RPAREN          shift and go to state 176


state 136

    (33) recursivo -> RETURN exp SEMICOLON . paso23
    (160) paso23 -> .

    RBRACE          reduce using rule 160 (paso23 -> .)

    paso23                         shift and go to state 177

state 137

    (54) asignacion -> ID paso1 addType auxAsignacion1 . EQUALA asig exp paso11 SEMICOLON

    EQUALA          shift and go to state 178


state 138

    (55) auxAsignacion1 -> LBRACKET . paso6b exp RBRACKET paso7b paso27
    (142) paso6b -> .

    LPAREN          reduce using rule 142 (paso6b -> .)
    PLUS            reduce using rule 142 (paso6b -> .)
    MINUS           reduce using rule 142 (paso6b -> .)
    ID              reduce using rule 142 (paso6b -> .)
    CTEINT          reduce using rule 142 (paso6b -> .)
    CTEFLOAT        reduce using rule 142 (paso6b -> .)
    CTECHAR         reduce using rule 142 (paso6b -> .)
    CTEBOOL         reduce using rule 142 (paso6b -> .)
    CTESTRING       reduce using rule 142 (paso6b -> .)
    CALL            reduce using rule 142 (paso6b -> .)

    paso6b                         shift and go to state 179

state 139

    (76) condicion -> IF LPAREN expAndOr paso12 . RPAREN bloque auxCondicion paso14

    RPAREN          shift and go to state 180


state 140

    (64) auxCicloExpresion -> AND . paso8_and cicloExpresion paso9 auxCicloExpresion
    (144) paso8_and -> .

    LPAREN          reduce using rule 144 (paso8_and -> .)
    PLUS            reduce using rule 144 (paso8_and -> .)
    MINUS           reduce using rule 144 (paso8_and -> .)
    ID              reduce using rule 144 (paso8_and -> .)
    CTEINT          reduce using rule 144 (paso8_and -> .)
    CTEFLOAT        reduce using rule 144 (paso8_and -> .)
    CTECHAR         reduce using rule 144 (paso8_and -> .)
    CTEBOOL         reduce using rule 144 (paso8_and -> .)
    CTESTRING       reduce using rule 144 (paso8_and -> .)
    CALL            reduce using rule 144 (paso8_and -> .)

    paso8_and                      shift and go to state 181

state 141

    (75) expAndOr -> cicloExpresion auxCicloExpresion .

    RPAREN          reduce using rule 75 (expAndOr -> cicloExpresion auxCicloExpresion .)


state 142

    (65) auxCicloExpresion -> OR . paso8_or cicloExpresion paso9 auxCicloExpresion
    (145) paso8_or -> .

    LPAREN          reduce using rule 145 (paso8_or -> .)
    PLUS            reduce using rule 145 (paso8_or -> .)
    MINUS           reduce using rule 145 (paso8_or -> .)
    ID              reduce using rule 145 (paso8_or -> .)
    CTEINT          reduce using rule 145 (paso8_or -> .)
    CTEFLOAT        reduce using rule 145 (paso8_or -> .)
    CTECHAR         reduce using rule 145 (paso8_or -> .)
    CTEBOOL         reduce using rule 145 (paso8_or -> .)
    CTESTRING       reduce using rule 145 (paso8_or -> .)
    CALL            reduce using rule 145 (paso8_or -> .)

    paso8_or                       shift and go to state 182

state 143

    (63) cicloExpresion -> expresion paso10 .

    AND             reduce using rule 63 (cicloExpresion -> expresion paso10 .)
    OR              reduce using rule 63 (cicloExpresion -> expresion paso10 .)
    RPAREN          reduce using rule 63 (cicloExpresion -> expresion paso10 .)


state 144

    (70) auxExpresion -> NOTEQUAL . diferente exp
    (178) diferente -> .

    LPAREN          reduce using rule 178 (diferente -> .)
    PLUS            reduce using rule 178 (diferente -> .)
    MINUS           reduce using rule 178 (diferente -> .)
    ID              reduce using rule 178 (diferente -> .)
    CTEINT          reduce using rule 178 (diferente -> .)
    CTEFLOAT        reduce using rule 178 (diferente -> .)
    CTECHAR         reduce using rule 178 (diferente -> .)
    CTEBOOL         reduce using rule 178 (diferente -> .)
    CTESTRING       reduce using rule 178 (diferente -> .)
    CALL            reduce using rule 178 (diferente -> .)

    diferente                      shift and go to state 183

state 145

    (67) expresion -> exp auxExpresion .

    AND             reduce using rule 67 (expresion -> exp auxExpresion .)
    OR              reduce using rule 67 (expresion -> exp auxExpresion .)
    RPAREN          reduce using rule 67 (expresion -> exp auxExpresion .)


state 146

    (68) auxExpresion -> GTHAN . mayor exp
    (173) mayor -> .

    LPAREN          reduce using rule 173 (mayor -> .)
    PLUS            reduce using rule 173 (mayor -> .)
    MINUS           reduce using rule 173 (mayor -> .)
    ID              reduce using rule 173 (mayor -> .)
    CTEINT          reduce using rule 173 (mayor -> .)
    CTEFLOAT        reduce using rule 173 (mayor -> .)
    CTECHAR         reduce using rule 173 (mayor -> .)
    CTEBOOL         reduce using rule 173 (mayor -> .)
    CTESTRING       reduce using rule 173 (mayor -> .)
    CALL            reduce using rule 173 (mayor -> .)

    mayor                          shift and go to state 184

state 147

    (73) auxExpresion -> EQUAL . igual exp
    (177) igual -> .

    LPAREN          reduce using rule 177 (igual -> .)
    PLUS            reduce using rule 177 (igual -> .)
    MINUS           reduce using rule 177 (igual -> .)
    ID              reduce using rule 177 (igual -> .)
    CTEINT          reduce using rule 177 (igual -> .)
    CTEFLOAT        reduce using rule 177 (igual -> .)
    CTECHAR         reduce using rule 177 (igual -> .)
    CTEBOOL         reduce using rule 177 (igual -> .)
    CTESTRING       reduce using rule 177 (igual -> .)
    CALL            reduce using rule 177 (igual -> .)

    igual                          shift and go to state 185

state 148

    (71) auxExpresion -> GETHAN . mayorIg exp
    (175) mayorIg -> .

    LPAREN          reduce using rule 175 (mayorIg -> .)
    PLUS            reduce using rule 175 (mayorIg -> .)
    MINUS           reduce using rule 175 (mayorIg -> .)
    ID              reduce using rule 175 (mayorIg -> .)
    CTEINT          reduce using rule 175 (mayorIg -> .)
    CTEFLOAT        reduce using rule 175 (mayorIg -> .)
    CTECHAR         reduce using rule 175 (mayorIg -> .)
    CTEBOOL         reduce using rule 175 (mayorIg -> .)
    CTESTRING       reduce using rule 175 (mayorIg -> .)
    CALL            reduce using rule 175 (mayorIg -> .)

    mayorIg                        shift and go to state 186

state 149

    (69) auxExpresion -> LTHAN . menor exp
    (174) menor -> .

    LPAREN          reduce using rule 174 (menor -> .)
    PLUS            reduce using rule 174 (menor -> .)
    MINUS           reduce using rule 174 (menor -> .)
    ID              reduce using rule 174 (menor -> .)
    CTEINT          reduce using rule 174 (menor -> .)
    CTEFLOAT        reduce using rule 174 (menor -> .)
    CTECHAR         reduce using rule 174 (menor -> .)
    CTEBOOL         reduce using rule 174 (menor -> .)
    CTESTRING       reduce using rule 174 (menor -> .)
    CALL            reduce using rule 174 (menor -> .)

    menor                          shift and go to state 187

state 150

    (72) auxExpresion -> LETHAN . menorIg exp
    (176) menorIg -> .

    LPAREN          reduce using rule 176 (menorIg -> .)
    PLUS            reduce using rule 176 (menorIg -> .)
    MINUS           reduce using rule 176 (menorIg -> .)
    ID              reduce using rule 176 (menorIg -> .)
    CTEINT          reduce using rule 176 (menorIg -> .)
    CTEFLOAT        reduce using rule 176 (menorIg -> .)
    CTECHAR         reduce using rule 176 (menorIg -> .)
    CTEBOOL         reduce using rule 176 (menorIg -> .)
    CTESTRING       reduce using rule 176 (menorIg -> .)
    CALL            reduce using rule 176 (menorIg -> .)

    menorIg                        shift and go to state 188

state 151

    (121) ambAuxParametros -> COMMA auxParametros .

    RPAREN          reduce using rule 121 (ambAuxParametros -> COMMA auxParametros .)


state 152

    (40) cicloVarsFuncion -> varsFuncion cicloVarsFuncion .

    ID              reduce using rule 40 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    IF              reduce using rule 40 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    PRINT           reduce using rule 40 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    WHILE           reduce using rule 40 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    RETURN          reduce using rule 40 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)


state 153

    (37) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 . cicloBloqueFuncion RETURN exp SEMICOLON RBRACE
    (38) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (39) cicloBloqueFuncion -> .
    (50) estatuto -> . asignacion
    (51) estatuto -> . condicion
    (52) estatuto -> . escritura
    (53) estatuto -> . ciclo
    (54) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (76) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (57) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (123) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RETURN          reduce using rule 39 (cicloBloqueFuncion -> .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    PRINT           shift and go to state 58
    WHILE           shift and go to state 59

    ciclo                          shift and go to state 60
    estatuto                       shift and go to state 189
    condicion                      shift and go to state 62
    cicloBloqueFuncion             shift and go to state 190
    asignacion                     shift and go to state 66
    escritura                      shift and go to state 67

state 154

    (42) varsFuncion -> createVariableDirFuncion VAR . auxVar1Funcion
    (44) auxVar1Funcion -> . idVarsFuncion COLON tipo addTypeFuncion SEMICOLON
    (46) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 193

    idVarsFuncion                  shift and go to state 191
    auxVar1Funcion                 shift and go to state 192

state 155

    (113) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 . paso22
    (159) paso22 -> .

    FUNCTION        reduce using rule 159 (paso22 -> .)
    MAIN            reduce using rule 159 (paso22 -> .)

    paso22                         shift and go to state 194

state 156

    (26) auxVar1Main -> idVarsMain COLON tipo addTypeMain . SEMICOLON

    SEMICOLON       shift and go to state 195


state 157

    (30) ambIdVarsMain -> COMMA idVarsMain .

    COLON           reduce using rule 30 (ambIdVarsMain -> COMMA idVarsMain .)


state 158

    (62) auxEscritura2 -> CTESTRING paso1 assignDirectionCteString .

    COMMA           reduce using rule 62 (auxEscritura2 -> CTESTRING paso1 assignDirectionCteString .)
    RPAREN          reduce using rule 62 (auxEscritura2 -> CTESTRING paso1 assignDirectionCteString .)


state 159

    (81) ambExp -> auxExp . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    cicloExp                       shift and go to state 196
    termino                        shift and go to state 89
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    auxExp                         shift and go to state 91
    cicloTermino                   shift and go to state 93

state 160

    (80) cicloExp -> termino paso4 ambExp .

    AND             reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    OR              reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    RPAREN          reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    SEMICOLON       reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    GTHAN           reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    LTHAN           reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    NOTEQUAL        reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    GETHAN          reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    LETHAN          reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    EQUAL           reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    RBRACKET        reduce using rule 80 (cicloExp -> termino paso4 ambExp .)
    COMMA           reduce using rule 80 (cicloExp -> termino paso4 ambExp .)


state 161

    (89) auxTermino -> MULTI . paso2_mult
    (134) paso2_mult -> .

    LPAREN          reduce using rule 134 (paso2_mult -> .)
    PLUS            reduce using rule 134 (paso2_mult -> .)
    MINUS           reduce using rule 134 (paso2_mult -> .)
    ID              reduce using rule 134 (paso2_mult -> .)
    CTEINT          reduce using rule 134 (paso2_mult -> .)
    CTEFLOAT        reduce using rule 134 (paso2_mult -> .)
    CTECHAR         reduce using rule 134 (paso2_mult -> .)
    CTEBOOL         reduce using rule 134 (paso2_mult -> .)
    CTESTRING       reduce using rule 134 (paso2_mult -> .)
    CALL            reduce using rule 134 (paso2_mult -> .)

    paso2_mult                     shift and go to state 197

state 162

    (86) cicloTermino -> factor paso5 ambCicloTermino .

    PLUS            reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    MINUS           reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    GTHAN           reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    LTHAN           reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    NOTEQUAL        reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    GETHAN          reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    LETHAN          reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    EQUAL           reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    AND             reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    OR              reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    RPAREN          reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    SEMICOLON       reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    COMMA           reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)
    RBRACKET        reduce using rule 86 (cicloTermino -> factor paso5 ambCicloTermino .)


state 163

    (87) ambCicloTermino -> auxTermino . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    cicloTermino                   shift and go to state 198
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99

state 164

    (90) auxTermino -> DIVIDE . paso2_div
    (135) paso2_div -> .

    LPAREN          reduce using rule 135 (paso2_div -> .)
    PLUS            reduce using rule 135 (paso2_div -> .)
    MINUS           reduce using rule 135 (paso2_div -> .)
    ID              reduce using rule 135 (paso2_div -> .)
    CTEINT          reduce using rule 135 (paso2_div -> .)
    CTEFLOAT        reduce using rule 135 (paso2_div -> .)
    CTECHAR         reduce using rule 135 (paso2_div -> .)
    CTEBOOL         reduce using rule 135 (paso2_div -> .)
    CTESTRING       reduce using rule 135 (paso2_div -> .)
    CALL            reduce using rule 135 (paso2_div -> .)

    paso2_div                      shift and go to state 199

state 165

    (57) escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .

    ID              reduce using rule 57 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 57 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 57 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 57 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 57 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 57 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)


state 166

    (59) ambAuxEscritura1 -> COMMA . auxEscritura1
    (58) auxEscritura1 -> . auxEscritura2 paso18 ambAuxEscritura1
    (61) auxEscritura2 -> . exp
    (62) auxEscritura2 -> . CTESTRING paso1 assignDirectionCteString
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 88
    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

  ! CTESTRING       [ reduce using rule 94 (auxFactor -> .) ]

    termino                        shift and go to state 89
    cicloTermino                   shift and go to state 93
    factor                         shift and go to state 94
    cicloExp                       shift and go to state 95
    auxEscritura1                  shift and go to state 200
    auxEscritura2                  shift and go to state 97
    auxFactor                      shift and go to state 99
    auxExp                         shift and go to state 91
    exp                            shift and go to state 100

state 167

    (58) auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1 .

    RPAREN          reduce using rule 58 (auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1 .)


state 168

    (91) factor -> LPAREN paso6 exp . RPAREN paso7

    RPAREN          shift and go to state 201


state 169

    (100) varcte -> CTESTRING paso1 . cteString assignDirectionCteString
    (171) cteString -> .

    MULTI           reduce using rule 171 (cteString -> .)
    DIVIDE          reduce using rule 171 (cteString -> .)
    PLUS            reduce using rule 171 (cteString -> .)
    MINUS           reduce using rule 171 (cteString -> .)
    COMMA           reduce using rule 171 (cteString -> .)
    RPAREN          reduce using rule 171 (cteString -> .)
    SEMICOLON       reduce using rule 171 (cteString -> .)
    GTHAN           reduce using rule 171 (cteString -> .)
    LTHAN           reduce using rule 171 (cteString -> .)
    NOTEQUAL        reduce using rule 171 (cteString -> .)
    GETHAN          reduce using rule 171 (cteString -> .)
    LETHAN          reduce using rule 171 (cteString -> .)
    EQUAL           reduce using rule 171 (cteString -> .)
    AND             reduce using rule 171 (cteString -> .)
    OR              reduce using rule 171 (cteString -> .)
    RBRACKET        reduce using rule 171 (cteString -> .)

    cteString                      shift and go to state 202

state 170

    (98) varcte -> CTECHAR paso1 . cteChar assignDirectionCteChar
    (169) cteChar -> .

    MULTI           reduce using rule 169 (cteChar -> .)
    DIVIDE          reduce using rule 169 (cteChar -> .)
    PLUS            reduce using rule 169 (cteChar -> .)
    MINUS           reduce using rule 169 (cteChar -> .)
    COMMA           reduce using rule 169 (cteChar -> .)
    RPAREN          reduce using rule 169 (cteChar -> .)
    SEMICOLON       reduce using rule 169 (cteChar -> .)
    GTHAN           reduce using rule 169 (cteChar -> .)
    LTHAN           reduce using rule 169 (cteChar -> .)
    NOTEQUAL        reduce using rule 169 (cteChar -> .)
    GETHAN          reduce using rule 169 (cteChar -> .)
    LETHAN          reduce using rule 169 (cteChar -> .)
    EQUAL           reduce using rule 169 (cteChar -> .)
    AND             reduce using rule 169 (cteChar -> .)
    OR              reduce using rule 169 (cteChar -> .)
    RBRACKET        reduce using rule 169 (cteChar -> .)

    cteChar                        shift and go to state 203

state 171

    (97) varcte -> CTEFLOAT paso1 . cteFloat assignDirectionCteFloat
    (168) cteFloat -> .

    MULTI           reduce using rule 168 (cteFloat -> .)
    DIVIDE          reduce using rule 168 (cteFloat -> .)
    PLUS            reduce using rule 168 (cteFloat -> .)
    MINUS           reduce using rule 168 (cteFloat -> .)
    COMMA           reduce using rule 168 (cteFloat -> .)
    RPAREN          reduce using rule 168 (cteFloat -> .)
    SEMICOLON       reduce using rule 168 (cteFloat -> .)
    GTHAN           reduce using rule 168 (cteFloat -> .)
    LTHAN           reduce using rule 168 (cteFloat -> .)
    NOTEQUAL        reduce using rule 168 (cteFloat -> .)
    GETHAN          reduce using rule 168 (cteFloat -> .)
    LETHAN          reduce using rule 168 (cteFloat -> .)
    EQUAL           reduce using rule 168 (cteFloat -> .)
    AND             reduce using rule 168 (cteFloat -> .)
    OR              reduce using rule 168 (cteFloat -> .)
    RBRACKET        reduce using rule 168 (cteFloat -> .)

    cteFloat                       shift and go to state 204

state 172

    (96) varcte -> CTEINT paso1 . cteInt assignDirectionCteInt
    (167) cteInt -> .

    MULTI           reduce using rule 167 (cteInt -> .)
    DIVIDE          reduce using rule 167 (cteInt -> .)
    PLUS            reduce using rule 167 (cteInt -> .)
    MINUS           reduce using rule 167 (cteInt -> .)
    COMMA           reduce using rule 167 (cteInt -> .)
    RPAREN          reduce using rule 167 (cteInt -> .)
    SEMICOLON       reduce using rule 167 (cteInt -> .)
    GTHAN           reduce using rule 167 (cteInt -> .)
    LTHAN           reduce using rule 167 (cteInt -> .)
    NOTEQUAL        reduce using rule 167 (cteInt -> .)
    GETHAN          reduce using rule 167 (cteInt -> .)
    LETHAN          reduce using rule 167 (cteInt -> .)
    EQUAL           reduce using rule 167 (cteInt -> .)
    AND             reduce using rule 167 (cteInt -> .)
    OR              reduce using rule 167 (cteInt -> .)
    RBRACKET        reduce using rule 167 (cteInt -> .)

    cteInt                         shift and go to state 205

state 173

    (95) varcte -> ID paso1 . addType auxVarcte
    (107) addType -> .

    LPAREN          reduce using rule 107 (addType -> .)
    LBRACKET        reduce using rule 107 (addType -> .)
    MULTI           reduce using rule 107 (addType -> .)
    DIVIDE          reduce using rule 107 (addType -> .)
    PLUS            reduce using rule 107 (addType -> .)
    MINUS           reduce using rule 107 (addType -> .)
    COMMA           reduce using rule 107 (addType -> .)
    RPAREN          reduce using rule 107 (addType -> .)
    SEMICOLON       reduce using rule 107 (addType -> .)
    GTHAN           reduce using rule 107 (addType -> .)
    LTHAN           reduce using rule 107 (addType -> .)
    NOTEQUAL        reduce using rule 107 (addType -> .)
    GETHAN          reduce using rule 107 (addType -> .)
    LETHAN          reduce using rule 107 (addType -> .)
    EQUAL           reduce using rule 107 (addType -> .)
    AND             reduce using rule 107 (addType -> .)
    OR              reduce using rule 107 (addType -> .)
    RBRACKET        reduce using rule 107 (addType -> .)

    addType                        shift and go to state 206

state 174

    (124) llamada -> CALL COLON . ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28

    ID              shift and go to state 207


state 175

    (99) varcte -> CTEBOOL paso1 . cteBool assignDirectionCteBool
    (170) cteBool -> .

    MULTI           reduce using rule 170 (cteBool -> .)
    DIVIDE          reduce using rule 170 (cteBool -> .)
    PLUS            reduce using rule 170 (cteBool -> .)
    MINUS           reduce using rule 170 (cteBool -> .)
    COMMA           reduce using rule 170 (cteBool -> .)
    RPAREN          reduce using rule 170 (cteBool -> .)
    SEMICOLON       reduce using rule 170 (cteBool -> .)
    GTHAN           reduce using rule 170 (cteBool -> .)
    LTHAN           reduce using rule 170 (cteBool -> .)
    NOTEQUAL        reduce using rule 170 (cteBool -> .)
    GETHAN          reduce using rule 170 (cteBool -> .)
    LETHAN          reduce using rule 170 (cteBool -> .)
    EQUAL           reduce using rule 170 (cteBool -> .)
    AND             reduce using rule 170 (cteBool -> .)
    OR              reduce using rule 170 (cteBool -> .)
    RBRACKET        reduce using rule 170 (cteBool -> .)

    cteBool                        shift and go to state 208

state 176

    (123) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN . paso16 bloque paso17
    (153) paso16 -> .

    LBRACE          reduce using rule 153 (paso16 -> .)

    paso16                         shift and go to state 209

state 177

    (33) recursivo -> RETURN exp SEMICOLON paso23 .

    RBRACE          reduce using rule 33 (recursivo -> RETURN exp SEMICOLON paso23 .)


state 178

    (54) asignacion -> ID paso1 addType auxAsignacion1 EQUALA . asig exp paso11 SEMICOLON
    (179) asig -> .

    LPAREN          reduce using rule 179 (asig -> .)
    PLUS            reduce using rule 179 (asig -> .)
    MINUS           reduce using rule 179 (asig -> .)
    ID              reduce using rule 179 (asig -> .)
    CTEINT          reduce using rule 179 (asig -> .)
    CTEFLOAT        reduce using rule 179 (asig -> .)
    CTECHAR         reduce using rule 179 (asig -> .)
    CTEBOOL         reduce using rule 179 (asig -> .)
    CTESTRING       reduce using rule 179 (asig -> .)
    CALL            reduce using rule 179 (asig -> .)

    asig                           shift and go to state 210

state 179

    (55) auxAsignacion1 -> LBRACKET paso6b . exp RBRACKET paso7b paso27
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    termino                        shift and go to state 89
    exp                            shift and go to state 211
    factor                         shift and go to state 94
    auxExp                         shift and go to state 91
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 180

    (76) condicion -> IF LPAREN expAndOr paso12 RPAREN . bloque auxCondicion paso14
    (32) bloque -> . LBRACE cicloVarsMain cicloBloque recursivo RBRACE

    LBRACE          shift and go to state 39

    bloque                         shift and go to state 212

state 181

    (64) auxCicloExpresion -> AND paso8_and . cicloExpresion paso9 auxCicloExpresion
    (63) cicloExpresion -> . expresion paso10
    (67) expresion -> . exp auxExpresion
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    termino                        shift and go to state 89
    cicloExpresion                 shift and go to state 213
    cicloTermino                   shift and go to state 93
    factor                         shift and go to state 94
    cicloExp                       shift and go to state 95
    auxFactor                      shift and go to state 99
    auxExp                         shift and go to state 91
    expresion                      shift and go to state 107
    exp                            shift and go to state 108

state 182

    (65) auxCicloExpresion -> OR paso8_or . cicloExpresion paso9 auxCicloExpresion
    (63) cicloExpresion -> . expresion paso10
    (67) expresion -> . exp auxExpresion
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    termino                        shift and go to state 89
    cicloExpresion                 shift and go to state 214
    cicloTermino                   shift and go to state 93
    factor                         shift and go to state 94
    cicloExp                       shift and go to state 95
    auxFactor                      shift and go to state 99
    auxExp                         shift and go to state 91
    expresion                      shift and go to state 107
    exp                            shift and go to state 108

state 183

    (70) auxExpresion -> NOTEQUAL diferente . exp
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    termino                        shift and go to state 89
    exp                            shift and go to state 215
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 184

    (68) auxExpresion -> GTHAN mayor . exp
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    cicloExp                       shift and go to state 95
    termino                        shift and go to state 89
    exp                            shift and go to state 216
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    cicloTermino                   shift and go to state 93

state 185

    (73) auxExpresion -> EQUAL igual . exp
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    termino                        shift and go to state 89
    exp                            shift and go to state 217
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 186

    (71) auxExpresion -> GETHAN mayorIg . exp
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    termino                        shift and go to state 89
    exp                            shift and go to state 218
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 187

    (69) auxExpresion -> LTHAN menor . exp
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    termino                        shift and go to state 89
    exp                            shift and go to state 219
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 188

    (72) auxExpresion -> LETHAN menorIg . exp
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    termino                        shift and go to state 89
    exp                            shift and go to state 220
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 189

    (38) cicloBloqueFuncion -> estatuto . cicloBloqueFuncion
    (38) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (39) cicloBloqueFuncion -> .
    (50) estatuto -> . asignacion
    (51) estatuto -> . condicion
    (52) estatuto -> . escritura
    (53) estatuto -> . ciclo
    (54) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (76) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (57) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (123) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RETURN          reduce using rule 39 (cicloBloqueFuncion -> .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    PRINT           shift and go to state 58
    WHILE           shift and go to state 59

    ciclo                          shift and go to state 60
    asignacion                     shift and go to state 66
    estatuto                       shift and go to state 189
    condicion                      shift and go to state 62
    cicloBloqueFuncion             shift and go to state 221
    escritura                      shift and go to state 67

state 190

    (37) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion . RETURN exp SEMICOLON RBRACE

    RETURN          shift and go to state 222


state 191

    (44) auxVar1Funcion -> idVarsFuncion . COLON tipo addTypeFuncion SEMICOLON

    COLON           shift and go to state 223


state 192

    (42) varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .

    VAR             reduce using rule 42 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    ID              reduce using rule 42 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    IF              reduce using rule 42 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    PRINT           reduce using rule 42 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    WHILE           reduce using rule 42 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    RETURN          reduce using rule 42 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)


state 193

    (46) idVarsFuncion -> ID . addVariableDirFuncion ambIdVarsFuncion
    (47) addVariableDirFuncion -> .

    COMMA           reduce using rule 47 (addVariableDirFuncion -> .)
    COLON           reduce using rule 47 (addVariableDirFuncion -> .)

    addVariableDirFuncion          shift and go to state 224

state 194

    (113) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22 .

    FUNCTION        reduce using rule 113 (funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22 .)
    MAIN            reduce using rule 113 (funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22 .)


state 195

    (26) auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .

    VAR             reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    ID              reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    IF              reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    PRINT           reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    WHILE           reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    RETURN          reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    RBRACE          reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)


state 196

    (81) ambExp -> auxExp cicloExp .

    COMMA           reduce using rule 81 (ambExp -> auxExp cicloExp .)
    RPAREN          reduce using rule 81 (ambExp -> auxExp cicloExp .)
    SEMICOLON       reduce using rule 81 (ambExp -> auxExp cicloExp .)
    GTHAN           reduce using rule 81 (ambExp -> auxExp cicloExp .)
    LTHAN           reduce using rule 81 (ambExp -> auxExp cicloExp .)
    NOTEQUAL        reduce using rule 81 (ambExp -> auxExp cicloExp .)
    GETHAN          reduce using rule 81 (ambExp -> auxExp cicloExp .)
    LETHAN          reduce using rule 81 (ambExp -> auxExp cicloExp .)
    EQUAL           reduce using rule 81 (ambExp -> auxExp cicloExp .)
    AND             reduce using rule 81 (ambExp -> auxExp cicloExp .)
    OR              reduce using rule 81 (ambExp -> auxExp cicloExp .)
    RBRACKET        reduce using rule 81 (ambExp -> auxExp cicloExp .)


state 197

    (89) auxTermino -> MULTI paso2_mult .

    LPAREN          reduce using rule 89 (auxTermino -> MULTI paso2_mult .)
    PLUS            reduce using rule 89 (auxTermino -> MULTI paso2_mult .)
    MINUS           reduce using rule 89 (auxTermino -> MULTI paso2_mult .)
    ID              reduce using rule 89 (auxTermino -> MULTI paso2_mult .)
    CTEINT          reduce using rule 89 (auxTermino -> MULTI paso2_mult .)
    CTEFLOAT        reduce using rule 89 (auxTermino -> MULTI paso2_mult .)
    CTECHAR         reduce using rule 89 (auxTermino -> MULTI paso2_mult .)
    CTEBOOL         reduce using rule 89 (auxTermino -> MULTI paso2_mult .)
    CTESTRING       reduce using rule 89 (auxTermino -> MULTI paso2_mult .)
    CALL            reduce using rule 89 (auxTermino -> MULTI paso2_mult .)


state 198

    (87) ambCicloTermino -> auxTermino cicloTermino .

    PLUS            reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    MINUS           reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    COMMA           reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    RPAREN          reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    SEMICOLON       reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    GTHAN           reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    LTHAN           reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    NOTEQUAL        reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    GETHAN          reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    LETHAN          reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    EQUAL           reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    AND             reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    OR              reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)
    RBRACKET        reduce using rule 87 (ambCicloTermino -> auxTermino cicloTermino .)


state 199

    (90) auxTermino -> DIVIDE paso2_div .

    LPAREN          reduce using rule 90 (auxTermino -> DIVIDE paso2_div .)
    PLUS            reduce using rule 90 (auxTermino -> DIVIDE paso2_div .)
    MINUS           reduce using rule 90 (auxTermino -> DIVIDE paso2_div .)
    ID              reduce using rule 90 (auxTermino -> DIVIDE paso2_div .)
    CTEINT          reduce using rule 90 (auxTermino -> DIVIDE paso2_div .)
    CTEFLOAT        reduce using rule 90 (auxTermino -> DIVIDE paso2_div .)
    CTECHAR         reduce using rule 90 (auxTermino -> DIVIDE paso2_div .)
    CTEBOOL         reduce using rule 90 (auxTermino -> DIVIDE paso2_div .)
    CTESTRING       reduce using rule 90 (auxTermino -> DIVIDE paso2_div .)
    CALL            reduce using rule 90 (auxTermino -> DIVIDE paso2_div .)


state 200

    (59) ambAuxEscritura1 -> COMMA auxEscritura1 .

    RPAREN          reduce using rule 59 (ambAuxEscritura1 -> COMMA auxEscritura1 .)


state 201

    (91) factor -> LPAREN paso6 exp RPAREN . paso7
    (141) paso7 -> .

    MULTI           reduce using rule 141 (paso7 -> .)
    DIVIDE          reduce using rule 141 (paso7 -> .)
    PLUS            reduce using rule 141 (paso7 -> .)
    MINUS           reduce using rule 141 (paso7 -> .)
    COMMA           reduce using rule 141 (paso7 -> .)
    RPAREN          reduce using rule 141 (paso7 -> .)
    SEMICOLON       reduce using rule 141 (paso7 -> .)
    GTHAN           reduce using rule 141 (paso7 -> .)
    LTHAN           reduce using rule 141 (paso7 -> .)
    NOTEQUAL        reduce using rule 141 (paso7 -> .)
    GETHAN          reduce using rule 141 (paso7 -> .)
    LETHAN          reduce using rule 141 (paso7 -> .)
    EQUAL           reduce using rule 141 (paso7 -> .)
    AND             reduce using rule 141 (paso7 -> .)
    OR              reduce using rule 141 (paso7 -> .)
    RBRACKET        reduce using rule 141 (paso7 -> .)

    paso7                          shift and go to state 225

state 202

    (100) varcte -> CTESTRING paso1 cteString . assignDirectionCteString
    (106) assignDirectionCteString -> .

    MULTI           reduce using rule 106 (assignDirectionCteString -> .)
    DIVIDE          reduce using rule 106 (assignDirectionCteString -> .)
    PLUS            reduce using rule 106 (assignDirectionCteString -> .)
    MINUS           reduce using rule 106 (assignDirectionCteString -> .)
    COMMA           reduce using rule 106 (assignDirectionCteString -> .)
    RPAREN          reduce using rule 106 (assignDirectionCteString -> .)
    SEMICOLON       reduce using rule 106 (assignDirectionCteString -> .)
    GTHAN           reduce using rule 106 (assignDirectionCteString -> .)
    LTHAN           reduce using rule 106 (assignDirectionCteString -> .)
    NOTEQUAL        reduce using rule 106 (assignDirectionCteString -> .)
    GETHAN          reduce using rule 106 (assignDirectionCteString -> .)
    LETHAN          reduce using rule 106 (assignDirectionCteString -> .)
    EQUAL           reduce using rule 106 (assignDirectionCteString -> .)
    AND             reduce using rule 106 (assignDirectionCteString -> .)
    OR              reduce using rule 106 (assignDirectionCteString -> .)
    RBRACKET        reduce using rule 106 (assignDirectionCteString -> .)

    assignDirectionCteString       shift and go to state 226

state 203

    (98) varcte -> CTECHAR paso1 cteChar . assignDirectionCteChar
    (104) assignDirectionCteChar -> .

    MULTI           reduce using rule 104 (assignDirectionCteChar -> .)
    DIVIDE          reduce using rule 104 (assignDirectionCteChar -> .)
    PLUS            reduce using rule 104 (assignDirectionCteChar -> .)
    MINUS           reduce using rule 104 (assignDirectionCteChar -> .)
    COMMA           reduce using rule 104 (assignDirectionCteChar -> .)
    RPAREN          reduce using rule 104 (assignDirectionCteChar -> .)
    SEMICOLON       reduce using rule 104 (assignDirectionCteChar -> .)
    GTHAN           reduce using rule 104 (assignDirectionCteChar -> .)
    LTHAN           reduce using rule 104 (assignDirectionCteChar -> .)
    NOTEQUAL        reduce using rule 104 (assignDirectionCteChar -> .)
    GETHAN          reduce using rule 104 (assignDirectionCteChar -> .)
    LETHAN          reduce using rule 104 (assignDirectionCteChar -> .)
    EQUAL           reduce using rule 104 (assignDirectionCteChar -> .)
    AND             reduce using rule 104 (assignDirectionCteChar -> .)
    OR              reduce using rule 104 (assignDirectionCteChar -> .)
    RBRACKET        reduce using rule 104 (assignDirectionCteChar -> .)

    assignDirectionCteChar         shift and go to state 227

state 204

    (97) varcte -> CTEFLOAT paso1 cteFloat . assignDirectionCteFloat
    (103) assignDirectionCteFloat -> .

    MULTI           reduce using rule 103 (assignDirectionCteFloat -> .)
    DIVIDE          reduce using rule 103 (assignDirectionCteFloat -> .)
    PLUS            reduce using rule 103 (assignDirectionCteFloat -> .)
    MINUS           reduce using rule 103 (assignDirectionCteFloat -> .)
    COMMA           reduce using rule 103 (assignDirectionCteFloat -> .)
    RPAREN          reduce using rule 103 (assignDirectionCteFloat -> .)
    SEMICOLON       reduce using rule 103 (assignDirectionCteFloat -> .)
    GTHAN           reduce using rule 103 (assignDirectionCteFloat -> .)
    LTHAN           reduce using rule 103 (assignDirectionCteFloat -> .)
    NOTEQUAL        reduce using rule 103 (assignDirectionCteFloat -> .)
    GETHAN          reduce using rule 103 (assignDirectionCteFloat -> .)
    LETHAN          reduce using rule 103 (assignDirectionCteFloat -> .)
    EQUAL           reduce using rule 103 (assignDirectionCteFloat -> .)
    AND             reduce using rule 103 (assignDirectionCteFloat -> .)
    OR              reduce using rule 103 (assignDirectionCteFloat -> .)
    RBRACKET        reduce using rule 103 (assignDirectionCteFloat -> .)

    assignDirectionCteFloat        shift and go to state 228

state 205

    (96) varcte -> CTEINT paso1 cteInt . assignDirectionCteInt
    (102) assignDirectionCteInt -> .

    MULTI           reduce using rule 102 (assignDirectionCteInt -> .)
    DIVIDE          reduce using rule 102 (assignDirectionCteInt -> .)
    PLUS            reduce using rule 102 (assignDirectionCteInt -> .)
    MINUS           reduce using rule 102 (assignDirectionCteInt -> .)
    COMMA           reduce using rule 102 (assignDirectionCteInt -> .)
    RPAREN          reduce using rule 102 (assignDirectionCteInt -> .)
    SEMICOLON       reduce using rule 102 (assignDirectionCteInt -> .)
    GTHAN           reduce using rule 102 (assignDirectionCteInt -> .)
    LTHAN           reduce using rule 102 (assignDirectionCteInt -> .)
    NOTEQUAL        reduce using rule 102 (assignDirectionCteInt -> .)
    GETHAN          reduce using rule 102 (assignDirectionCteInt -> .)
    LETHAN          reduce using rule 102 (assignDirectionCteInt -> .)
    EQUAL           reduce using rule 102 (assignDirectionCteInt -> .)
    AND             reduce using rule 102 (assignDirectionCteInt -> .)
    OR              reduce using rule 102 (assignDirectionCteInt -> .)
    RBRACKET        reduce using rule 102 (assignDirectionCteInt -> .)

    assignDirectionCteInt          shift and go to state 229

state 206

    (95) varcte -> ID paso1 addType . auxVarcte
    (108) auxVarcte -> . LPAREN exp RPAREN
    (109) auxVarcte -> . LBRACKET paso6b exp RBRACKET paso7b paso27
    (110) auxVarcte -> .

    LPAREN          shift and go to state 230
    LBRACKET        shift and go to state 231
    MULTI           reduce using rule 110 (auxVarcte -> .)
    DIVIDE          reduce using rule 110 (auxVarcte -> .)
    PLUS            reduce using rule 110 (auxVarcte -> .)
    MINUS           reduce using rule 110 (auxVarcte -> .)
    COMMA           reduce using rule 110 (auxVarcte -> .)
    RPAREN          reduce using rule 110 (auxVarcte -> .)
    SEMICOLON       reduce using rule 110 (auxVarcte -> .)
    GTHAN           reduce using rule 110 (auxVarcte -> .)
    LTHAN           reduce using rule 110 (auxVarcte -> .)
    NOTEQUAL        reduce using rule 110 (auxVarcte -> .)
    GETHAN          reduce using rule 110 (auxVarcte -> .)
    LETHAN          reduce using rule 110 (auxVarcte -> .)
    EQUAL           reduce using rule 110 (auxVarcte -> .)
    AND             reduce using rule 110 (auxVarcte -> .)
    OR              reduce using rule 110 (auxVarcte -> .)
    RBRACKET        reduce using rule 110 (auxVarcte -> .)

    auxVarcte                      shift and go to state 232

state 207

    (124) llamada -> CALL COLON ID . paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28
    (161) paso24 -> .

    LPAREN          reduce using rule 161 (paso24 -> .)

    paso24                         shift and go to state 233

state 208

    (99) varcte -> CTEBOOL paso1 cteBool . assignDirectionCteBool
    (105) assignDirectionCteBool -> .

    MULTI           reduce using rule 105 (assignDirectionCteBool -> .)
    DIVIDE          reduce using rule 105 (assignDirectionCteBool -> .)
    PLUS            reduce using rule 105 (assignDirectionCteBool -> .)
    MINUS           reduce using rule 105 (assignDirectionCteBool -> .)
    COMMA           reduce using rule 105 (assignDirectionCteBool -> .)
    RPAREN          reduce using rule 105 (assignDirectionCteBool -> .)
    SEMICOLON       reduce using rule 105 (assignDirectionCteBool -> .)
    GTHAN           reduce using rule 105 (assignDirectionCteBool -> .)
    LTHAN           reduce using rule 105 (assignDirectionCteBool -> .)
    NOTEQUAL        reduce using rule 105 (assignDirectionCteBool -> .)
    GETHAN          reduce using rule 105 (assignDirectionCteBool -> .)
    LETHAN          reduce using rule 105 (assignDirectionCteBool -> .)
    EQUAL           reduce using rule 105 (assignDirectionCteBool -> .)
    AND             reduce using rule 105 (assignDirectionCteBool -> .)
    OR              reduce using rule 105 (assignDirectionCteBool -> .)
    RBRACKET        reduce using rule 105 (assignDirectionCteBool -> .)

    assignDirectionCteBool         shift and go to state 234

state 209

    (123) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 . bloque paso17
    (32) bloque -> . LBRACE cicloVarsMain cicloBloque recursivo RBRACE

    LBRACE          shift and go to state 39

    bloque                         shift and go to state 235

state 210

    (54) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig . exp paso11 SEMICOLON
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    cicloTermino                   shift and go to state 93
    termino                        shift and go to state 89
    exp                            shift and go to state 236
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95

state 211

    (55) auxAsignacion1 -> LBRACKET paso6b exp . RBRACKET paso7b paso27

    RBRACKET        shift and go to state 237


state 212

    (76) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque . auxCondicion paso14
    (77) auxCondicion -> . ELSE paso13 bloque
    (78) auxCondicion -> .

    ELSE            shift and go to state 239
    ID              reduce using rule 78 (auxCondicion -> .)
    IF              reduce using rule 78 (auxCondicion -> .)
    PRINT           reduce using rule 78 (auxCondicion -> .)
    WHILE           reduce using rule 78 (auxCondicion -> .)
    RETURN          reduce using rule 78 (auxCondicion -> .)
    RBRACE          reduce using rule 78 (auxCondicion -> .)

    auxCondicion                   shift and go to state 238

state 213

    (64) auxCicloExpresion -> AND paso8_and cicloExpresion . paso9 auxCicloExpresion
    (146) paso9 -> .

    AND             reduce using rule 146 (paso9 -> .)
    OR              reduce using rule 146 (paso9 -> .)
    RPAREN          reduce using rule 146 (paso9 -> .)

    paso9                          shift and go to state 240

state 214

    (65) auxCicloExpresion -> OR paso8_or cicloExpresion . paso9 auxCicloExpresion
    (146) paso9 -> .

    AND             reduce using rule 146 (paso9 -> .)
    OR              reduce using rule 146 (paso9 -> .)
    RPAREN          reduce using rule 146 (paso9 -> .)

    paso9                          shift and go to state 241

state 215

    (70) auxExpresion -> NOTEQUAL diferente exp .

    AND             reduce using rule 70 (auxExpresion -> NOTEQUAL diferente exp .)
    OR              reduce using rule 70 (auxExpresion -> NOTEQUAL diferente exp .)
    RPAREN          reduce using rule 70 (auxExpresion -> NOTEQUAL diferente exp .)


state 216

    (68) auxExpresion -> GTHAN mayor exp .

    AND             reduce using rule 68 (auxExpresion -> GTHAN mayor exp .)
    OR              reduce using rule 68 (auxExpresion -> GTHAN mayor exp .)
    RPAREN          reduce using rule 68 (auxExpresion -> GTHAN mayor exp .)


state 217

    (73) auxExpresion -> EQUAL igual exp .

    AND             reduce using rule 73 (auxExpresion -> EQUAL igual exp .)
    OR              reduce using rule 73 (auxExpresion -> EQUAL igual exp .)
    RPAREN          reduce using rule 73 (auxExpresion -> EQUAL igual exp .)


state 218

    (71) auxExpresion -> GETHAN mayorIg exp .

    AND             reduce using rule 71 (auxExpresion -> GETHAN mayorIg exp .)
    OR              reduce using rule 71 (auxExpresion -> GETHAN mayorIg exp .)
    RPAREN          reduce using rule 71 (auxExpresion -> GETHAN mayorIg exp .)


state 219

    (69) auxExpresion -> LTHAN menor exp .

    AND             reduce using rule 69 (auxExpresion -> LTHAN menor exp .)
    OR              reduce using rule 69 (auxExpresion -> LTHAN menor exp .)
    RPAREN          reduce using rule 69 (auxExpresion -> LTHAN menor exp .)


state 220

    (72) auxExpresion -> LETHAN menorIg exp .

    AND             reduce using rule 72 (auxExpresion -> LETHAN menorIg exp .)
    OR              reduce using rule 72 (auxExpresion -> LETHAN menorIg exp .)
    RPAREN          reduce using rule 72 (auxExpresion -> LETHAN menorIg exp .)


state 221

    (38) cicloBloqueFuncion -> estatuto cicloBloqueFuncion .

    RETURN          reduce using rule 38 (cicloBloqueFuncion -> estatuto cicloBloqueFuncion .)


state 222

    (37) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN . exp SEMICOLON RBRACE
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    termino                        shift and go to state 89
    exp                            shift and go to state 242
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 223

    (44) auxVar1Funcion -> idVarsFuncion COLON . tipo addTypeFuncion SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 243

state 224

    (46) idVarsFuncion -> ID addVariableDirFuncion . ambIdVarsFuncion
    (48) ambIdVarsFuncion -> . COMMA idVarsFuncion
    (49) ambIdVarsFuncion -> .

    COMMA           shift and go to state 245
    COLON           reduce using rule 49 (ambIdVarsFuncion -> .)

    ambIdVarsFuncion               shift and go to state 244

state 225

    (91) factor -> LPAREN paso6 exp RPAREN paso7 .

    MULTI           reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    DIVIDE          reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    PLUS            reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    MINUS           reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    AND             reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    OR              reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RPAREN          reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    COMMA           reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RBRACKET        reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    SEMICOLON       reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    GTHAN           reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LTHAN           reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    NOTEQUAL        reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    GETHAN          reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LETHAN          reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    EQUAL           reduce using rule 91 (factor -> LPAREN paso6 exp RPAREN paso7 .)


state 226

    (100) varcte -> CTESTRING paso1 cteString assignDirectionCteString .

    MULTI           reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    DIVIDE          reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    PLUS            reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    MINUS           reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    COMMA           reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    RPAREN          reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    SEMICOLON       reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    GTHAN           reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    LTHAN           reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    NOTEQUAL        reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    GETHAN          reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    LETHAN          reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    EQUAL           reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    AND             reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    OR              reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    RBRACKET        reduce using rule 100 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)


state 227

    (98) varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .

    MULTI           reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    DIVIDE          reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    PLUS            reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    MINUS           reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    COMMA           reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    RPAREN          reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    SEMICOLON       reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    GTHAN           reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    LTHAN           reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    NOTEQUAL        reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    GETHAN          reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    LETHAN          reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    EQUAL           reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    AND             reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    OR              reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    RBRACKET        reduce using rule 98 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)


state 228

    (97) varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .

    MULTI           reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    DIVIDE          reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    PLUS            reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    MINUS           reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    COMMA           reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    RPAREN          reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    SEMICOLON       reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    GTHAN           reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    LTHAN           reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    NOTEQUAL        reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    GETHAN          reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    LETHAN          reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    EQUAL           reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    AND             reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    OR              reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    RBRACKET        reduce using rule 97 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)


state 229

    (96) varcte -> CTEINT paso1 cteInt assignDirectionCteInt .

    MULTI           reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    DIVIDE          reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    PLUS            reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    MINUS           reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    COMMA           reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    RPAREN          reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    SEMICOLON       reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    GTHAN           reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    LTHAN           reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    NOTEQUAL        reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    GETHAN          reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    LETHAN          reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    EQUAL           reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    AND             reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    OR              reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    RBRACKET        reduce using rule 96 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)


state 230

    (108) auxVarcte -> LPAREN . exp RPAREN
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    termino                        shift and go to state 89
    exp                            shift and go to state 246
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 231

    (109) auxVarcte -> LBRACKET . paso6b exp RBRACKET paso7b paso27
    (142) paso6b -> .

    LPAREN          reduce using rule 142 (paso6b -> .)
    PLUS            reduce using rule 142 (paso6b -> .)
    MINUS           reduce using rule 142 (paso6b -> .)
    ID              reduce using rule 142 (paso6b -> .)
    CTEINT          reduce using rule 142 (paso6b -> .)
    CTEFLOAT        reduce using rule 142 (paso6b -> .)
    CTECHAR         reduce using rule 142 (paso6b -> .)
    CTEBOOL         reduce using rule 142 (paso6b -> .)
    CTESTRING       reduce using rule 142 (paso6b -> .)
    CALL            reduce using rule 142 (paso6b -> .)

    paso6b                         shift and go to state 247

state 232

    (95) varcte -> ID paso1 addType auxVarcte .

    MULTI           reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    DIVIDE          reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    PLUS            reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    MINUS           reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    COMMA           reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    RPAREN          reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    SEMICOLON       reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    GTHAN           reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    LTHAN           reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    NOTEQUAL        reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    GETHAN          reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    LETHAN          reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    EQUAL           reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    AND             reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    OR              reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)
    RBRACKET        reduce using rule 95 (varcte -> ID paso1 addType auxVarcte .)


state 233

    (124) llamada -> CALL COLON ID paso24 . cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28
    (172) cteLlamada -> .

    LPAREN          reduce using rule 172 (cteLlamada -> .)

    cteLlamada                     shift and go to state 248

state 234

    (99) varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .

    MULTI           reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    DIVIDE          reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    PLUS            reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    MINUS           reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    COMMA           reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    RPAREN          reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    SEMICOLON       reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    GTHAN           reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    LTHAN           reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    NOTEQUAL        reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    GETHAN          reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    LETHAN          reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    EQUAL           reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    AND             reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    OR              reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    RBRACKET        reduce using rule 99 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)


state 235

    (123) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque . paso17
    (154) paso17 -> .

    ID              reduce using rule 154 (paso17 -> .)
    IF              reduce using rule 154 (paso17 -> .)
    PRINT           reduce using rule 154 (paso17 -> .)
    WHILE           reduce using rule 154 (paso17 -> .)
    RETURN          reduce using rule 154 (paso17 -> .)
    RBRACE          reduce using rule 154 (paso17 -> .)

    paso17                         shift and go to state 249

state 236

    (54) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp . paso11 SEMICOLON
    (148) paso11 -> .

    SEMICOLON       reduce using rule 148 (paso11 -> .)

    paso11                         shift and go to state 250

state 237

    (55) auxAsignacion1 -> LBRACKET paso6b exp RBRACKET . paso7b paso27
    (143) paso7b -> .

    EQUALA          reduce using rule 143 (paso7b -> .)

    paso7b                         shift and go to state 251

state 238

    (76) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion . paso14
    (151) paso14 -> .

    ID              reduce using rule 151 (paso14 -> .)
    IF              reduce using rule 151 (paso14 -> .)
    PRINT           reduce using rule 151 (paso14 -> .)
    WHILE           reduce using rule 151 (paso14 -> .)
    RETURN          reduce using rule 151 (paso14 -> .)
    RBRACE          reduce using rule 151 (paso14 -> .)

    paso14                         shift and go to state 252

state 239

    (77) auxCondicion -> ELSE . paso13 bloque
    (150) paso13 -> .

    LBRACE          reduce using rule 150 (paso13 -> .)

    paso13                         shift and go to state 253

state 240

    (64) auxCicloExpresion -> AND paso8_and cicloExpresion paso9 . auxCicloExpresion
    (64) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (65) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (66) auxCicloExpresion -> .

    AND             shift and go to state 140
    OR              shift and go to state 142
    RPAREN          reduce using rule 66 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 254

state 241

    (65) auxCicloExpresion -> OR paso8_or cicloExpresion paso9 . auxCicloExpresion
    (64) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (65) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (66) auxCicloExpresion -> .

    AND             shift and go to state 140
    OR              shift and go to state 142
    RPAREN          reduce using rule 66 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 255

state 242

    (37) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN exp . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 256


state 243

    (44) auxVar1Funcion -> idVarsFuncion COLON tipo . addTypeFuncion SEMICOLON
    (45) addTypeFuncion -> .

    SEMICOLON       reduce using rule 45 (addTypeFuncion -> .)

    addTypeFuncion                 shift and go to state 257

state 244

    (46) idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .

    COLON           reduce using rule 46 (idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .)


state 245

    (48) ambIdVarsFuncion -> COMMA . idVarsFuncion
    (46) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 193

    idVarsFuncion                  shift and go to state 258

state 246

    (108) auxVarcte -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 259


state 247

    (109) auxVarcte -> LBRACKET paso6b . exp RBRACKET paso7b paso27
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    termino                        shift and go to state 89
    exp                            shift and go to state 260
    factor                         shift and go to state 94
    auxExp                         shift and go to state 91
    auxFactor                      shift and go to state 99
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 248

    (124) llamada -> CALL COLON ID paso24 cteLlamada . LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28

    LPAREN          shift and go to state 261


state 249

    (123) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .

    ID              reduce using rule 123 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    IF              reduce using rule 123 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    PRINT           reduce using rule 123 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    WHILE           reduce using rule 123 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    RETURN          reduce using rule 123 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    RBRACE          reduce using rule 123 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)


state 250

    (54) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 . SEMICOLON

    SEMICOLON       shift and go to state 262


state 251

    (55) auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b . paso27
    (164) paso27 -> .

    EQUALA          reduce using rule 164 (paso27 -> .)

    paso27                         shift and go to state 263

state 252

    (76) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .

    ID              reduce using rule 76 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    IF              reduce using rule 76 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    PRINT           reduce using rule 76 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    WHILE           reduce using rule 76 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    RETURN          reduce using rule 76 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    RBRACE          reduce using rule 76 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)


state 253

    (77) auxCondicion -> ELSE paso13 . bloque
    (32) bloque -> . LBRACE cicloVarsMain cicloBloque recursivo RBRACE

    LBRACE          shift and go to state 39

    bloque                         shift and go to state 264

state 254

    (64) auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion .

    RPAREN          reduce using rule 64 (auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion .)


state 255

    (65) auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion .

    RPAREN          reduce using rule 65 (auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion .)


state 256

    (37) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN exp SEMICOLON . RBRACE

    RBRACE          shift and go to state 265


state 257

    (44) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion . SEMICOLON

    SEMICOLON       shift and go to state 266


state 258

    (48) ambIdVarsFuncion -> COMMA idVarsFuncion .

    COLON           reduce using rule 48 (ambIdVarsFuncion -> COMMA idVarsFuncion .)


state 259

    (108) auxVarcte -> LPAREN exp RPAREN .

    MULTI           reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    GTHAN           reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    LTHAN           reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    GETHAN          reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    LETHAN          reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    AND             reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    OR              reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 108 (auxVarcte -> LPAREN exp RPAREN .)


state 260

    (109) auxVarcte -> LBRACKET paso6b exp . RBRACKET paso7b paso27

    RBRACKET        shift and go to state 267


state 261

    (124) llamada -> CALL COLON ID paso24 cteLlamada LPAREN . paso6 auxLlamada RPAREN paso7 paso26 paso28
    (140) paso6 -> .

    LPAREN          reduce using rule 140 (paso6 -> .)
    PLUS            reduce using rule 140 (paso6 -> .)
    MINUS           reduce using rule 140 (paso6 -> .)
    RPAREN          reduce using rule 140 (paso6 -> .)
    ID              reduce using rule 140 (paso6 -> .)
    CTEINT          reduce using rule 140 (paso6 -> .)
    CTEFLOAT        reduce using rule 140 (paso6 -> .)
    CTECHAR         reduce using rule 140 (paso6 -> .)
    CTEBOOL         reduce using rule 140 (paso6 -> .)
    CTESTRING       reduce using rule 140 (paso6 -> .)
    CALL            reduce using rule 140 (paso6 -> .)

    paso6                          shift and go to state 268

state 262

    (54) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .

    ID              reduce using rule 54 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    IF              reduce using rule 54 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    PRINT           reduce using rule 54 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    WHILE           reduce using rule 54 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    RETURN          reduce using rule 54 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    RBRACE          reduce using rule 54 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)


state 263

    (55) auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b paso27 .

    EQUALA          reduce using rule 55 (auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)


state 264

    (77) auxCondicion -> ELSE paso13 bloque .

    ID              reduce using rule 77 (auxCondicion -> ELSE paso13 bloque .)
    IF              reduce using rule 77 (auxCondicion -> ELSE paso13 bloque .)
    PRINT           reduce using rule 77 (auxCondicion -> ELSE paso13 bloque .)
    WHILE           reduce using rule 77 (auxCondicion -> ELSE paso13 bloque .)
    RETURN          reduce using rule 77 (auxCondicion -> ELSE paso13 bloque .)
    RBRACE          reduce using rule 77 (auxCondicion -> ELSE paso13 bloque .)


state 265

    (37) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN exp SEMICOLON RBRACE .

    FUNCTION        reduce using rule 37 (bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN exp SEMICOLON RBRACE .)
    MAIN            reduce using rule 37 (bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN exp SEMICOLON RBRACE .)


state 266

    (44) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .

    VAR             reduce using rule 44 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)
    ID              reduce using rule 44 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)
    IF              reduce using rule 44 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)
    PRINT           reduce using rule 44 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)
    WHILE           reduce using rule 44 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)
    RETURN          reduce using rule 44 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)


state 267

    (109) auxVarcte -> LBRACKET paso6b exp RBRACKET . paso7b paso27
    (143) paso7b -> .

    MULTI           reduce using rule 143 (paso7b -> .)
    DIVIDE          reduce using rule 143 (paso7b -> .)
    PLUS            reduce using rule 143 (paso7b -> .)
    MINUS           reduce using rule 143 (paso7b -> .)
    COMMA           reduce using rule 143 (paso7b -> .)
    RPAREN          reduce using rule 143 (paso7b -> .)
    SEMICOLON       reduce using rule 143 (paso7b -> .)
    GTHAN           reduce using rule 143 (paso7b -> .)
    LTHAN           reduce using rule 143 (paso7b -> .)
    NOTEQUAL        reduce using rule 143 (paso7b -> .)
    GETHAN          reduce using rule 143 (paso7b -> .)
    LETHAN          reduce using rule 143 (paso7b -> .)
    EQUAL           reduce using rule 143 (paso7b -> .)
    AND             reduce using rule 143 (paso7b -> .)
    OR              reduce using rule 143 (paso7b -> .)
    RBRACKET        reduce using rule 143 (paso7b -> .)

    paso7b                         shift and go to state 269

state 268

    (124) llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 . auxLlamada RPAREN paso7 paso26 paso28
    (125) auxLlamada -> . argumentos
    (126) auxLlamada -> .
    (127) argumentos -> . auxArgumentos1
    (128) argumentos -> .
    (129) auxArgumentos1 -> . exp paso25 ambAuxArgumentos1
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

  ! reduce/reduce conflict for RPAREN resolved using rule 126 (auxLlamada -> .)
    RPAREN          reduce using rule 126 (auxLlamada -> .)
    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

  ! RPAREN          [ reduce using rule 128 (argumentos -> .) ]

    termino                        shift and go to state 89
    argumentos                     shift and go to state 270
    auxLlamada                     shift and go to state 271
    auxExp                         shift and go to state 91
    factor                         shift and go to state 94
    auxArgumentos1                 shift and go to state 272
    cicloExp                       shift and go to state 95
    auxFactor                      shift and go to state 99
    cicloTermino                   shift and go to state 93
    exp                            shift and go to state 273

state 269

    (109) auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b . paso27
    (164) paso27 -> .

    MULTI           reduce using rule 164 (paso27 -> .)
    DIVIDE          reduce using rule 164 (paso27 -> .)
    PLUS            reduce using rule 164 (paso27 -> .)
    MINUS           reduce using rule 164 (paso27 -> .)
    COMMA           reduce using rule 164 (paso27 -> .)
    RPAREN          reduce using rule 164 (paso27 -> .)
    SEMICOLON       reduce using rule 164 (paso27 -> .)
    GTHAN           reduce using rule 164 (paso27 -> .)
    LTHAN           reduce using rule 164 (paso27 -> .)
    NOTEQUAL        reduce using rule 164 (paso27 -> .)
    GETHAN          reduce using rule 164 (paso27 -> .)
    LETHAN          reduce using rule 164 (paso27 -> .)
    EQUAL           reduce using rule 164 (paso27 -> .)
    AND             reduce using rule 164 (paso27 -> .)
    OR              reduce using rule 164 (paso27 -> .)
    RBRACKET        reduce using rule 164 (paso27 -> .)

    paso27                         shift and go to state 274

state 270

    (125) auxLlamada -> argumentos .

    RPAREN          reduce using rule 125 (auxLlamada -> argumentos .)


state 271

    (124) llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada . RPAREN paso7 paso26 paso28

    RPAREN          shift and go to state 275


state 272

    (127) argumentos -> auxArgumentos1 .

    RPAREN          reduce using rule 127 (argumentos -> auxArgumentos1 .)


state 273

    (129) auxArgumentos1 -> exp . paso25 ambAuxArgumentos1
    (162) paso25 -> .

    COMMA           reduce using rule 162 (paso25 -> .)
    RPAREN          reduce using rule 162 (paso25 -> .)

    paso25                         shift and go to state 276

state 274

    (109) auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .

    MULTI           reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    DIVIDE          reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    PLUS            reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    MINUS           reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    COMMA           reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    RPAREN          reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    SEMICOLON       reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    GTHAN           reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    LTHAN           reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    NOTEQUAL        reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    GETHAN          reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    LETHAN          reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    EQUAL           reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    AND             reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    OR              reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    RBRACKET        reduce using rule 109 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)


state 275

    (124) llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN . paso7 paso26 paso28
    (141) paso7 -> .

    MULTI           reduce using rule 141 (paso7 -> .)
    DIVIDE          reduce using rule 141 (paso7 -> .)
    PLUS            reduce using rule 141 (paso7 -> .)
    MINUS           reduce using rule 141 (paso7 -> .)
    COMMA           reduce using rule 141 (paso7 -> .)
    RPAREN          reduce using rule 141 (paso7 -> .)
    SEMICOLON       reduce using rule 141 (paso7 -> .)
    GTHAN           reduce using rule 141 (paso7 -> .)
    LTHAN           reduce using rule 141 (paso7 -> .)
    NOTEQUAL        reduce using rule 141 (paso7 -> .)
    GETHAN          reduce using rule 141 (paso7 -> .)
    LETHAN          reduce using rule 141 (paso7 -> .)
    EQUAL           reduce using rule 141 (paso7 -> .)
    AND             reduce using rule 141 (paso7 -> .)
    OR              reduce using rule 141 (paso7 -> .)
    RBRACKET        reduce using rule 141 (paso7 -> .)

    paso7                          shift and go to state 277

state 276

    (129) auxArgumentos1 -> exp paso25 . ambAuxArgumentos1
    (130) ambAuxArgumentos1 -> . COMMA auxArgumentos1
    (131) ambAuxArgumentos1 -> .

    COMMA           shift and go to state 279
    RPAREN          reduce using rule 131 (ambAuxArgumentos1 -> .)

    ambAuxArgumentos1              shift and go to state 278

state 277

    (124) llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 . paso26 paso28
    (163) paso26 -> .

    MULTI           reduce using rule 163 (paso26 -> .)
    DIVIDE          reduce using rule 163 (paso26 -> .)
    PLUS            reduce using rule 163 (paso26 -> .)
    MINUS           reduce using rule 163 (paso26 -> .)
    COMMA           reduce using rule 163 (paso26 -> .)
    RPAREN          reduce using rule 163 (paso26 -> .)
    SEMICOLON       reduce using rule 163 (paso26 -> .)
    GTHAN           reduce using rule 163 (paso26 -> .)
    LTHAN           reduce using rule 163 (paso26 -> .)
    NOTEQUAL        reduce using rule 163 (paso26 -> .)
    GETHAN          reduce using rule 163 (paso26 -> .)
    LETHAN          reduce using rule 163 (paso26 -> .)
    EQUAL           reduce using rule 163 (paso26 -> .)
    AND             reduce using rule 163 (paso26 -> .)
    OR              reduce using rule 163 (paso26 -> .)
    RBRACKET        reduce using rule 163 (paso26 -> .)

    paso26                         shift and go to state 280

state 278

    (129) auxArgumentos1 -> exp paso25 ambAuxArgumentos1 .

    RPAREN          reduce using rule 129 (auxArgumentos1 -> exp paso25 ambAuxArgumentos1 .)


state 279

    (130) ambAuxArgumentos1 -> COMMA . auxArgumentos1
    (129) auxArgumentos1 -> . exp paso25 ambAuxArgumentos1
    (79) exp -> . cicloExp
    (80) cicloExp -> . termino paso4 ambExp
    (85) termino -> . cicloTermino
    (86) cicloTermino -> . factor paso5 ambCicloTermino
    (91) factor -> . LPAREN paso6 exp RPAREN paso7
    (92) factor -> . auxFactor varcte
    (93) auxFactor -> . auxExp
    (94) auxFactor -> .
    (83) auxExp -> . PLUS paso3_suma
    (84) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 98
    ID              reduce using rule 94 (auxFactor -> .)
    CTEINT          reduce using rule 94 (auxFactor -> .)
    CTEFLOAT        reduce using rule 94 (auxFactor -> .)
    CTECHAR         reduce using rule 94 (auxFactor -> .)
    CTEBOOL         reduce using rule 94 (auxFactor -> .)
    CTESTRING       reduce using rule 94 (auxFactor -> .)
    CALL            reduce using rule 94 (auxFactor -> .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 90

    auxExp                         shift and go to state 91
    termino                        shift and go to state 89
    exp                            shift and go to state 273
    factor                         shift and go to state 94
    auxFactor                      shift and go to state 99
    auxArgumentos1                 shift and go to state 281
    cicloExp                       shift and go to state 95
    cicloTermino                   shift and go to state 93

state 280

    (124) llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 . paso28
    (165) paso28 -> .

    MULTI           reduce using rule 165 (paso28 -> .)
    DIVIDE          reduce using rule 165 (paso28 -> .)
    PLUS            reduce using rule 165 (paso28 -> .)
    MINUS           reduce using rule 165 (paso28 -> .)
    COMMA           reduce using rule 165 (paso28 -> .)
    RPAREN          reduce using rule 165 (paso28 -> .)
    SEMICOLON       reduce using rule 165 (paso28 -> .)
    GTHAN           reduce using rule 165 (paso28 -> .)
    LTHAN           reduce using rule 165 (paso28 -> .)
    NOTEQUAL        reduce using rule 165 (paso28 -> .)
    GETHAN          reduce using rule 165 (paso28 -> .)
    LETHAN          reduce using rule 165 (paso28 -> .)
    EQUAL           reduce using rule 165 (paso28 -> .)
    AND             reduce using rule 165 (paso28 -> .)
    OR              reduce using rule 165 (paso28 -> .)
    RBRACKET        reduce using rule 165 (paso28 -> .)

    paso28                         shift and go to state 282

state 281

    (130) ambAuxArgumentos1 -> COMMA auxArgumentos1 .

    RPAREN          reduce using rule 130 (ambAuxArgumentos1 -> COMMA auxArgumentos1 .)


state 282

    (124) llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .

    MULTI           reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    DIVIDE          reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    PLUS            reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    MINUS           reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    COMMA           reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    RPAREN          reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    SEMICOLON       reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    GTHAN           reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    LTHAN           reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    NOTEQUAL        reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    GETHAN          reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    LETHAN          reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    EQUAL           reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    AND             reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    OR              reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)
    RBRACKET        reduce using rule 124 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CTESTRING in state 76 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 166 resolved as shift
WARNING: reduce/reduce conflict in state 268 resolved using rule (auxLlamada -> <empty>)
WARNING: rejected rule (argumentos -> <empty>) in state 268
WARNING: Rule (argumentos -> <empty>) is never reduced
