Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal
Rule 2     addProcedureDir -> <empty>
Rule 3     cicloVars -> vars cicloVars
Rule 4     cicloVars -> <empty>
Rule 5     vars -> createVariableDir VAR auxVar1
Rule 6     createVariableDir -> <empty>
Rule 7     auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON
Rule 8     addTypeGlobal -> <empty>
Rule 9     idVars -> ID addVariableDir ambIdVars
Rule 10    addVariableDir -> <empty>
Rule 11    ambIdVars -> COMMA idVars
Rule 12    ambIdVars -> <empty>
Rule 13    tipo -> INT ambAuxTipo1
Rule 14    tipo -> BOOL ambAuxTipo1
Rule 15    tipo -> STRING ambAuxTipo1
Rule 16    tipo -> FLOAT ambAuxTipo1
Rule 17    tipo -> CHAR ambAuxTipo1
Rule 18    ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr
Rule 19    ambAuxTipo1 -> noEsArr
Rule 20    esArr -> <empty>
Rule 21    noEsArr -> <empty>
Rule 22    cicloVarsMain -> varsMain cicloVarsMain
Rule 23    cicloVarsMain -> <empty>
Rule 24    varsMain -> createVariableDirMain VAR auxVar1Main
Rule 25    createVariableDirMain -> <empty>
Rule 26    auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON
Rule 27    addTypeMain -> <empty>
Rule 28    idVarsMain -> ID addVariableDirMain ambIdVarsMain
Rule 29    addVariableDirMain -> <empty>
Rule 30    ambIdVarsMain -> COMMA idVarsMain
Rule 31    ambIdVarsMain -> <empty>
Rule 32    bloque -> LBRACE cicloVarsMain cicloBloque RBRACE
Rule 33    cicloBloque -> estatuto cicloBloque
Rule 34    cicloBloque -> <empty>
Rule 35    bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
Rule 36    cicloBloqueFuncion -> estatuto cicloBloqueFuncion
Rule 37    cicloBloqueFuncion -> <empty>
Rule 38    cicloVarsFuncion -> varsFuncion cicloVarsFuncion
Rule 39    cicloVarsFuncion -> <empty>
Rule 40    varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion
Rule 41    createVariableDirFuncion -> <empty>
Rule 42    auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON
Rule 43    addTypeFuncion -> <empty>
Rule 44    idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion
Rule 45    addVariableDirFuncion -> <empty>
Rule 46    ambIdVarsFuncion -> COMMA idVarsFuncion
Rule 47    ambIdVarsFuncion -> <empty>
Rule 48    estatuto -> asignacion
Rule 49    estatuto -> condicion
Rule 50    estatuto -> escritura
Rule 51    estatuto -> ciclo
Rule 52    asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
Rule 53    auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b paso27
Rule 54    auxAsignacion1 -> <empty>
Rule 55    escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
Rule 56    auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1
Rule 57    ambAuxEscritura1 -> COMMA auxEscritura1
Rule 58    ambAuxEscritura1 -> <empty>
Rule 59    auxEscritura2 -> exp
Rule 60    auxEscritura2 -> CTESTRING paso1
Rule 61    cicloExpresion -> expresion paso10
Rule 62    auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion
Rule 63    auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion
Rule 64    auxCicloExpresion -> <empty>
Rule 65    expresion -> exp auxExpresion
Rule 66    auxExpresion -> GTHAN mayor exp
Rule 67    auxExpresion -> LTHAN menor exp
Rule 68    auxExpresion -> NOTEQUAL diferente exp
Rule 69    auxExpresion -> GETHAN mayorIg exp
Rule 70    auxExpresion -> LETHAN menorIg exp
Rule 71    auxExpresion -> EQUAL igual exp
Rule 72    auxExpresion -> <empty>
Rule 73    expAndOr -> cicloExpresion auxCicloExpresion
Rule 74    condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
Rule 75    auxCondicion -> ELSE paso13 bloque
Rule 76    auxCondicion -> <empty>
Rule 77    exp -> cicloExp
Rule 78    cicloExp -> termino paso4 ambExp
Rule 79    ambExp -> auxExp cicloExp
Rule 80    ambExp -> <empty>
Rule 81    auxExp -> PLUS paso3_suma
Rule 82    auxExp -> MINUS paso3_resta
Rule 83    termino -> cicloTermino
Rule 84    cicloTermino -> factor paso5 ambCicloTermino
Rule 85    ambCicloTermino -> auxTermino cicloTermino
Rule 86    ambCicloTermino -> <empty>
Rule 87    auxTermino -> MULTI paso2_mult
Rule 88    auxTermino -> DIVIDE paso2_div
Rule 89    factor -> LPAREN paso6 exp RPAREN paso7
Rule 90    factor -> auxFactor varcte
Rule 91    auxFactor -> auxExp
Rule 92    auxFactor -> <empty>
Rule 93    varcte -> ID paso1 addType auxVarcte
Rule 94    varcte -> CTEINT paso1 cteInt assignDirectionCteInt
Rule 95    varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat
Rule 96    varcte -> CTECHAR paso1 cteChar assignDirectionCteChar
Rule 97    varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool
Rule 98    varcte -> CTESTRING paso1 cteString assignDirectionCteString
Rule 99    varcte -> llamada
Rule 100   assignDirectionCteInt -> <empty>
Rule 101   assignDirectionCteFloat -> <empty>
Rule 102   assignDirectionCteChar -> <empty>
Rule 103   assignDirectionCteBool -> <empty>
Rule 104   assignDirectionCteString -> <empty>
Rule 105   addType -> <empty>
Rule 106   auxVarcte -> LPAREN exp RPAREN
Rule 107   auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27
Rule 108   auxVarcte -> <empty>
Rule 109   cicloFuncion -> funcion cicloFuncion
Rule 110   cicloFuncion -> <empty>
Rule 111   funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23
Rule 112   addProcDirectoryFunc -> <empty>
Rule 113   initDicFunc -> <empty>
Rule 114   auxFunction -> parametros
Rule 115   auxFunction -> <empty>
Rule 116   parametros -> auxParametros
Rule 117   auxParametros -> tipo ID addParameters ambAuxParametros
Rule 118   addParameters -> <empty>
Rule 119   ambAuxParametros -> COMMA auxParametros
Rule 120   ambAuxParametros -> <empty>
Rule 121   ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17
Rule 122   llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26
Rule 123   auxLlamada -> argumentos
Rule 124   auxLlamada -> <empty>
Rule 125   argumentos -> auxArgumentos1
Rule 126   argumentos -> <empty>
Rule 127   auxArgumentos1 -> exp paso25 ambAuxArgumentos1
Rule 128   ambAuxArgumentos1 -> COMMA auxArgumentos1
Rule 129   ambAuxArgumentos1 -> <empty>
Rule 130   lectura -> READ LPAREN ID RPAREN SEMICOLON
Rule 131   paso1 -> <empty>
Rule 132   paso2_mult -> <empty>
Rule 133   paso2_div -> <empty>
Rule 134   paso3_suma -> <empty>
Rule 135   paso3_resta -> <empty>
Rule 136   paso4 -> <empty>
Rule 137   paso5 -> <empty>
Rule 138   paso6 -> <empty>
Rule 139   paso7 -> <empty>
Rule 140   paso6b -> <empty>
Rule 141   paso7b -> <empty>
Rule 142   paso8_and -> <empty>
Rule 143   paso8_or -> <empty>
Rule 144   paso9 -> <empty>
Rule 145   paso10 -> <empty>
Rule 146   paso11 -> <empty>
Rule 147   paso12 -> <empty>
Rule 148   paso13 -> <empty>
Rule 149   paso14 -> <empty>
Rule 150   paso15 -> <empty>
Rule 151   paso16 -> <empty>
Rule 152   paso17 -> <empty>
Rule 153   paso18 -> <empty>
Rule 154   paso19 -> <empty>
Rule 155   paso20 -> <empty>
Rule 156   paso21 -> <empty>
Rule 157   paso22 -> <empty>
Rule 158   paso23 -> <empty>
Rule 159   paso24 -> <empty>
Rule 160   paso25 -> <empty>
Rule 161   paso26 -> <empty>
Rule 162   paso27 -> <empty>
Rule 163   pasoFinal -> <empty>
Rule 164   cteInt -> <empty>
Rule 165   cteFloat -> <empty>
Rule 166   cteChar -> <empty>
Rule 167   cteBool -> <empty>
Rule 168   cteString -> <empty>
Rule 169   cteLlamada -> <empty>
Rule 170   mayor -> <empty>
Rule 171   menor -> <empty>
Rule 172   mayorIg -> <empty>
Rule 173   menorIg -> <empty>
Rule 174   igual -> <empty>
Rule 175   diferente -> <empty>
Rule 176   asig -> <empty>

Terminals, with rules where they appear

AND                  : 62
BOOL                 : 14
CALL                 : 122
CHAR                 : 17
COLON                : 7 26 42 122
COMMA                : 11 30 46 57 119 128
CTEBOOL              : 97
CTECHAR              : 96
CTEFLOAT             : 95
CTEINT               : 18 94
CTESTRING            : 60 98
DIVIDE               : 88
ELSE                 : 75
EQUAL                : 71
EQUALA               : 52
FLOAT                : 16
FUNCTION             : 111
GETHAN               : 69
GTHAN                : 66
ID                   : 1 9 28 44 52 93 111 117 122 130
IF                   : 74
INT                  : 13
LBRACE               : 32 35
LBRACKET             : 18 53 107
LETHAN               : 70
LPAREN               : 55 74 89 106 111 121 122 130
LTHAN                : 67
MAIN                 : 1
MINUS                : 82
MULTI                : 87
NOTEQUAL             : 68
OR                   : 63
PLUS                 : 81
PRINT                : 55
PROGRAM              : 1
RBRACE               : 32 35
RBRACKET             : 18 53 107
READ                 : 130
RETURN               : 35
RPAREN               : 55 74 89 106 111 121 122 130
SEMICOLON            : 1 7 26 35 42 52 55 130
STRING               : 15
VAR                  : 5 24 40
WHILE                : 121
error                : 

Nonterminals, with rules where they appear

addParameters        : 117
addProcDirectoryFunc : 111
addProcedureDir      : 1
addType              : 52 93
addTypeFuncion       : 42
addTypeGlobal        : 7
addTypeMain          : 26
addVariableDir       : 9
addVariableDirFuncion : 44
addVariableDirMain   : 28
ambAuxArgumentos1    : 127
ambAuxEscritura1     : 56
ambAuxParametros     : 117
ambAuxTipo1          : 13 14 15 16 17
ambCicloTermino      : 84
ambExp               : 78
ambIdVars            : 9
ambIdVarsFuncion     : 44
ambIdVarsMain        : 28
argumentos           : 123
asig                 : 52
asignacion           : 48
assignDirectionCteBool : 97
assignDirectionCteChar : 96
assignDirectionCteFloat : 95
assignDirectionCteInt : 94
assignDirectionCteString : 98
auxArgumentos1       : 125 128
auxAsignacion1       : 52
auxCicloExpresion    : 62 63 73
auxCondicion         : 74
auxEscritura1        : 55 57
auxEscritura2        : 56
auxExp               : 79 91
auxExpresion         : 65
auxFactor            : 90
auxFunction          : 111
auxLlamada           : 122
auxParametros        : 116 119
auxTermino           : 85
auxVar1              : 5
auxVar1Funcion       : 40
auxVar1Main          : 24
auxVarcte            : 93
bloque               : 1 74 75 121
bloqueFuncion        : 111
ciclo                : 51
cicloBloque          : 32 33
cicloBloqueFuncion   : 35 36
cicloExp             : 77 79
cicloExpresion       : 62 63 73
cicloFuncion         : 1 109
cicloTermino         : 83 85
cicloVars            : 1 3
cicloVarsFuncion     : 35 38
cicloVarsMain        : 22 32
condicion            : 49
createVariableDir    : 5
createVariableDirFuncion : 40
createVariableDirMain : 24
cteBool              : 97
cteChar              : 96
cteFloat             : 95
cteInt               : 94
cteLlamada           : 122
cteString            : 98
diferente            : 68
esArr                : 18
escritura            : 50
estatuto             : 33 36
exp                  : 52 53 59 65 66 67 68 69 70 71 89 106 107 127
expAndOr             : 74 121
expresion            : 35 61
factor               : 84
funcion              : 109
idVars               : 7 11
idVarsFuncion        : 42 46
idVarsMain           : 26 30
igual                : 71
initDicFunc          : 111
lectura              : 
llamada              : 99
mayor                : 66
mayorIg              : 69
menor                : 67
menorIg              : 70
noEsArr              : 19
parametros           : 114
paso1                : 52 60 93 94 95 96 97 98
paso10               : 61
paso11               : 52
paso12               : 74
paso13               : 75
paso14               : 74
paso15               : 121
paso16               : 121
paso17               : 121
paso18               : 56
paso19               : 1
paso20               : 1
paso21               : 35
paso22               : 111
paso23               : 111
paso24               : 122
paso25               : 127
paso26               : 122
paso27               : 53 107
paso2_div            : 88
paso2_mult           : 87
paso3_resta          : 82
paso3_suma           : 81
paso4                : 78
paso5                : 84
paso6                : 89
paso6b               : 53 107
paso7                : 89
paso7b               : 53 107
paso8_and            : 62
paso8_or             : 63
paso9                : 62 63
pasoFinal            : 1
programa             : 0
termino              : 78
tipo                 : 7 26 42 111 117
varcte               : 90
vars                 : 3
varsFuncion          : 38
varsMain             : 22

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal
    (2) addProcedureDir -> .

    SEMICOLON       reduce using rule 2 (addProcedureDir -> .)

    addProcedureDir                shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProcedureDir . SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON . paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal
    (154) paso19 -> .

    FUNCTION        reduce using rule 154 (paso19 -> .)
    MAIN            reduce using rule 154 (paso19 -> .)
    VAR             reduce using rule 154 (paso19 -> .)

    paso19                         shift and go to state 6

state 6

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 . cicloVars cicloFuncion MAIN paso20 bloque pasoFinal
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    cicloVars                      shift and go to state 7
    vars                           shift and go to state 8
    createVariableDir              shift and go to state 9

state 7

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars . cicloFuncion MAIN paso20 bloque pasoFinal
    (109) cicloFuncion -> . funcion cicloFuncion
    (110) cicloFuncion -> .
    (111) funcion -> . FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23

    MAIN            reduce using rule 110 (cicloFuncion -> .)
    FUNCTION        shift and go to state 11

    cicloFuncion                   shift and go to state 12
    funcion                        shift and go to state 10

state 8

    (3) cicloVars -> vars . cicloVars
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    createVariableDir              shift and go to state 9
    cicloVars                      shift and go to state 13
    vars                           shift and go to state 8

state 9

    (5) vars -> createVariableDir . VAR auxVar1

    VAR             shift and go to state 14


state 10

    (109) cicloFuncion -> funcion . cicloFuncion
    (109) cicloFuncion -> . funcion cicloFuncion
    (110) cicloFuncion -> .
    (111) funcion -> . FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23

    MAIN            reduce using rule 110 (cicloFuncion -> .)
    FUNCTION        shift and go to state 11

    cicloFuncion                   shift and go to state 15
    funcion                        shift and go to state 10

state 11

    (111) funcion -> FUNCTION . tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 18

state 12

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion . MAIN paso20 bloque pasoFinal

    MAIN            shift and go to state 22


state 13

    (3) cicloVars -> vars cicloVars .

    FUNCTION        reduce using rule 3 (cicloVars -> vars cicloVars .)
    MAIN            reduce using rule 3 (cicloVars -> vars cicloVars .)


state 14

    (5) vars -> createVariableDir VAR . auxVar1
    (7) auxVar1 -> . idVars COLON tipo addTypeGlobal SEMICOLON
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 25

    idVars                         shift and go to state 23
    auxVar1                        shift and go to state 24

state 15

    (109) cicloFuncion -> funcion cicloFuncion .

    MAIN            reduce using rule 109 (cicloFuncion -> funcion cicloFuncion .)


state 16

    (16) tipo -> FLOAT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET esArr
    (19) ambAuxTipo1 -> . noEsArr
    (21) noEsArr -> .

    LBRACKET        shift and go to state 27
    ID              reduce using rule 21 (noEsArr -> .)
    SEMICOLON       reduce using rule 21 (noEsArr -> .)

    ambAuxTipo1                    shift and go to state 26
    noEsArr                        shift and go to state 28

state 17

    (15) tipo -> STRING . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET esArr
    (19) ambAuxTipo1 -> . noEsArr
    (21) noEsArr -> .

    LBRACKET        shift and go to state 27
    ID              reduce using rule 21 (noEsArr -> .)
    SEMICOLON       reduce using rule 21 (noEsArr -> .)

    ambAuxTipo1                    shift and go to state 29
    noEsArr                        shift and go to state 28

state 18

    (111) funcion -> FUNCTION tipo . ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23

    ID              shift and go to state 30


state 19

    (17) tipo -> CHAR . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET esArr
    (19) ambAuxTipo1 -> . noEsArr
    (21) noEsArr -> .

    LBRACKET        shift and go to state 27
    ID              reduce using rule 21 (noEsArr -> .)
    SEMICOLON       reduce using rule 21 (noEsArr -> .)

    ambAuxTipo1                    shift and go to state 31
    noEsArr                        shift and go to state 28

state 20

    (13) tipo -> INT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET esArr
    (19) ambAuxTipo1 -> . noEsArr
    (21) noEsArr -> .

    LBRACKET        shift and go to state 27
    ID              reduce using rule 21 (noEsArr -> .)
    SEMICOLON       reduce using rule 21 (noEsArr -> .)

    ambAuxTipo1                    shift and go to state 32
    noEsArr                        shift and go to state 28

state 21

    (14) tipo -> BOOL . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET esArr
    (19) ambAuxTipo1 -> . noEsArr
    (21) noEsArr -> .

    LBRACKET        shift and go to state 27
    ID              reduce using rule 21 (noEsArr -> .)
    SEMICOLON       reduce using rule 21 (noEsArr -> .)

    ambAuxTipo1                    shift and go to state 33
    noEsArr                        shift and go to state 28

state 22

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN . paso20 bloque pasoFinal
    (155) paso20 -> .

    LBRACE          reduce using rule 155 (paso20 -> .)

    paso20                         shift and go to state 34

state 23

    (7) auxVar1 -> idVars . COLON tipo addTypeGlobal SEMICOLON

    COLON           shift and go to state 35


state 24

    (5) vars -> createVariableDir VAR auxVar1 .

    VAR             reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    FUNCTION        reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    MAIN            reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)


state 25

    (9) idVars -> ID . addVariableDir ambIdVars
    (10) addVariableDir -> .

    COMMA           reduce using rule 10 (addVariableDir -> .)
    COLON           reduce using rule 10 (addVariableDir -> .)

    addVariableDir                 shift and go to state 36

state 26

    (16) tipo -> FLOAT ambAuxTipo1 .

    ID              reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)
    SEMICOLON       reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)


state 27

    (18) ambAuxTipo1 -> LBRACKET . CTEINT RBRACKET esArr

    CTEINT          shift and go to state 37


state 28

    (19) ambAuxTipo1 -> noEsArr .

    ID              reduce using rule 19 (ambAuxTipo1 -> noEsArr .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> noEsArr .)


state 29

    (15) tipo -> STRING ambAuxTipo1 .

    ID              reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)
    SEMICOLON       reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)


state 30

    (111) funcion -> FUNCTION tipo ID . initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23
    (113) initDicFunc -> .

    LPAREN          reduce using rule 113 (initDicFunc -> .)

    initDicFunc                    shift and go to state 38

state 31

    (17) tipo -> CHAR ambAuxTipo1 .

    ID              reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)
    SEMICOLON       reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)


state 32

    (13) tipo -> INT ambAuxTipo1 .

    ID              reduce using rule 13 (tipo -> INT ambAuxTipo1 .)
    SEMICOLON       reduce using rule 13 (tipo -> INT ambAuxTipo1 .)


state 33

    (14) tipo -> BOOL ambAuxTipo1 .

    ID              reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)
    SEMICOLON       reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)


state 34

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 . bloque pasoFinal
    (32) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 39

    bloque                         shift and go to state 40

state 35

    (7) auxVar1 -> idVars COLON . tipo addTypeGlobal SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 41

state 36

    (9) idVars -> ID addVariableDir . ambIdVars
    (11) ambIdVars -> . COMMA idVars
    (12) ambIdVars -> .

    COMMA           shift and go to state 43
    COLON           reduce using rule 12 (ambIdVars -> .)

    ambIdVars                      shift and go to state 42

state 37

    (18) ambAuxTipo1 -> LBRACKET CTEINT . RBRACKET esArr

    RBRACKET        shift and go to state 44


state 38

    (111) funcion -> FUNCTION tipo ID initDicFunc . LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23

    LPAREN          shift and go to state 45


state 39

    (32) bloque -> LBRACE . cicloVarsMain cicloBloque RBRACE
    (22) cicloVarsMain -> . varsMain cicloVarsMain
    (23) cicloVarsMain -> .
    (24) varsMain -> . createVariableDirMain VAR auxVar1Main
    (25) createVariableDirMain -> .

    ID              reduce using rule 23 (cicloVarsMain -> .)
    IF              reduce using rule 23 (cicloVarsMain -> .)
    PRINT           reduce using rule 23 (cicloVarsMain -> .)
    WHILE           reduce using rule 23 (cicloVarsMain -> .)
    RBRACE          reduce using rule 23 (cicloVarsMain -> .)
    VAR             reduce using rule 25 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 47
    createVariableDirMain          shift and go to state 46
    varsMain                       shift and go to state 48

state 40

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque . pasoFinal
    (163) pasoFinal -> .

    $end            reduce using rule 163 (pasoFinal -> .)

    pasoFinal                      shift and go to state 49

state 41

    (7) auxVar1 -> idVars COLON tipo . addTypeGlobal SEMICOLON
    (8) addTypeGlobal -> .

    SEMICOLON       reduce using rule 8 (addTypeGlobal -> .)

    addTypeGlobal                  shift and go to state 50

state 42

    (9) idVars -> ID addVariableDir ambIdVars .

    COLON           reduce using rule 9 (idVars -> ID addVariableDir ambIdVars .)


state 43

    (11) ambIdVars -> COMMA . idVars
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 25

    idVars                         shift and go to state 51

state 44

    (18) ambAuxTipo1 -> LBRACKET CTEINT RBRACKET . esArr
    (20) esArr -> .

    ID              reduce using rule 20 (esArr -> .)
    SEMICOLON       reduce using rule 20 (esArr -> .)

    esArr                          shift and go to state 52

state 45

    (111) funcion -> FUNCTION tipo ID initDicFunc LPAREN . auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23
    (114) auxFunction -> . parametros
    (115) auxFunction -> .
    (116) parametros -> . auxParametros
    (117) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    RPAREN          reduce using rule 115 (auxFunction -> .)
    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 53
    auxFunction                    shift and go to state 54
    auxParametros                  shift and go to state 55
    parametros                     shift and go to state 56

state 46

    (24) varsMain -> createVariableDirMain . VAR auxVar1Main

    VAR             shift and go to state 57


state 47

    (32) bloque -> LBRACE cicloVarsMain . cicloBloque RBRACE
    (33) cicloBloque -> . estatuto cicloBloque
    (34) cicloBloque -> .
    (48) estatuto -> . asignacion
    (49) estatuto -> . condicion
    (50) estatuto -> . escritura
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (74) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (121) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RBRACE          reduce using rule 34 (cicloBloque -> .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    PRINT           shift and go to state 58
    WHILE           shift and go to state 59

    ciclo                          shift and go to state 60
    estatuto                       shift and go to state 61
    condicion                      shift and go to state 62
    cicloBloque                    shift and go to state 63
    asignacion                     shift and go to state 66
    escritura                      shift and go to state 67

state 48

    (22) cicloVarsMain -> varsMain . cicloVarsMain
    (22) cicloVarsMain -> . varsMain cicloVarsMain
    (23) cicloVarsMain -> .
    (24) varsMain -> . createVariableDirMain VAR auxVar1Main
    (25) createVariableDirMain -> .

    ID              reduce using rule 23 (cicloVarsMain -> .)
    IF              reduce using rule 23 (cicloVarsMain -> .)
    PRINT           reduce using rule 23 (cicloVarsMain -> .)
    WHILE           reduce using rule 23 (cicloVarsMain -> .)
    RBRACE          reduce using rule 23 (cicloVarsMain -> .)
    VAR             reduce using rule 25 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 68
    createVariableDirMain          shift and go to state 46
    varsMain                       shift and go to state 48

state 49

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal .)


state 50

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal . SEMICOLON

    SEMICOLON       shift and go to state 69


state 51

    (11) ambIdVars -> COMMA idVars .

    COLON           reduce using rule 11 (ambIdVars -> COMMA idVars .)


state 52

    (18) ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr .

    ID              reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr .)
    SEMICOLON       reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr .)


state 53

    (117) auxParametros -> tipo . ID addParameters ambAuxParametros

    ID              shift and go to state 70


state 54

    (111) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction . RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23

    RPAREN          shift and go to state 71


state 55

    (116) parametros -> auxParametros .

    RPAREN          reduce using rule 116 (parametros -> auxParametros .)


state 56

    (114) auxFunction -> parametros .

    RPAREN          reduce using rule 114 (auxFunction -> parametros .)


state 57

    (24) varsMain -> createVariableDirMain VAR . auxVar1Main
    (26) auxVar1Main -> . idVarsMain COLON tipo addTypeMain SEMICOLON
    (28) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 74

    auxVar1Main                    shift and go to state 72
    idVarsMain                     shift and go to state 73

state 58

    (55) escritura -> PRINT . LPAREN auxEscritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 75


state 59

    (121) ciclo -> WHILE . paso15 LPAREN expAndOr RPAREN paso16 bloque paso17
    (150) paso15 -> .

    LPAREN          reduce using rule 150 (paso15 -> .)

    paso15                         shift and go to state 76

state 60

    (51) estatuto -> ciclo .

    ID              reduce using rule 51 (estatuto -> ciclo .)
    IF              reduce using rule 51 (estatuto -> ciclo .)
    PRINT           reduce using rule 51 (estatuto -> ciclo .)
    WHILE           reduce using rule 51 (estatuto -> ciclo .)
    RBRACE          reduce using rule 51 (estatuto -> ciclo .)
    RETURN          reduce using rule 51 (estatuto -> ciclo .)


state 61

    (33) cicloBloque -> estatuto . cicloBloque
    (33) cicloBloque -> . estatuto cicloBloque
    (34) cicloBloque -> .
    (48) estatuto -> . asignacion
    (49) estatuto -> . condicion
    (50) estatuto -> . escritura
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (74) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (121) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RBRACE          reduce using rule 34 (cicloBloque -> .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    PRINT           shift and go to state 58
    WHILE           shift and go to state 59

    ciclo                          shift and go to state 60
    asignacion                     shift and go to state 66
    estatuto                       shift and go to state 61
    condicion                      shift and go to state 62
    cicloBloque                    shift and go to state 77
    escritura                      shift and go to state 67

state 62

    (49) estatuto -> condicion .

    ID              reduce using rule 49 (estatuto -> condicion .)
    IF              reduce using rule 49 (estatuto -> condicion .)
    PRINT           reduce using rule 49 (estatuto -> condicion .)
    WHILE           reduce using rule 49 (estatuto -> condicion .)
    RBRACE          reduce using rule 49 (estatuto -> condicion .)
    RETURN          reduce using rule 49 (estatuto -> condicion .)


state 63

    (32) bloque -> LBRACE cicloVarsMain cicloBloque . RBRACE

    RBRACE          shift and go to state 78


state 64

    (52) asignacion -> ID . paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (131) paso1 -> .

    LBRACKET        reduce using rule 131 (paso1 -> .)
    EQUALA          reduce using rule 131 (paso1 -> .)

    paso1                          shift and go to state 79

state 65

    (74) condicion -> IF . LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14

    LPAREN          shift and go to state 80


state 66

    (48) estatuto -> asignacion .

    ID              reduce using rule 48 (estatuto -> asignacion .)
    IF              reduce using rule 48 (estatuto -> asignacion .)
    PRINT           reduce using rule 48 (estatuto -> asignacion .)
    WHILE           reduce using rule 48 (estatuto -> asignacion .)
    RBRACE          reduce using rule 48 (estatuto -> asignacion .)
    RETURN          reduce using rule 48 (estatuto -> asignacion .)


state 67

    (50) estatuto -> escritura .

    ID              reduce using rule 50 (estatuto -> escritura .)
    IF              reduce using rule 50 (estatuto -> escritura .)
    PRINT           reduce using rule 50 (estatuto -> escritura .)
    WHILE           reduce using rule 50 (estatuto -> escritura .)
    RBRACE          reduce using rule 50 (estatuto -> escritura .)
    RETURN          reduce using rule 50 (estatuto -> escritura .)


state 68

    (22) cicloVarsMain -> varsMain cicloVarsMain .

    ID              reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)
    IF              reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)
    PRINT           reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)
    WHILE           reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)
    RBRACE          reduce using rule 22 (cicloVarsMain -> varsMain cicloVarsMain .)


state 69

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .

    VAR             reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    FUNCTION        reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    MAIN            reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)


state 70

    (117) auxParametros -> tipo ID . addParameters ambAuxParametros
    (118) addParameters -> .

    COMMA           reduce using rule 118 (addParameters -> .)
    RPAREN          reduce using rule 118 (addParameters -> .)

    addParameters                  shift and go to state 81

state 71

    (111) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN . bloqueFuncion addProcDirectoryFunc paso22 paso23
    (35) bloqueFuncion -> . LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE

    LBRACE          shift and go to state 82

    bloqueFuncion                  shift and go to state 83

state 72

    (24) varsMain -> createVariableDirMain VAR auxVar1Main .

    VAR             reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    ID              reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    IF              reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    PRINT           reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    WHILE           reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    RBRACE          reduce using rule 24 (varsMain -> createVariableDirMain VAR auxVar1Main .)


state 73

    (26) auxVar1Main -> idVarsMain . COLON tipo addTypeMain SEMICOLON

    COLON           shift and go to state 84


state 74

    (28) idVarsMain -> ID . addVariableDirMain ambIdVarsMain
    (29) addVariableDirMain -> .

    COMMA           reduce using rule 29 (addVariableDirMain -> .)
    COLON           reduce using rule 29 (addVariableDirMain -> .)

    addVariableDirMain             shift and go to state 85

state 75

    (55) escritura -> PRINT LPAREN . auxEscritura1 RPAREN SEMICOLON
    (56) auxEscritura1 -> . auxEscritura2 paso18 ambAuxEscritura1
    (59) auxEscritura2 -> . exp
    (60) auxEscritura2 -> . CTESTRING paso1
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 86
    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

  ! CTESTRING       [ reduce using rule 92 (auxFactor -> .) ]

    auxExp                         shift and go to state 89
    auxEscritura1                  shift and go to state 94
    auxEscritura2                  shift and go to state 95
    termino                        shift and go to state 87
    exp                            shift and go to state 98
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 76

    (121) ciclo -> WHILE paso15 . LPAREN expAndOr RPAREN paso16 bloque paso17

    LPAREN          shift and go to state 99


state 77

    (33) cicloBloque -> estatuto cicloBloque .

    RBRACE          reduce using rule 33 (cicloBloque -> estatuto cicloBloque .)


state 78

    (32) bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .

    ID              reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    IF              reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    PRINT           reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    WHILE           reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RBRACE          reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RETURN          reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    $end            reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    ELSE            reduce using rule 32 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)


state 79

    (52) asignacion -> ID paso1 . addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (105) addType -> .

    LBRACKET        reduce using rule 105 (addType -> .)
    EQUALA          reduce using rule 105 (addType -> .)

    addType                        shift and go to state 100

state 80

    (74) condicion -> IF LPAREN . expAndOr paso12 RPAREN bloque auxCondicion paso14
    (73) expAndOr -> . cicloExpresion auxCicloExpresion
    (61) cicloExpresion -> . expresion paso10
    (65) expresion -> . exp auxExpresion
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    expAndOr                       shift and go to state 101
    termino                        shift and go to state 87
    cicloExpresion                 shift and go to state 102
    auxExp                         shift and go to state 89
    cicloTermino                   shift and go to state 91
    factor                         shift and go to state 92
    cicloExp                       shift and go to state 93
    auxFactor                      shift and go to state 97
    expresion                      shift and go to state 103
    exp                            shift and go to state 104

state 81

    (117) auxParametros -> tipo ID addParameters . ambAuxParametros
    (119) ambAuxParametros -> . COMMA auxParametros
    (120) ambAuxParametros -> .

    COMMA           shift and go to state 105
    RPAREN          reduce using rule 120 (ambAuxParametros -> .)

    ambAuxParametros               shift and go to state 106

state 82

    (35) bloqueFuncion -> LBRACE . cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
    (38) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (39) cicloVarsFuncion -> .
    (40) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (41) createVariableDirFuncion -> .

    ID              reduce using rule 39 (cicloVarsFuncion -> .)
    IF              reduce using rule 39 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 39 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 39 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 39 (cicloVarsFuncion -> .)
    VAR             reduce using rule 41 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 107
    cicloVarsFuncion               shift and go to state 108
    createVariableDirFuncion       shift and go to state 109

state 83

    (111) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion . addProcDirectoryFunc paso22 paso23
    (112) addProcDirectoryFunc -> .

    FUNCTION        reduce using rule 112 (addProcDirectoryFunc -> .)
    MAIN            reduce using rule 112 (addProcDirectoryFunc -> .)

    addProcDirectoryFunc           shift and go to state 110

state 84

    (26) auxVar1Main -> idVarsMain COLON . tipo addTypeMain SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 111

state 85

    (28) idVarsMain -> ID addVariableDirMain . ambIdVarsMain
    (30) ambIdVarsMain -> . COMMA idVarsMain
    (31) ambIdVarsMain -> .

    COMMA           shift and go to state 113
    COLON           reduce using rule 31 (ambIdVarsMain -> .)

    ambIdVarsMain                  shift and go to state 112

state 86

    (60) auxEscritura2 -> CTESTRING . paso1
    (131) paso1 -> .

    COMMA           reduce using rule 131 (paso1 -> .)
    RPAREN          reduce using rule 131 (paso1 -> .)

    paso1                          shift and go to state 114

state 87

    (78) cicloExp -> termino . paso4 ambExp
    (136) paso4 -> .

    PLUS            reduce using rule 136 (paso4 -> .)
    MINUS           reduce using rule 136 (paso4 -> .)
    COMMA           reduce using rule 136 (paso4 -> .)
    RPAREN          reduce using rule 136 (paso4 -> .)
    GTHAN           reduce using rule 136 (paso4 -> .)
    LTHAN           reduce using rule 136 (paso4 -> .)
    NOTEQUAL        reduce using rule 136 (paso4 -> .)
    GETHAN          reduce using rule 136 (paso4 -> .)
    LETHAN          reduce using rule 136 (paso4 -> .)
    EQUAL           reduce using rule 136 (paso4 -> .)
    AND             reduce using rule 136 (paso4 -> .)
    OR              reduce using rule 136 (paso4 -> .)
    RBRACKET        reduce using rule 136 (paso4 -> .)
    SEMICOLON       reduce using rule 136 (paso4 -> .)

    paso4                          shift and go to state 115

state 88

    (82) auxExp -> MINUS . paso3_resta
    (135) paso3_resta -> .

    ID              reduce using rule 135 (paso3_resta -> .)
    CTEINT          reduce using rule 135 (paso3_resta -> .)
    CTEFLOAT        reduce using rule 135 (paso3_resta -> .)
    CTECHAR         reduce using rule 135 (paso3_resta -> .)
    CTEBOOL         reduce using rule 135 (paso3_resta -> .)
    CTESTRING       reduce using rule 135 (paso3_resta -> .)
    CALL            reduce using rule 135 (paso3_resta -> .)
    LPAREN          reduce using rule 135 (paso3_resta -> .)
    PLUS            reduce using rule 135 (paso3_resta -> .)
    MINUS           reduce using rule 135 (paso3_resta -> .)

    paso3_resta                    shift and go to state 116

state 89

    (91) auxFactor -> auxExp .

    ID              reduce using rule 91 (auxFactor -> auxExp .)
    CTEINT          reduce using rule 91 (auxFactor -> auxExp .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> auxExp .)
    CTECHAR         reduce using rule 91 (auxFactor -> auxExp .)
    CTEBOOL         reduce using rule 91 (auxFactor -> auxExp .)
    CTESTRING       reduce using rule 91 (auxFactor -> auxExp .)
    CALL            reduce using rule 91 (auxFactor -> auxExp .)


state 90

    (81) auxExp -> PLUS . paso3_suma
    (134) paso3_suma -> .

    ID              reduce using rule 134 (paso3_suma -> .)
    CTEINT          reduce using rule 134 (paso3_suma -> .)
    CTEFLOAT        reduce using rule 134 (paso3_suma -> .)
    CTECHAR         reduce using rule 134 (paso3_suma -> .)
    CTEBOOL         reduce using rule 134 (paso3_suma -> .)
    CTESTRING       reduce using rule 134 (paso3_suma -> .)
    CALL            reduce using rule 134 (paso3_suma -> .)
    LPAREN          reduce using rule 134 (paso3_suma -> .)
    PLUS            reduce using rule 134 (paso3_suma -> .)
    MINUS           reduce using rule 134 (paso3_suma -> .)

    paso3_suma                     shift and go to state 117

state 91

    (83) termino -> cicloTermino .

    PLUS            reduce using rule 83 (termino -> cicloTermino .)
    MINUS           reduce using rule 83 (termino -> cicloTermino .)
    AND             reduce using rule 83 (termino -> cicloTermino .)
    OR              reduce using rule 83 (termino -> cicloTermino .)
    RPAREN          reduce using rule 83 (termino -> cicloTermino .)
    SEMICOLON       reduce using rule 83 (termino -> cicloTermino .)
    COMMA           reduce using rule 83 (termino -> cicloTermino .)
    GTHAN           reduce using rule 83 (termino -> cicloTermino .)
    LTHAN           reduce using rule 83 (termino -> cicloTermino .)
    NOTEQUAL        reduce using rule 83 (termino -> cicloTermino .)
    GETHAN          reduce using rule 83 (termino -> cicloTermino .)
    LETHAN          reduce using rule 83 (termino -> cicloTermino .)
    EQUAL           reduce using rule 83 (termino -> cicloTermino .)
    RBRACKET        reduce using rule 83 (termino -> cicloTermino .)


state 92

    (84) cicloTermino -> factor . paso5 ambCicloTermino
    (137) paso5 -> .

    MULTI           reduce using rule 137 (paso5 -> .)
    DIVIDE          reduce using rule 137 (paso5 -> .)
    PLUS            reduce using rule 137 (paso5 -> .)
    MINUS           reduce using rule 137 (paso5 -> .)
    COMMA           reduce using rule 137 (paso5 -> .)
    RPAREN          reduce using rule 137 (paso5 -> .)
    GTHAN           reduce using rule 137 (paso5 -> .)
    LTHAN           reduce using rule 137 (paso5 -> .)
    NOTEQUAL        reduce using rule 137 (paso5 -> .)
    GETHAN          reduce using rule 137 (paso5 -> .)
    LETHAN          reduce using rule 137 (paso5 -> .)
    EQUAL           reduce using rule 137 (paso5 -> .)
    AND             reduce using rule 137 (paso5 -> .)
    OR              reduce using rule 137 (paso5 -> .)
    RBRACKET        reduce using rule 137 (paso5 -> .)
    SEMICOLON       reduce using rule 137 (paso5 -> .)

    paso5                          shift and go to state 118

state 93

    (77) exp -> cicloExp .

    AND             reduce using rule 77 (exp -> cicloExp .)
    OR              reduce using rule 77 (exp -> cicloExp .)
    RPAREN          reduce using rule 77 (exp -> cicloExp .)
    SEMICOLON       reduce using rule 77 (exp -> cicloExp .)
    COMMA           reduce using rule 77 (exp -> cicloExp .)
    GTHAN           reduce using rule 77 (exp -> cicloExp .)
    LTHAN           reduce using rule 77 (exp -> cicloExp .)
    NOTEQUAL        reduce using rule 77 (exp -> cicloExp .)
    GETHAN          reduce using rule 77 (exp -> cicloExp .)
    LETHAN          reduce using rule 77 (exp -> cicloExp .)
    EQUAL           reduce using rule 77 (exp -> cicloExp .)
    RBRACKET        reduce using rule 77 (exp -> cicloExp .)


state 94

    (55) escritura -> PRINT LPAREN auxEscritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 119


state 95

    (56) auxEscritura1 -> auxEscritura2 . paso18 ambAuxEscritura1
    (153) paso18 -> .

    COMMA           reduce using rule 153 (paso18 -> .)
    RPAREN          reduce using rule 153 (paso18 -> .)

    paso18                         shift and go to state 120

state 96

    (89) factor -> LPAREN . paso6 exp RPAREN paso7
    (138) paso6 -> .

    LPAREN          reduce using rule 138 (paso6 -> .)
    PLUS            reduce using rule 138 (paso6 -> .)
    MINUS           reduce using rule 138 (paso6 -> .)
    ID              reduce using rule 138 (paso6 -> .)
    CTEINT          reduce using rule 138 (paso6 -> .)
    CTEFLOAT        reduce using rule 138 (paso6 -> .)
    CTECHAR         reduce using rule 138 (paso6 -> .)
    CTEBOOL         reduce using rule 138 (paso6 -> .)
    CTESTRING       reduce using rule 138 (paso6 -> .)
    CALL            reduce using rule 138 (paso6 -> .)

    paso6                          shift and go to state 121

state 97

    (90) factor -> auxFactor . varcte
    (93) varcte -> . ID paso1 addType auxVarcte
    (94) varcte -> . CTEINT paso1 cteInt assignDirectionCteInt
    (95) varcte -> . CTEFLOAT paso1 cteFloat assignDirectionCteFloat
    (96) varcte -> . CTECHAR paso1 cteChar assignDirectionCteChar
    (97) varcte -> . CTEBOOL paso1 cteBool assignDirectionCteBool
    (98) varcte -> . CTESTRING paso1 cteString assignDirectionCteString
    (99) varcte -> . llamada
    (122) llamada -> . CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26

    ID              shift and go to state 128
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 125
    CTECHAR         shift and go to state 123
    CTEBOOL         shift and go to state 130
    CTESTRING       shift and go to state 122
    CALL            shift and go to state 129

    varcte                         shift and go to state 124
    llamada                        shift and go to state 126

state 98

    (59) auxEscritura2 -> exp .

    COMMA           reduce using rule 59 (auxEscritura2 -> exp .)
    RPAREN          reduce using rule 59 (auxEscritura2 -> exp .)


state 99

    (121) ciclo -> WHILE paso15 LPAREN . expAndOr RPAREN paso16 bloque paso17
    (73) expAndOr -> . cicloExpresion auxCicloExpresion
    (61) cicloExpresion -> . expresion paso10
    (65) expresion -> . exp auxExpresion
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    expAndOr                       shift and go to state 131
    termino                        shift and go to state 87
    cicloExpresion                 shift and go to state 102
    auxExp                         shift and go to state 89
    cicloTermino                   shift and go to state 91
    factor                         shift and go to state 92
    cicloExp                       shift and go to state 93
    auxFactor                      shift and go to state 97
    expresion                      shift and go to state 103
    exp                            shift and go to state 104

state 100

    (52) asignacion -> ID paso1 addType . auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (53) auxAsignacion1 -> . LBRACKET paso6b exp RBRACKET paso7b paso27
    (54) auxAsignacion1 -> .

    LBRACKET        shift and go to state 133
    EQUALA          reduce using rule 54 (auxAsignacion1 -> .)

    auxAsignacion1                 shift and go to state 132

state 101

    (74) condicion -> IF LPAREN expAndOr . paso12 RPAREN bloque auxCondicion paso14
    (147) paso12 -> .

    RPAREN          reduce using rule 147 (paso12 -> .)

    paso12                         shift and go to state 134

state 102

    (73) expAndOr -> cicloExpresion . auxCicloExpresion
    (62) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (63) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (64) auxCicloExpresion -> .

    AND             shift and go to state 135
    OR              shift and go to state 137
    RPAREN          reduce using rule 64 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 136

state 103

    (61) cicloExpresion -> expresion . paso10
    (145) paso10 -> .

    AND             reduce using rule 145 (paso10 -> .)
    OR              reduce using rule 145 (paso10 -> .)
    RPAREN          reduce using rule 145 (paso10 -> .)

    paso10                         shift and go to state 138

state 104

    (65) expresion -> exp . auxExpresion
    (66) auxExpresion -> . GTHAN mayor exp
    (67) auxExpresion -> . LTHAN menor exp
    (68) auxExpresion -> . NOTEQUAL diferente exp
    (69) auxExpresion -> . GETHAN mayorIg exp
    (70) auxExpresion -> . LETHAN menorIg exp
    (71) auxExpresion -> . EQUAL igual exp
    (72) auxExpresion -> .

    GTHAN           shift and go to state 141
    LTHAN           shift and go to state 144
    NOTEQUAL        shift and go to state 139
    GETHAN          shift and go to state 143
    LETHAN          shift and go to state 145
    EQUAL           shift and go to state 142
    AND             reduce using rule 72 (auxExpresion -> .)
    OR              reduce using rule 72 (auxExpresion -> .)
    RPAREN          reduce using rule 72 (auxExpresion -> .)
    SEMICOLON       reduce using rule 72 (auxExpresion -> .)

    auxExpresion                   shift and go to state 140

state 105

    (119) ambAuxParametros -> COMMA . auxParametros
    (117) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 53
    auxParametros                  shift and go to state 146

state 106

    (117) auxParametros -> tipo ID addParameters ambAuxParametros .

    RPAREN          reduce using rule 117 (auxParametros -> tipo ID addParameters ambAuxParametros .)


state 107

    (38) cicloVarsFuncion -> varsFuncion . cicloVarsFuncion
    (38) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (39) cicloVarsFuncion -> .
    (40) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (41) createVariableDirFuncion -> .

    ID              reduce using rule 39 (cicloVarsFuncion -> .)
    IF              reduce using rule 39 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 39 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 39 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 39 (cicloVarsFuncion -> .)
    VAR             reduce using rule 41 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 107
    cicloVarsFuncion               shift and go to state 147
    createVariableDirFuncion       shift and go to state 109

state 108

    (35) bloqueFuncion -> LBRACE cicloVarsFuncion . paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
    (156) paso21 -> .

    ID              reduce using rule 156 (paso21 -> .)
    IF              reduce using rule 156 (paso21 -> .)
    PRINT           reduce using rule 156 (paso21 -> .)
    WHILE           reduce using rule 156 (paso21 -> .)
    RETURN          reduce using rule 156 (paso21 -> .)

    paso21                         shift and go to state 148

state 109

    (40) varsFuncion -> createVariableDirFuncion . VAR auxVar1Funcion

    VAR             shift and go to state 149


state 110

    (111) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc . paso22 paso23
    (157) paso22 -> .

    FUNCTION        reduce using rule 157 (paso22 -> .)
    MAIN            reduce using rule 157 (paso22 -> .)

    paso22                         shift and go to state 150

state 111

    (26) auxVar1Main -> idVarsMain COLON tipo . addTypeMain SEMICOLON
    (27) addTypeMain -> .

    SEMICOLON       reduce using rule 27 (addTypeMain -> .)

    addTypeMain                    shift and go to state 151

state 112

    (28) idVarsMain -> ID addVariableDirMain ambIdVarsMain .

    COLON           reduce using rule 28 (idVarsMain -> ID addVariableDirMain ambIdVarsMain .)


state 113

    (30) ambIdVarsMain -> COMMA . idVarsMain
    (28) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 74

    idVarsMain                     shift and go to state 152

state 114

    (60) auxEscritura2 -> CTESTRING paso1 .

    COMMA           reduce using rule 60 (auxEscritura2 -> CTESTRING paso1 .)
    RPAREN          reduce using rule 60 (auxEscritura2 -> CTESTRING paso1 .)


state 115

    (78) cicloExp -> termino paso4 . ambExp
    (79) ambExp -> . auxExp cicloExp
    (80) ambExp -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    COMMA           reduce using rule 80 (ambExp -> .)
    RPAREN          reduce using rule 80 (ambExp -> .)
    GTHAN           reduce using rule 80 (ambExp -> .)
    LTHAN           reduce using rule 80 (ambExp -> .)
    NOTEQUAL        reduce using rule 80 (ambExp -> .)
    GETHAN          reduce using rule 80 (ambExp -> .)
    LETHAN          reduce using rule 80 (ambExp -> .)
    EQUAL           reduce using rule 80 (ambExp -> .)
    AND             reduce using rule 80 (ambExp -> .)
    OR              reduce using rule 80 (ambExp -> .)
    RBRACKET        reduce using rule 80 (ambExp -> .)
    SEMICOLON       reduce using rule 80 (ambExp -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 153
    ambExp                         shift and go to state 154

state 116

    (82) auxExp -> MINUS paso3_resta .

    ID              reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CTEINT          reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CTEFLOAT        reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CTECHAR         reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CTEBOOL         reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CTESTRING       reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CALL            reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    LPAREN          reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    PLUS            reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    MINUS           reduce using rule 82 (auxExp -> MINUS paso3_resta .)


state 117

    (81) auxExp -> PLUS paso3_suma .

    ID              reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CTEINT          reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CTEFLOAT        reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CTECHAR         reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CTEBOOL         reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CTESTRING       reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CALL            reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    LPAREN          reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    PLUS            reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    MINUS           reduce using rule 81 (auxExp -> PLUS paso3_suma .)


state 118

    (84) cicloTermino -> factor paso5 . ambCicloTermino
    (85) ambCicloTermino -> . auxTermino cicloTermino
    (86) ambCicloTermino -> .
    (87) auxTermino -> . MULTI paso2_mult
    (88) auxTermino -> . DIVIDE paso2_div

    PLUS            reduce using rule 86 (ambCicloTermino -> .)
    MINUS           reduce using rule 86 (ambCicloTermino -> .)
    COMMA           reduce using rule 86 (ambCicloTermino -> .)
    RPAREN          reduce using rule 86 (ambCicloTermino -> .)
    GTHAN           reduce using rule 86 (ambCicloTermino -> .)
    LTHAN           reduce using rule 86 (ambCicloTermino -> .)
    NOTEQUAL        reduce using rule 86 (ambCicloTermino -> .)
    GETHAN          reduce using rule 86 (ambCicloTermino -> .)
    LETHAN          reduce using rule 86 (ambCicloTermino -> .)
    EQUAL           reduce using rule 86 (ambCicloTermino -> .)
    AND             reduce using rule 86 (ambCicloTermino -> .)
    OR              reduce using rule 86 (ambCicloTermino -> .)
    RBRACKET        reduce using rule 86 (ambCicloTermino -> .)
    SEMICOLON       reduce using rule 86 (ambCicloTermino -> .)
    MULTI           shift and go to state 155
    DIVIDE          shift and go to state 158

    ambCicloTermino                shift and go to state 156
    auxTermino                     shift and go to state 157

state 119

    (55) escritura -> PRINT LPAREN auxEscritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 159


state 120

    (56) auxEscritura1 -> auxEscritura2 paso18 . ambAuxEscritura1
    (57) ambAuxEscritura1 -> . COMMA auxEscritura1
    (58) ambAuxEscritura1 -> .

    COMMA           shift and go to state 160
    RPAREN          reduce using rule 58 (ambAuxEscritura1 -> .)

    ambAuxEscritura1               shift and go to state 161

state 121

    (89) factor -> LPAREN paso6 . exp RPAREN paso7
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    termino                        shift and go to state 87
    exp                            shift and go to state 162
    factor                         shift and go to state 92
    cicloTermino                   shift and go to state 91
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93

state 122

    (98) varcte -> CTESTRING . paso1 cteString assignDirectionCteString
    (131) paso1 -> .

    MULTI           reduce using rule 131 (paso1 -> .)
    DIVIDE          reduce using rule 131 (paso1 -> .)
    PLUS            reduce using rule 131 (paso1 -> .)
    MINUS           reduce using rule 131 (paso1 -> .)
    COMMA           reduce using rule 131 (paso1 -> .)
    RPAREN          reduce using rule 131 (paso1 -> .)
    GTHAN           reduce using rule 131 (paso1 -> .)
    LTHAN           reduce using rule 131 (paso1 -> .)
    NOTEQUAL        reduce using rule 131 (paso1 -> .)
    GETHAN          reduce using rule 131 (paso1 -> .)
    LETHAN          reduce using rule 131 (paso1 -> .)
    EQUAL           reduce using rule 131 (paso1 -> .)
    AND             reduce using rule 131 (paso1 -> .)
    OR              reduce using rule 131 (paso1 -> .)
    RBRACKET        reduce using rule 131 (paso1 -> .)
    SEMICOLON       reduce using rule 131 (paso1 -> .)

    paso1                          shift and go to state 163

state 123

    (96) varcte -> CTECHAR . paso1 cteChar assignDirectionCteChar
    (131) paso1 -> .

    MULTI           reduce using rule 131 (paso1 -> .)
    DIVIDE          reduce using rule 131 (paso1 -> .)
    PLUS            reduce using rule 131 (paso1 -> .)
    MINUS           reduce using rule 131 (paso1 -> .)
    COMMA           reduce using rule 131 (paso1 -> .)
    RPAREN          reduce using rule 131 (paso1 -> .)
    GTHAN           reduce using rule 131 (paso1 -> .)
    LTHAN           reduce using rule 131 (paso1 -> .)
    NOTEQUAL        reduce using rule 131 (paso1 -> .)
    GETHAN          reduce using rule 131 (paso1 -> .)
    LETHAN          reduce using rule 131 (paso1 -> .)
    EQUAL           reduce using rule 131 (paso1 -> .)
    AND             reduce using rule 131 (paso1 -> .)
    OR              reduce using rule 131 (paso1 -> .)
    RBRACKET        reduce using rule 131 (paso1 -> .)
    SEMICOLON       reduce using rule 131 (paso1 -> .)

    paso1                          shift and go to state 164

state 124

    (90) factor -> auxFactor varcte .

    MULTI           reduce using rule 90 (factor -> auxFactor varcte .)
    DIVIDE          reduce using rule 90 (factor -> auxFactor varcte .)
    PLUS            reduce using rule 90 (factor -> auxFactor varcte .)
    MINUS           reduce using rule 90 (factor -> auxFactor varcte .)
    COMMA           reduce using rule 90 (factor -> auxFactor varcte .)
    RPAREN          reduce using rule 90 (factor -> auxFactor varcte .)
    GTHAN           reduce using rule 90 (factor -> auxFactor varcte .)
    LTHAN           reduce using rule 90 (factor -> auxFactor varcte .)
    NOTEQUAL        reduce using rule 90 (factor -> auxFactor varcte .)
    GETHAN          reduce using rule 90 (factor -> auxFactor varcte .)
    LETHAN          reduce using rule 90 (factor -> auxFactor varcte .)
    EQUAL           reduce using rule 90 (factor -> auxFactor varcte .)
    AND             reduce using rule 90 (factor -> auxFactor varcte .)
    OR              reduce using rule 90 (factor -> auxFactor varcte .)
    RBRACKET        reduce using rule 90 (factor -> auxFactor varcte .)
    SEMICOLON       reduce using rule 90 (factor -> auxFactor varcte .)


state 125

    (95) varcte -> CTEFLOAT . paso1 cteFloat assignDirectionCteFloat
    (131) paso1 -> .

    MULTI           reduce using rule 131 (paso1 -> .)
    DIVIDE          reduce using rule 131 (paso1 -> .)
    PLUS            reduce using rule 131 (paso1 -> .)
    MINUS           reduce using rule 131 (paso1 -> .)
    COMMA           reduce using rule 131 (paso1 -> .)
    RPAREN          reduce using rule 131 (paso1 -> .)
    GTHAN           reduce using rule 131 (paso1 -> .)
    LTHAN           reduce using rule 131 (paso1 -> .)
    NOTEQUAL        reduce using rule 131 (paso1 -> .)
    GETHAN          reduce using rule 131 (paso1 -> .)
    LETHAN          reduce using rule 131 (paso1 -> .)
    EQUAL           reduce using rule 131 (paso1 -> .)
    AND             reduce using rule 131 (paso1 -> .)
    OR              reduce using rule 131 (paso1 -> .)
    RBRACKET        reduce using rule 131 (paso1 -> .)
    SEMICOLON       reduce using rule 131 (paso1 -> .)

    paso1                          shift and go to state 165

state 126

    (99) varcte -> llamada .

    MULTI           reduce using rule 99 (varcte -> llamada .)
    DIVIDE          reduce using rule 99 (varcte -> llamada .)
    PLUS            reduce using rule 99 (varcte -> llamada .)
    MINUS           reduce using rule 99 (varcte -> llamada .)
    COMMA           reduce using rule 99 (varcte -> llamada .)
    RPAREN          reduce using rule 99 (varcte -> llamada .)
    GTHAN           reduce using rule 99 (varcte -> llamada .)
    LTHAN           reduce using rule 99 (varcte -> llamada .)
    NOTEQUAL        reduce using rule 99 (varcte -> llamada .)
    GETHAN          reduce using rule 99 (varcte -> llamada .)
    LETHAN          reduce using rule 99 (varcte -> llamada .)
    EQUAL           reduce using rule 99 (varcte -> llamada .)
    AND             reduce using rule 99 (varcte -> llamada .)
    OR              reduce using rule 99 (varcte -> llamada .)
    RBRACKET        reduce using rule 99 (varcte -> llamada .)
    SEMICOLON       reduce using rule 99 (varcte -> llamada .)


state 127

    (94) varcte -> CTEINT . paso1 cteInt assignDirectionCteInt
    (131) paso1 -> .

    MULTI           reduce using rule 131 (paso1 -> .)
    DIVIDE          reduce using rule 131 (paso1 -> .)
    PLUS            reduce using rule 131 (paso1 -> .)
    MINUS           reduce using rule 131 (paso1 -> .)
    COMMA           reduce using rule 131 (paso1 -> .)
    RPAREN          reduce using rule 131 (paso1 -> .)
    GTHAN           reduce using rule 131 (paso1 -> .)
    LTHAN           reduce using rule 131 (paso1 -> .)
    NOTEQUAL        reduce using rule 131 (paso1 -> .)
    GETHAN          reduce using rule 131 (paso1 -> .)
    LETHAN          reduce using rule 131 (paso1 -> .)
    EQUAL           reduce using rule 131 (paso1 -> .)
    AND             reduce using rule 131 (paso1 -> .)
    OR              reduce using rule 131 (paso1 -> .)
    RBRACKET        reduce using rule 131 (paso1 -> .)
    SEMICOLON       reduce using rule 131 (paso1 -> .)

    paso1                          shift and go to state 166

state 128

    (93) varcte -> ID . paso1 addType auxVarcte
    (131) paso1 -> .

    LPAREN          reduce using rule 131 (paso1 -> .)
    LBRACKET        reduce using rule 131 (paso1 -> .)
    MULTI           reduce using rule 131 (paso1 -> .)
    DIVIDE          reduce using rule 131 (paso1 -> .)
    PLUS            reduce using rule 131 (paso1 -> .)
    MINUS           reduce using rule 131 (paso1 -> .)
    COMMA           reduce using rule 131 (paso1 -> .)
    RPAREN          reduce using rule 131 (paso1 -> .)
    GTHAN           reduce using rule 131 (paso1 -> .)
    LTHAN           reduce using rule 131 (paso1 -> .)
    NOTEQUAL        reduce using rule 131 (paso1 -> .)
    GETHAN          reduce using rule 131 (paso1 -> .)
    LETHAN          reduce using rule 131 (paso1 -> .)
    EQUAL           reduce using rule 131 (paso1 -> .)
    AND             reduce using rule 131 (paso1 -> .)
    OR              reduce using rule 131 (paso1 -> .)
    RBRACKET        reduce using rule 131 (paso1 -> .)
    SEMICOLON       reduce using rule 131 (paso1 -> .)

    paso1                          shift and go to state 167

state 129

    (122) llamada -> CALL . COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26

    COLON           shift and go to state 168


state 130

    (97) varcte -> CTEBOOL . paso1 cteBool assignDirectionCteBool
    (131) paso1 -> .

    MULTI           reduce using rule 131 (paso1 -> .)
    DIVIDE          reduce using rule 131 (paso1 -> .)
    PLUS            reduce using rule 131 (paso1 -> .)
    MINUS           reduce using rule 131 (paso1 -> .)
    COMMA           reduce using rule 131 (paso1 -> .)
    RPAREN          reduce using rule 131 (paso1 -> .)
    GTHAN           reduce using rule 131 (paso1 -> .)
    LTHAN           reduce using rule 131 (paso1 -> .)
    NOTEQUAL        reduce using rule 131 (paso1 -> .)
    GETHAN          reduce using rule 131 (paso1 -> .)
    LETHAN          reduce using rule 131 (paso1 -> .)
    EQUAL           reduce using rule 131 (paso1 -> .)
    AND             reduce using rule 131 (paso1 -> .)
    OR              reduce using rule 131 (paso1 -> .)
    RBRACKET        reduce using rule 131 (paso1 -> .)
    SEMICOLON       reduce using rule 131 (paso1 -> .)

    paso1                          shift and go to state 169

state 131

    (121) ciclo -> WHILE paso15 LPAREN expAndOr . RPAREN paso16 bloque paso17

    RPAREN          shift and go to state 170


state 132

    (52) asignacion -> ID paso1 addType auxAsignacion1 . EQUALA asig exp paso11 SEMICOLON

    EQUALA          shift and go to state 171


state 133

    (53) auxAsignacion1 -> LBRACKET . paso6b exp RBRACKET paso7b paso27
    (140) paso6b -> .

    LPAREN          reduce using rule 140 (paso6b -> .)
    PLUS            reduce using rule 140 (paso6b -> .)
    MINUS           reduce using rule 140 (paso6b -> .)
    ID              reduce using rule 140 (paso6b -> .)
    CTEINT          reduce using rule 140 (paso6b -> .)
    CTEFLOAT        reduce using rule 140 (paso6b -> .)
    CTECHAR         reduce using rule 140 (paso6b -> .)
    CTEBOOL         reduce using rule 140 (paso6b -> .)
    CTESTRING       reduce using rule 140 (paso6b -> .)
    CALL            reduce using rule 140 (paso6b -> .)

    paso6b                         shift and go to state 172

state 134

    (74) condicion -> IF LPAREN expAndOr paso12 . RPAREN bloque auxCondicion paso14

    RPAREN          shift and go to state 173


state 135

    (62) auxCicloExpresion -> AND . paso8_and cicloExpresion paso9 auxCicloExpresion
    (142) paso8_and -> .

    LPAREN          reduce using rule 142 (paso8_and -> .)
    PLUS            reduce using rule 142 (paso8_and -> .)
    MINUS           reduce using rule 142 (paso8_and -> .)
    ID              reduce using rule 142 (paso8_and -> .)
    CTEINT          reduce using rule 142 (paso8_and -> .)
    CTEFLOAT        reduce using rule 142 (paso8_and -> .)
    CTECHAR         reduce using rule 142 (paso8_and -> .)
    CTEBOOL         reduce using rule 142 (paso8_and -> .)
    CTESTRING       reduce using rule 142 (paso8_and -> .)
    CALL            reduce using rule 142 (paso8_and -> .)

    paso8_and                      shift and go to state 174

state 136

    (73) expAndOr -> cicloExpresion auxCicloExpresion .

    RPAREN          reduce using rule 73 (expAndOr -> cicloExpresion auxCicloExpresion .)


state 137

    (63) auxCicloExpresion -> OR . paso8_or cicloExpresion paso9 auxCicloExpresion
    (143) paso8_or -> .

    LPAREN          reduce using rule 143 (paso8_or -> .)
    PLUS            reduce using rule 143 (paso8_or -> .)
    MINUS           reduce using rule 143 (paso8_or -> .)
    ID              reduce using rule 143 (paso8_or -> .)
    CTEINT          reduce using rule 143 (paso8_or -> .)
    CTEFLOAT        reduce using rule 143 (paso8_or -> .)
    CTECHAR         reduce using rule 143 (paso8_or -> .)
    CTEBOOL         reduce using rule 143 (paso8_or -> .)
    CTESTRING       reduce using rule 143 (paso8_or -> .)
    CALL            reduce using rule 143 (paso8_or -> .)

    paso8_or                       shift and go to state 175

state 138

    (61) cicloExpresion -> expresion paso10 .

    AND             reduce using rule 61 (cicloExpresion -> expresion paso10 .)
    OR              reduce using rule 61 (cicloExpresion -> expresion paso10 .)
    RPAREN          reduce using rule 61 (cicloExpresion -> expresion paso10 .)


state 139

    (68) auxExpresion -> NOTEQUAL . diferente exp
    (175) diferente -> .

    LPAREN          reduce using rule 175 (diferente -> .)
    PLUS            reduce using rule 175 (diferente -> .)
    MINUS           reduce using rule 175 (diferente -> .)
    ID              reduce using rule 175 (diferente -> .)
    CTEINT          reduce using rule 175 (diferente -> .)
    CTEFLOAT        reduce using rule 175 (diferente -> .)
    CTECHAR         reduce using rule 175 (diferente -> .)
    CTEBOOL         reduce using rule 175 (diferente -> .)
    CTESTRING       reduce using rule 175 (diferente -> .)
    CALL            reduce using rule 175 (diferente -> .)

    diferente                      shift and go to state 176

state 140

    (65) expresion -> exp auxExpresion .

    AND             reduce using rule 65 (expresion -> exp auxExpresion .)
    OR              reduce using rule 65 (expresion -> exp auxExpresion .)
    RPAREN          reduce using rule 65 (expresion -> exp auxExpresion .)
    SEMICOLON       reduce using rule 65 (expresion -> exp auxExpresion .)


state 141

    (66) auxExpresion -> GTHAN . mayor exp
    (170) mayor -> .

    LPAREN          reduce using rule 170 (mayor -> .)
    PLUS            reduce using rule 170 (mayor -> .)
    MINUS           reduce using rule 170 (mayor -> .)
    ID              reduce using rule 170 (mayor -> .)
    CTEINT          reduce using rule 170 (mayor -> .)
    CTEFLOAT        reduce using rule 170 (mayor -> .)
    CTECHAR         reduce using rule 170 (mayor -> .)
    CTEBOOL         reduce using rule 170 (mayor -> .)
    CTESTRING       reduce using rule 170 (mayor -> .)
    CALL            reduce using rule 170 (mayor -> .)

    mayor                          shift and go to state 177

state 142

    (71) auxExpresion -> EQUAL . igual exp
    (174) igual -> .

    LPAREN          reduce using rule 174 (igual -> .)
    PLUS            reduce using rule 174 (igual -> .)
    MINUS           reduce using rule 174 (igual -> .)
    ID              reduce using rule 174 (igual -> .)
    CTEINT          reduce using rule 174 (igual -> .)
    CTEFLOAT        reduce using rule 174 (igual -> .)
    CTECHAR         reduce using rule 174 (igual -> .)
    CTEBOOL         reduce using rule 174 (igual -> .)
    CTESTRING       reduce using rule 174 (igual -> .)
    CALL            reduce using rule 174 (igual -> .)

    igual                          shift and go to state 178

state 143

    (69) auxExpresion -> GETHAN . mayorIg exp
    (172) mayorIg -> .

    LPAREN          reduce using rule 172 (mayorIg -> .)
    PLUS            reduce using rule 172 (mayorIg -> .)
    MINUS           reduce using rule 172 (mayorIg -> .)
    ID              reduce using rule 172 (mayorIg -> .)
    CTEINT          reduce using rule 172 (mayorIg -> .)
    CTEFLOAT        reduce using rule 172 (mayorIg -> .)
    CTECHAR         reduce using rule 172 (mayorIg -> .)
    CTEBOOL         reduce using rule 172 (mayorIg -> .)
    CTESTRING       reduce using rule 172 (mayorIg -> .)
    CALL            reduce using rule 172 (mayorIg -> .)

    mayorIg                        shift and go to state 179

state 144

    (67) auxExpresion -> LTHAN . menor exp
    (171) menor -> .

    LPAREN          reduce using rule 171 (menor -> .)
    PLUS            reduce using rule 171 (menor -> .)
    MINUS           reduce using rule 171 (menor -> .)
    ID              reduce using rule 171 (menor -> .)
    CTEINT          reduce using rule 171 (menor -> .)
    CTEFLOAT        reduce using rule 171 (menor -> .)
    CTECHAR         reduce using rule 171 (menor -> .)
    CTEBOOL         reduce using rule 171 (menor -> .)
    CTESTRING       reduce using rule 171 (menor -> .)
    CALL            reduce using rule 171 (menor -> .)

    menor                          shift and go to state 180

state 145

    (70) auxExpresion -> LETHAN . menorIg exp
    (173) menorIg -> .

    LPAREN          reduce using rule 173 (menorIg -> .)
    PLUS            reduce using rule 173 (menorIg -> .)
    MINUS           reduce using rule 173 (menorIg -> .)
    ID              reduce using rule 173 (menorIg -> .)
    CTEINT          reduce using rule 173 (menorIg -> .)
    CTEFLOAT        reduce using rule 173 (menorIg -> .)
    CTECHAR         reduce using rule 173 (menorIg -> .)
    CTEBOOL         reduce using rule 173 (menorIg -> .)
    CTESTRING       reduce using rule 173 (menorIg -> .)
    CALL            reduce using rule 173 (menorIg -> .)

    menorIg                        shift and go to state 181

state 146

    (119) ambAuxParametros -> COMMA auxParametros .

    RPAREN          reduce using rule 119 (ambAuxParametros -> COMMA auxParametros .)


state 147

    (38) cicloVarsFuncion -> varsFuncion cicloVarsFuncion .

    ID              reduce using rule 38 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    IF              reduce using rule 38 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    PRINT           reduce using rule 38 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    WHILE           reduce using rule 38 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    RETURN          reduce using rule 38 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)


state 148

    (35) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 . cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
    (36) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (37) cicloBloqueFuncion -> .
    (48) estatuto -> . asignacion
    (49) estatuto -> . condicion
    (50) estatuto -> . escritura
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (74) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (121) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RETURN          reduce using rule 37 (cicloBloqueFuncion -> .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    PRINT           shift and go to state 58
    WHILE           shift and go to state 59

    ciclo                          shift and go to state 60
    estatuto                       shift and go to state 182
    condicion                      shift and go to state 62
    cicloBloqueFuncion             shift and go to state 183
    asignacion                     shift and go to state 66
    escritura                      shift and go to state 67

state 149

    (40) varsFuncion -> createVariableDirFuncion VAR . auxVar1Funcion
    (42) auxVar1Funcion -> . idVarsFuncion COLON tipo addTypeFuncion SEMICOLON
    (44) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 186

    idVarsFuncion                  shift and go to state 184
    auxVar1Funcion                 shift and go to state 185

state 150

    (111) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 . paso23
    (158) paso23 -> .

    FUNCTION        reduce using rule 158 (paso23 -> .)
    MAIN            reduce using rule 158 (paso23 -> .)

    paso23                         shift and go to state 187

state 151

    (26) auxVar1Main -> idVarsMain COLON tipo addTypeMain . SEMICOLON

    SEMICOLON       shift and go to state 188


state 152

    (30) ambIdVarsMain -> COMMA idVarsMain .

    COLON           reduce using rule 30 (ambIdVarsMain -> COMMA idVarsMain .)


state 153

    (79) ambExp -> auxExp . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    cicloExp                       shift and go to state 189
    termino                        shift and go to state 87
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    auxExp                         shift and go to state 89
    cicloTermino                   shift and go to state 91

state 154

    (78) cicloExp -> termino paso4 ambExp .

    GTHAN           reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    LTHAN           reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    NOTEQUAL        reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    GETHAN          reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    LETHAN          reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    EQUAL           reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    AND             reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    OR              reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    RPAREN          reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    COMMA           reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    SEMICOLON       reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    RBRACKET        reduce using rule 78 (cicloExp -> termino paso4 ambExp .)


state 155

    (87) auxTermino -> MULTI . paso2_mult
    (132) paso2_mult -> .

    LPAREN          reduce using rule 132 (paso2_mult -> .)
    PLUS            reduce using rule 132 (paso2_mult -> .)
    MINUS           reduce using rule 132 (paso2_mult -> .)
    ID              reduce using rule 132 (paso2_mult -> .)
    CTEINT          reduce using rule 132 (paso2_mult -> .)
    CTEFLOAT        reduce using rule 132 (paso2_mult -> .)
    CTECHAR         reduce using rule 132 (paso2_mult -> .)
    CTEBOOL         reduce using rule 132 (paso2_mult -> .)
    CTESTRING       reduce using rule 132 (paso2_mult -> .)
    CALL            reduce using rule 132 (paso2_mult -> .)

    paso2_mult                     shift and go to state 190

state 156

    (84) cicloTermino -> factor paso5 ambCicloTermino .

    PLUS            reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    MINUS           reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    COMMA           reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    RPAREN          reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    RBRACKET        reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    GTHAN           reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    LTHAN           reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    NOTEQUAL        reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    GETHAN          reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    LETHAN          reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    EQUAL           reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    AND             reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    OR              reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    SEMICOLON       reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)


state 157

    (85) ambCicloTermino -> auxTermino . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    cicloTermino                   shift and go to state 191
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97

state 158

    (88) auxTermino -> DIVIDE . paso2_div
    (133) paso2_div -> .

    LPAREN          reduce using rule 133 (paso2_div -> .)
    PLUS            reduce using rule 133 (paso2_div -> .)
    MINUS           reduce using rule 133 (paso2_div -> .)
    ID              reduce using rule 133 (paso2_div -> .)
    CTEINT          reduce using rule 133 (paso2_div -> .)
    CTEFLOAT        reduce using rule 133 (paso2_div -> .)
    CTECHAR         reduce using rule 133 (paso2_div -> .)
    CTEBOOL         reduce using rule 133 (paso2_div -> .)
    CTESTRING       reduce using rule 133 (paso2_div -> .)
    CALL            reduce using rule 133 (paso2_div -> .)

    paso2_div                      shift and go to state 192

state 159

    (55) escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .

    ID              reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)


state 160

    (57) ambAuxEscritura1 -> COMMA . auxEscritura1
    (56) auxEscritura1 -> . auxEscritura2 paso18 ambAuxEscritura1
    (59) auxEscritura2 -> . exp
    (60) auxEscritura2 -> . CTESTRING paso1
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 86
    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

  ! CTESTRING       [ reduce using rule 92 (auxFactor -> .) ]

    auxExp                         shift and go to state 89
    auxEscritura1                  shift and go to state 193
    auxEscritura2                  shift and go to state 95
    termino                        shift and go to state 87
    exp                            shift and go to state 98
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 161

    (56) auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1 .

    RPAREN          reduce using rule 56 (auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1 .)


state 162

    (89) factor -> LPAREN paso6 exp . RPAREN paso7

    RPAREN          shift and go to state 194


state 163

    (98) varcte -> CTESTRING paso1 . cteString assignDirectionCteString
    (168) cteString -> .

    MULTI           reduce using rule 168 (cteString -> .)
    DIVIDE          reduce using rule 168 (cteString -> .)
    PLUS            reduce using rule 168 (cteString -> .)
    MINUS           reduce using rule 168 (cteString -> .)
    COMMA           reduce using rule 168 (cteString -> .)
    RPAREN          reduce using rule 168 (cteString -> .)
    GTHAN           reduce using rule 168 (cteString -> .)
    LTHAN           reduce using rule 168 (cteString -> .)
    NOTEQUAL        reduce using rule 168 (cteString -> .)
    GETHAN          reduce using rule 168 (cteString -> .)
    LETHAN          reduce using rule 168 (cteString -> .)
    EQUAL           reduce using rule 168 (cteString -> .)
    AND             reduce using rule 168 (cteString -> .)
    OR              reduce using rule 168 (cteString -> .)
    RBRACKET        reduce using rule 168 (cteString -> .)
    SEMICOLON       reduce using rule 168 (cteString -> .)

    cteString                      shift and go to state 195

state 164

    (96) varcte -> CTECHAR paso1 . cteChar assignDirectionCteChar
    (166) cteChar -> .

    MULTI           reduce using rule 166 (cteChar -> .)
    DIVIDE          reduce using rule 166 (cteChar -> .)
    PLUS            reduce using rule 166 (cteChar -> .)
    MINUS           reduce using rule 166 (cteChar -> .)
    COMMA           reduce using rule 166 (cteChar -> .)
    RPAREN          reduce using rule 166 (cteChar -> .)
    GTHAN           reduce using rule 166 (cteChar -> .)
    LTHAN           reduce using rule 166 (cteChar -> .)
    NOTEQUAL        reduce using rule 166 (cteChar -> .)
    GETHAN          reduce using rule 166 (cteChar -> .)
    LETHAN          reduce using rule 166 (cteChar -> .)
    EQUAL           reduce using rule 166 (cteChar -> .)
    AND             reduce using rule 166 (cteChar -> .)
    OR              reduce using rule 166 (cteChar -> .)
    RBRACKET        reduce using rule 166 (cteChar -> .)
    SEMICOLON       reduce using rule 166 (cteChar -> .)

    cteChar                        shift and go to state 196

state 165

    (95) varcte -> CTEFLOAT paso1 . cteFloat assignDirectionCteFloat
    (165) cteFloat -> .

    MULTI           reduce using rule 165 (cteFloat -> .)
    DIVIDE          reduce using rule 165 (cteFloat -> .)
    PLUS            reduce using rule 165 (cteFloat -> .)
    MINUS           reduce using rule 165 (cteFloat -> .)
    COMMA           reduce using rule 165 (cteFloat -> .)
    RPAREN          reduce using rule 165 (cteFloat -> .)
    GTHAN           reduce using rule 165 (cteFloat -> .)
    LTHAN           reduce using rule 165 (cteFloat -> .)
    NOTEQUAL        reduce using rule 165 (cteFloat -> .)
    GETHAN          reduce using rule 165 (cteFloat -> .)
    LETHAN          reduce using rule 165 (cteFloat -> .)
    EQUAL           reduce using rule 165 (cteFloat -> .)
    AND             reduce using rule 165 (cteFloat -> .)
    OR              reduce using rule 165 (cteFloat -> .)
    RBRACKET        reduce using rule 165 (cteFloat -> .)
    SEMICOLON       reduce using rule 165 (cteFloat -> .)

    cteFloat                       shift and go to state 197

state 166

    (94) varcte -> CTEINT paso1 . cteInt assignDirectionCteInt
    (164) cteInt -> .

    MULTI           reduce using rule 164 (cteInt -> .)
    DIVIDE          reduce using rule 164 (cteInt -> .)
    PLUS            reduce using rule 164 (cteInt -> .)
    MINUS           reduce using rule 164 (cteInt -> .)
    COMMA           reduce using rule 164 (cteInt -> .)
    RPAREN          reduce using rule 164 (cteInt -> .)
    GTHAN           reduce using rule 164 (cteInt -> .)
    LTHAN           reduce using rule 164 (cteInt -> .)
    NOTEQUAL        reduce using rule 164 (cteInt -> .)
    GETHAN          reduce using rule 164 (cteInt -> .)
    LETHAN          reduce using rule 164 (cteInt -> .)
    EQUAL           reduce using rule 164 (cteInt -> .)
    AND             reduce using rule 164 (cteInt -> .)
    OR              reduce using rule 164 (cteInt -> .)
    RBRACKET        reduce using rule 164 (cteInt -> .)
    SEMICOLON       reduce using rule 164 (cteInt -> .)

    cteInt                         shift and go to state 198

state 167

    (93) varcte -> ID paso1 . addType auxVarcte
    (105) addType -> .

    LPAREN          reduce using rule 105 (addType -> .)
    LBRACKET        reduce using rule 105 (addType -> .)
    MULTI           reduce using rule 105 (addType -> .)
    DIVIDE          reduce using rule 105 (addType -> .)
    PLUS            reduce using rule 105 (addType -> .)
    MINUS           reduce using rule 105 (addType -> .)
    COMMA           reduce using rule 105 (addType -> .)
    RPAREN          reduce using rule 105 (addType -> .)
    GTHAN           reduce using rule 105 (addType -> .)
    LTHAN           reduce using rule 105 (addType -> .)
    NOTEQUAL        reduce using rule 105 (addType -> .)
    GETHAN          reduce using rule 105 (addType -> .)
    LETHAN          reduce using rule 105 (addType -> .)
    EQUAL           reduce using rule 105 (addType -> .)
    AND             reduce using rule 105 (addType -> .)
    OR              reduce using rule 105 (addType -> .)
    RBRACKET        reduce using rule 105 (addType -> .)
    SEMICOLON       reduce using rule 105 (addType -> .)

    addType                        shift and go to state 199

state 168

    (122) llamada -> CALL COLON . ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26

    ID              shift and go to state 200


state 169

    (97) varcte -> CTEBOOL paso1 . cteBool assignDirectionCteBool
    (167) cteBool -> .

    MULTI           reduce using rule 167 (cteBool -> .)
    DIVIDE          reduce using rule 167 (cteBool -> .)
    PLUS            reduce using rule 167 (cteBool -> .)
    MINUS           reduce using rule 167 (cteBool -> .)
    COMMA           reduce using rule 167 (cteBool -> .)
    RPAREN          reduce using rule 167 (cteBool -> .)
    GTHAN           reduce using rule 167 (cteBool -> .)
    LTHAN           reduce using rule 167 (cteBool -> .)
    NOTEQUAL        reduce using rule 167 (cteBool -> .)
    GETHAN          reduce using rule 167 (cteBool -> .)
    LETHAN          reduce using rule 167 (cteBool -> .)
    EQUAL           reduce using rule 167 (cteBool -> .)
    AND             reduce using rule 167 (cteBool -> .)
    OR              reduce using rule 167 (cteBool -> .)
    RBRACKET        reduce using rule 167 (cteBool -> .)
    SEMICOLON       reduce using rule 167 (cteBool -> .)

    cteBool                        shift and go to state 201

state 170

    (121) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN . paso16 bloque paso17
    (151) paso16 -> .

    LBRACE          reduce using rule 151 (paso16 -> .)

    paso16                         shift and go to state 202

state 171

    (52) asignacion -> ID paso1 addType auxAsignacion1 EQUALA . asig exp paso11 SEMICOLON
    (176) asig -> .

    LPAREN          reduce using rule 176 (asig -> .)
    PLUS            reduce using rule 176 (asig -> .)
    MINUS           reduce using rule 176 (asig -> .)
    ID              reduce using rule 176 (asig -> .)
    CTEINT          reduce using rule 176 (asig -> .)
    CTEFLOAT        reduce using rule 176 (asig -> .)
    CTECHAR         reduce using rule 176 (asig -> .)
    CTEBOOL         reduce using rule 176 (asig -> .)
    CTESTRING       reduce using rule 176 (asig -> .)
    CALL            reduce using rule 176 (asig -> .)

    asig                           shift and go to state 203

state 172

    (53) auxAsignacion1 -> LBRACKET paso6b . exp RBRACKET paso7b paso27
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    termino                        shift and go to state 87
    exp                            shift and go to state 204
    factor                         shift and go to state 92
    auxExp                         shift and go to state 89
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 173

    (74) condicion -> IF LPAREN expAndOr paso12 RPAREN . bloque auxCondicion paso14
    (32) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 39

    bloque                         shift and go to state 205

state 174

    (62) auxCicloExpresion -> AND paso8_and . cicloExpresion paso9 auxCicloExpresion
    (61) cicloExpresion -> . expresion paso10
    (65) expresion -> . exp auxExpresion
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    termino                        shift and go to state 87
    cicloExpresion                 shift and go to state 206
    cicloTermino                   shift and go to state 91
    factor                         shift and go to state 92
    cicloExp                       shift and go to state 93
    auxFactor                      shift and go to state 97
    auxExp                         shift and go to state 89
    expresion                      shift and go to state 103
    exp                            shift and go to state 104

state 175

    (63) auxCicloExpresion -> OR paso8_or . cicloExpresion paso9 auxCicloExpresion
    (61) cicloExpresion -> . expresion paso10
    (65) expresion -> . exp auxExpresion
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    termino                        shift and go to state 87
    cicloExpresion                 shift and go to state 207
    cicloTermino                   shift and go to state 91
    factor                         shift and go to state 92
    cicloExp                       shift and go to state 93
    auxFactor                      shift and go to state 97
    auxExp                         shift and go to state 89
    expresion                      shift and go to state 103
    exp                            shift and go to state 104

state 176

    (68) auxExpresion -> NOTEQUAL diferente . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    termino                        shift and go to state 87
    exp                            shift and go to state 208
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 177

    (66) auxExpresion -> GTHAN mayor . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    cicloExp                       shift and go to state 93
    termino                        shift and go to state 87
    exp                            shift and go to state 209
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloTermino                   shift and go to state 91

state 178

    (71) auxExpresion -> EQUAL igual . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    termino                        shift and go to state 87
    exp                            shift and go to state 210
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 179

    (69) auxExpresion -> GETHAN mayorIg . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    termino                        shift and go to state 87
    exp                            shift and go to state 211
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 180

    (67) auxExpresion -> LTHAN menor . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    termino                        shift and go to state 87
    exp                            shift and go to state 212
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 181

    (70) auxExpresion -> LETHAN menorIg . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    termino                        shift and go to state 87
    exp                            shift and go to state 213
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 182

    (36) cicloBloqueFuncion -> estatuto . cicloBloqueFuncion
    (36) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (37) cicloBloqueFuncion -> .
    (48) estatuto -> . asignacion
    (49) estatuto -> . condicion
    (50) estatuto -> . escritura
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (74) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (121) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RETURN          reduce using rule 37 (cicloBloqueFuncion -> .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    PRINT           shift and go to state 58
    WHILE           shift and go to state 59

    ciclo                          shift and go to state 60
    asignacion                     shift and go to state 66
    estatuto                       shift and go to state 182
    condicion                      shift and go to state 62
    cicloBloqueFuncion             shift and go to state 214
    escritura                      shift and go to state 67

state 183

    (35) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion . RETURN expresion SEMICOLON RBRACE

    RETURN          shift and go to state 215


state 184

    (42) auxVar1Funcion -> idVarsFuncion . COLON tipo addTypeFuncion SEMICOLON

    COLON           shift and go to state 216


state 185

    (40) varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .

    VAR             reduce using rule 40 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    ID              reduce using rule 40 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    IF              reduce using rule 40 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    PRINT           reduce using rule 40 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    WHILE           reduce using rule 40 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    RETURN          reduce using rule 40 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)


state 186

    (44) idVarsFuncion -> ID . addVariableDirFuncion ambIdVarsFuncion
    (45) addVariableDirFuncion -> .

    COMMA           reduce using rule 45 (addVariableDirFuncion -> .)
    COLON           reduce using rule 45 (addVariableDirFuncion -> .)

    addVariableDirFuncion          shift and go to state 217

state 187

    (111) funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23 .

    FUNCTION        reduce using rule 111 (funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23 .)
    MAIN            reduce using rule 111 (funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23 .)


state 188

    (26) auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .

    VAR             reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    ID              reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    IF              reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    PRINT           reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    WHILE           reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)
    RBRACE          reduce using rule 26 (auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON .)


state 189

    (79) ambExp -> auxExp cicloExp .

    COMMA           reduce using rule 79 (ambExp -> auxExp cicloExp .)
    RPAREN          reduce using rule 79 (ambExp -> auxExp cicloExp .)
    GTHAN           reduce using rule 79 (ambExp -> auxExp cicloExp .)
    LTHAN           reduce using rule 79 (ambExp -> auxExp cicloExp .)
    NOTEQUAL        reduce using rule 79 (ambExp -> auxExp cicloExp .)
    GETHAN          reduce using rule 79 (ambExp -> auxExp cicloExp .)
    LETHAN          reduce using rule 79 (ambExp -> auxExp cicloExp .)
    EQUAL           reduce using rule 79 (ambExp -> auxExp cicloExp .)
    AND             reduce using rule 79 (ambExp -> auxExp cicloExp .)
    OR              reduce using rule 79 (ambExp -> auxExp cicloExp .)
    RBRACKET        reduce using rule 79 (ambExp -> auxExp cicloExp .)
    SEMICOLON       reduce using rule 79 (ambExp -> auxExp cicloExp .)


state 190

    (87) auxTermino -> MULTI paso2_mult .

    LPAREN          reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    PLUS            reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    MINUS           reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    ID              reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CTEINT          reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CTEFLOAT        reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CTECHAR         reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CTEBOOL         reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CTESTRING       reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CALL            reduce using rule 87 (auxTermino -> MULTI paso2_mult .)


state 191

    (85) ambCicloTermino -> auxTermino cicloTermino .

    PLUS            reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    MINUS           reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    COMMA           reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    RPAREN          reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    GTHAN           reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    LTHAN           reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    NOTEQUAL        reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    GETHAN          reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    LETHAN          reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    EQUAL           reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    AND             reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    OR              reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    RBRACKET        reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    SEMICOLON       reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)


state 192

    (88) auxTermino -> DIVIDE paso2_div .

    LPAREN          reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    PLUS            reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    MINUS           reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    ID              reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CTEINT          reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CTEFLOAT        reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CTECHAR         reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CTEBOOL         reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CTESTRING       reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CALL            reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)


state 193

    (57) ambAuxEscritura1 -> COMMA auxEscritura1 .

    RPAREN          reduce using rule 57 (ambAuxEscritura1 -> COMMA auxEscritura1 .)


state 194

    (89) factor -> LPAREN paso6 exp RPAREN . paso7
    (139) paso7 -> .

    MULTI           reduce using rule 139 (paso7 -> .)
    DIVIDE          reduce using rule 139 (paso7 -> .)
    PLUS            reduce using rule 139 (paso7 -> .)
    MINUS           reduce using rule 139 (paso7 -> .)
    COMMA           reduce using rule 139 (paso7 -> .)
    RPAREN          reduce using rule 139 (paso7 -> .)
    GTHAN           reduce using rule 139 (paso7 -> .)
    LTHAN           reduce using rule 139 (paso7 -> .)
    NOTEQUAL        reduce using rule 139 (paso7 -> .)
    GETHAN          reduce using rule 139 (paso7 -> .)
    LETHAN          reduce using rule 139 (paso7 -> .)
    EQUAL           reduce using rule 139 (paso7 -> .)
    AND             reduce using rule 139 (paso7 -> .)
    OR              reduce using rule 139 (paso7 -> .)
    RBRACKET        reduce using rule 139 (paso7 -> .)
    SEMICOLON       reduce using rule 139 (paso7 -> .)

    paso7                          shift and go to state 218

state 195

    (98) varcte -> CTESTRING paso1 cteString . assignDirectionCteString
    (104) assignDirectionCteString -> .

    MULTI           reduce using rule 104 (assignDirectionCteString -> .)
    DIVIDE          reduce using rule 104 (assignDirectionCteString -> .)
    PLUS            reduce using rule 104 (assignDirectionCteString -> .)
    MINUS           reduce using rule 104 (assignDirectionCteString -> .)
    COMMA           reduce using rule 104 (assignDirectionCteString -> .)
    RPAREN          reduce using rule 104 (assignDirectionCteString -> .)
    GTHAN           reduce using rule 104 (assignDirectionCteString -> .)
    LTHAN           reduce using rule 104 (assignDirectionCteString -> .)
    NOTEQUAL        reduce using rule 104 (assignDirectionCteString -> .)
    GETHAN          reduce using rule 104 (assignDirectionCteString -> .)
    LETHAN          reduce using rule 104 (assignDirectionCteString -> .)
    EQUAL           reduce using rule 104 (assignDirectionCteString -> .)
    AND             reduce using rule 104 (assignDirectionCteString -> .)
    OR              reduce using rule 104 (assignDirectionCteString -> .)
    RBRACKET        reduce using rule 104 (assignDirectionCteString -> .)
    SEMICOLON       reduce using rule 104 (assignDirectionCteString -> .)

    assignDirectionCteString       shift and go to state 219

state 196

    (96) varcte -> CTECHAR paso1 cteChar . assignDirectionCteChar
    (102) assignDirectionCteChar -> .

    MULTI           reduce using rule 102 (assignDirectionCteChar -> .)
    DIVIDE          reduce using rule 102 (assignDirectionCteChar -> .)
    PLUS            reduce using rule 102 (assignDirectionCteChar -> .)
    MINUS           reduce using rule 102 (assignDirectionCteChar -> .)
    COMMA           reduce using rule 102 (assignDirectionCteChar -> .)
    RPAREN          reduce using rule 102 (assignDirectionCteChar -> .)
    GTHAN           reduce using rule 102 (assignDirectionCteChar -> .)
    LTHAN           reduce using rule 102 (assignDirectionCteChar -> .)
    NOTEQUAL        reduce using rule 102 (assignDirectionCteChar -> .)
    GETHAN          reduce using rule 102 (assignDirectionCteChar -> .)
    LETHAN          reduce using rule 102 (assignDirectionCteChar -> .)
    EQUAL           reduce using rule 102 (assignDirectionCteChar -> .)
    AND             reduce using rule 102 (assignDirectionCteChar -> .)
    OR              reduce using rule 102 (assignDirectionCteChar -> .)
    RBRACKET        reduce using rule 102 (assignDirectionCteChar -> .)
    SEMICOLON       reduce using rule 102 (assignDirectionCteChar -> .)

    assignDirectionCteChar         shift and go to state 220

state 197

    (95) varcte -> CTEFLOAT paso1 cteFloat . assignDirectionCteFloat
    (101) assignDirectionCteFloat -> .

    MULTI           reduce using rule 101 (assignDirectionCteFloat -> .)
    DIVIDE          reduce using rule 101 (assignDirectionCteFloat -> .)
    PLUS            reduce using rule 101 (assignDirectionCteFloat -> .)
    MINUS           reduce using rule 101 (assignDirectionCteFloat -> .)
    COMMA           reduce using rule 101 (assignDirectionCteFloat -> .)
    RPAREN          reduce using rule 101 (assignDirectionCteFloat -> .)
    GTHAN           reduce using rule 101 (assignDirectionCteFloat -> .)
    LTHAN           reduce using rule 101 (assignDirectionCteFloat -> .)
    NOTEQUAL        reduce using rule 101 (assignDirectionCteFloat -> .)
    GETHAN          reduce using rule 101 (assignDirectionCteFloat -> .)
    LETHAN          reduce using rule 101 (assignDirectionCteFloat -> .)
    EQUAL           reduce using rule 101 (assignDirectionCteFloat -> .)
    AND             reduce using rule 101 (assignDirectionCteFloat -> .)
    OR              reduce using rule 101 (assignDirectionCteFloat -> .)
    RBRACKET        reduce using rule 101 (assignDirectionCteFloat -> .)
    SEMICOLON       reduce using rule 101 (assignDirectionCteFloat -> .)

    assignDirectionCteFloat        shift and go to state 221

state 198

    (94) varcte -> CTEINT paso1 cteInt . assignDirectionCteInt
    (100) assignDirectionCteInt -> .

    MULTI           reduce using rule 100 (assignDirectionCteInt -> .)
    DIVIDE          reduce using rule 100 (assignDirectionCteInt -> .)
    PLUS            reduce using rule 100 (assignDirectionCteInt -> .)
    MINUS           reduce using rule 100 (assignDirectionCteInt -> .)
    COMMA           reduce using rule 100 (assignDirectionCteInt -> .)
    RPAREN          reduce using rule 100 (assignDirectionCteInt -> .)
    GTHAN           reduce using rule 100 (assignDirectionCteInt -> .)
    LTHAN           reduce using rule 100 (assignDirectionCteInt -> .)
    NOTEQUAL        reduce using rule 100 (assignDirectionCteInt -> .)
    GETHAN          reduce using rule 100 (assignDirectionCteInt -> .)
    LETHAN          reduce using rule 100 (assignDirectionCteInt -> .)
    EQUAL           reduce using rule 100 (assignDirectionCteInt -> .)
    AND             reduce using rule 100 (assignDirectionCteInt -> .)
    OR              reduce using rule 100 (assignDirectionCteInt -> .)
    RBRACKET        reduce using rule 100 (assignDirectionCteInt -> .)
    SEMICOLON       reduce using rule 100 (assignDirectionCteInt -> .)

    assignDirectionCteInt          shift and go to state 222

state 199

    (93) varcte -> ID paso1 addType . auxVarcte
    (106) auxVarcte -> . LPAREN exp RPAREN
    (107) auxVarcte -> . LBRACKET paso6b exp RBRACKET paso7b paso27
    (108) auxVarcte -> .

    LPAREN          shift and go to state 223
    LBRACKET        shift and go to state 224
    MULTI           reduce using rule 108 (auxVarcte -> .)
    DIVIDE          reduce using rule 108 (auxVarcte -> .)
    PLUS            reduce using rule 108 (auxVarcte -> .)
    MINUS           reduce using rule 108 (auxVarcte -> .)
    COMMA           reduce using rule 108 (auxVarcte -> .)
    RPAREN          reduce using rule 108 (auxVarcte -> .)
    GTHAN           reduce using rule 108 (auxVarcte -> .)
    LTHAN           reduce using rule 108 (auxVarcte -> .)
    NOTEQUAL        reduce using rule 108 (auxVarcte -> .)
    GETHAN          reduce using rule 108 (auxVarcte -> .)
    LETHAN          reduce using rule 108 (auxVarcte -> .)
    EQUAL           reduce using rule 108 (auxVarcte -> .)
    AND             reduce using rule 108 (auxVarcte -> .)
    OR              reduce using rule 108 (auxVarcte -> .)
    RBRACKET        reduce using rule 108 (auxVarcte -> .)
    SEMICOLON       reduce using rule 108 (auxVarcte -> .)

    auxVarcte                      shift and go to state 225

state 200

    (122) llamada -> CALL COLON ID . paso24 cteLlamada LPAREN auxLlamada RPAREN paso26
    (159) paso24 -> .

    LPAREN          reduce using rule 159 (paso24 -> .)

    paso24                         shift and go to state 226

state 201

    (97) varcte -> CTEBOOL paso1 cteBool . assignDirectionCteBool
    (103) assignDirectionCteBool -> .

    MULTI           reduce using rule 103 (assignDirectionCteBool -> .)
    DIVIDE          reduce using rule 103 (assignDirectionCteBool -> .)
    PLUS            reduce using rule 103 (assignDirectionCteBool -> .)
    MINUS           reduce using rule 103 (assignDirectionCteBool -> .)
    COMMA           reduce using rule 103 (assignDirectionCteBool -> .)
    RPAREN          reduce using rule 103 (assignDirectionCteBool -> .)
    GTHAN           reduce using rule 103 (assignDirectionCteBool -> .)
    LTHAN           reduce using rule 103 (assignDirectionCteBool -> .)
    NOTEQUAL        reduce using rule 103 (assignDirectionCteBool -> .)
    GETHAN          reduce using rule 103 (assignDirectionCteBool -> .)
    LETHAN          reduce using rule 103 (assignDirectionCteBool -> .)
    EQUAL           reduce using rule 103 (assignDirectionCteBool -> .)
    AND             reduce using rule 103 (assignDirectionCteBool -> .)
    OR              reduce using rule 103 (assignDirectionCteBool -> .)
    RBRACKET        reduce using rule 103 (assignDirectionCteBool -> .)
    SEMICOLON       reduce using rule 103 (assignDirectionCteBool -> .)

    assignDirectionCteBool         shift and go to state 227

state 202

    (121) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 . bloque paso17
    (32) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 39

    bloque                         shift and go to state 228

state 203

    (52) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig . exp paso11 SEMICOLON
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    cicloTermino                   shift and go to state 91
    termino                        shift and go to state 87
    exp                            shift and go to state 229
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93

state 204

    (53) auxAsignacion1 -> LBRACKET paso6b exp . RBRACKET paso7b paso27

    RBRACKET        shift and go to state 230


state 205

    (74) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque . auxCondicion paso14
    (75) auxCondicion -> . ELSE paso13 bloque
    (76) auxCondicion -> .

    ELSE            shift and go to state 232
    ID              reduce using rule 76 (auxCondicion -> .)
    IF              reduce using rule 76 (auxCondicion -> .)
    PRINT           reduce using rule 76 (auxCondicion -> .)
    WHILE           reduce using rule 76 (auxCondicion -> .)
    RBRACE          reduce using rule 76 (auxCondicion -> .)
    RETURN          reduce using rule 76 (auxCondicion -> .)

    auxCondicion                   shift and go to state 231

state 206

    (62) auxCicloExpresion -> AND paso8_and cicloExpresion . paso9 auxCicloExpresion
    (144) paso9 -> .

    AND             reduce using rule 144 (paso9 -> .)
    OR              reduce using rule 144 (paso9 -> .)
    RPAREN          reduce using rule 144 (paso9 -> .)

    paso9                          shift and go to state 233

state 207

    (63) auxCicloExpresion -> OR paso8_or cicloExpresion . paso9 auxCicloExpresion
    (144) paso9 -> .

    AND             reduce using rule 144 (paso9 -> .)
    OR              reduce using rule 144 (paso9 -> .)
    RPAREN          reduce using rule 144 (paso9 -> .)

    paso9                          shift and go to state 234

state 208

    (68) auxExpresion -> NOTEQUAL diferente exp .

    AND             reduce using rule 68 (auxExpresion -> NOTEQUAL diferente exp .)
    OR              reduce using rule 68 (auxExpresion -> NOTEQUAL diferente exp .)
    RPAREN          reduce using rule 68 (auxExpresion -> NOTEQUAL diferente exp .)
    SEMICOLON       reduce using rule 68 (auxExpresion -> NOTEQUAL diferente exp .)


state 209

    (66) auxExpresion -> GTHAN mayor exp .

    AND             reduce using rule 66 (auxExpresion -> GTHAN mayor exp .)
    OR              reduce using rule 66 (auxExpresion -> GTHAN mayor exp .)
    RPAREN          reduce using rule 66 (auxExpresion -> GTHAN mayor exp .)
    SEMICOLON       reduce using rule 66 (auxExpresion -> GTHAN mayor exp .)


state 210

    (71) auxExpresion -> EQUAL igual exp .

    AND             reduce using rule 71 (auxExpresion -> EQUAL igual exp .)
    OR              reduce using rule 71 (auxExpresion -> EQUAL igual exp .)
    RPAREN          reduce using rule 71 (auxExpresion -> EQUAL igual exp .)
    SEMICOLON       reduce using rule 71 (auxExpresion -> EQUAL igual exp .)


state 211

    (69) auxExpresion -> GETHAN mayorIg exp .

    AND             reduce using rule 69 (auxExpresion -> GETHAN mayorIg exp .)
    OR              reduce using rule 69 (auxExpresion -> GETHAN mayorIg exp .)
    RPAREN          reduce using rule 69 (auxExpresion -> GETHAN mayorIg exp .)
    SEMICOLON       reduce using rule 69 (auxExpresion -> GETHAN mayorIg exp .)


state 212

    (67) auxExpresion -> LTHAN menor exp .

    AND             reduce using rule 67 (auxExpresion -> LTHAN menor exp .)
    OR              reduce using rule 67 (auxExpresion -> LTHAN menor exp .)
    RPAREN          reduce using rule 67 (auxExpresion -> LTHAN menor exp .)
    SEMICOLON       reduce using rule 67 (auxExpresion -> LTHAN menor exp .)


state 213

    (70) auxExpresion -> LETHAN menorIg exp .

    AND             reduce using rule 70 (auxExpresion -> LETHAN menorIg exp .)
    OR              reduce using rule 70 (auxExpresion -> LETHAN menorIg exp .)
    RPAREN          reduce using rule 70 (auxExpresion -> LETHAN menorIg exp .)
    SEMICOLON       reduce using rule 70 (auxExpresion -> LETHAN menorIg exp .)


state 214

    (36) cicloBloqueFuncion -> estatuto cicloBloqueFuncion .

    RETURN          reduce using rule 36 (cicloBloqueFuncion -> estatuto cicloBloqueFuncion .)


state 215

    (35) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN . expresion SEMICOLON RBRACE
    (65) expresion -> . exp auxExpresion
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    expresion                      shift and go to state 235
    auxExp                         shift and go to state 89
    termino                        shift and go to state 87
    exp                            shift and go to state 104
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 216

    (42) auxVar1Funcion -> idVarsFuncion COLON . tipo addTypeFuncion SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 20
    BOOL            shift and go to state 21
    STRING          shift and go to state 17
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 19

    tipo                           shift and go to state 236

state 217

    (44) idVarsFuncion -> ID addVariableDirFuncion . ambIdVarsFuncion
    (46) ambIdVarsFuncion -> . COMMA idVarsFuncion
    (47) ambIdVarsFuncion -> .

    COMMA           shift and go to state 238
    COLON           reduce using rule 47 (ambIdVarsFuncion -> .)

    ambIdVarsFuncion               shift and go to state 237

state 218

    (89) factor -> LPAREN paso6 exp RPAREN paso7 .

    MULTI           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    DIVIDE          reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    PLUS            reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    MINUS           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    COMMA           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RPAREN          reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    GTHAN           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LTHAN           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    NOTEQUAL        reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    GETHAN          reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LETHAN          reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    EQUAL           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    AND             reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    OR              reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RBRACKET        reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    SEMICOLON       reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)


state 219

    (98) varcte -> CTESTRING paso1 cteString assignDirectionCteString .

    MULTI           reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    DIVIDE          reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    PLUS            reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    MINUS           reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    COMMA           reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    RPAREN          reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    GTHAN           reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    LTHAN           reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    NOTEQUAL        reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    GETHAN          reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    LETHAN          reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    EQUAL           reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    AND             reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    OR              reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    RBRACKET        reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)
    SEMICOLON       reduce using rule 98 (varcte -> CTESTRING paso1 cteString assignDirectionCteString .)


state 220

    (96) varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .

    MULTI           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    DIVIDE          reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    PLUS            reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    MINUS           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    COMMA           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    RPAREN          reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    GTHAN           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    LTHAN           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    NOTEQUAL        reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    GETHAN          reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    LETHAN          reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    EQUAL           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    AND             reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    OR              reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    RBRACKET        reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)
    SEMICOLON       reduce using rule 96 (varcte -> CTECHAR paso1 cteChar assignDirectionCteChar .)


state 221

    (95) varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .

    MULTI           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    DIVIDE          reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    PLUS            reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    MINUS           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    COMMA           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    RPAREN          reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    GTHAN           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    LTHAN           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    NOTEQUAL        reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    GETHAN          reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    LETHAN          reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    EQUAL           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    AND             reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    OR              reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    RBRACKET        reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)
    SEMICOLON       reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat .)


state 222

    (94) varcte -> CTEINT paso1 cteInt assignDirectionCteInt .

    MULTI           reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    DIVIDE          reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    PLUS            reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    MINUS           reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    COMMA           reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    RPAREN          reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    GTHAN           reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    LTHAN           reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    NOTEQUAL        reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    GETHAN          reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    LETHAN          reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    EQUAL           reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    AND             reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    OR              reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    RBRACKET        reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)
    SEMICOLON       reduce using rule 94 (varcte -> CTEINT paso1 cteInt assignDirectionCteInt .)


state 223

    (106) auxVarcte -> LPAREN . exp RPAREN
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    termino                        shift and go to state 87
    exp                            shift and go to state 239
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 224

    (107) auxVarcte -> LBRACKET . paso6b exp RBRACKET paso7b paso27
    (140) paso6b -> .

    LPAREN          reduce using rule 140 (paso6b -> .)
    PLUS            reduce using rule 140 (paso6b -> .)
    MINUS           reduce using rule 140 (paso6b -> .)
    ID              reduce using rule 140 (paso6b -> .)
    CTEINT          reduce using rule 140 (paso6b -> .)
    CTEFLOAT        reduce using rule 140 (paso6b -> .)
    CTECHAR         reduce using rule 140 (paso6b -> .)
    CTEBOOL         reduce using rule 140 (paso6b -> .)
    CTESTRING       reduce using rule 140 (paso6b -> .)
    CALL            reduce using rule 140 (paso6b -> .)

    paso6b                         shift and go to state 240

state 225

    (93) varcte -> ID paso1 addType auxVarcte .

    MULTI           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    DIVIDE          reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    PLUS            reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    MINUS           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    COMMA           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    RPAREN          reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    GTHAN           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    LTHAN           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    NOTEQUAL        reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    GETHAN          reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    LETHAN          reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    EQUAL           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    AND             reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    OR              reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    RBRACKET        reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    SEMICOLON       reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)


state 226

    (122) llamada -> CALL COLON ID paso24 . cteLlamada LPAREN auxLlamada RPAREN paso26
    (169) cteLlamada -> .

    LPAREN          reduce using rule 169 (cteLlamada -> .)

    cteLlamada                     shift and go to state 241

state 227

    (97) varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .

    MULTI           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    DIVIDE          reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    PLUS            reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    MINUS           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    COMMA           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    RPAREN          reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    GTHAN           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    LTHAN           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    NOTEQUAL        reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    GETHAN          reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    LETHAN          reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    EQUAL           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    AND             reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    OR              reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    RBRACKET        reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)
    SEMICOLON       reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool .)


state 228

    (121) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque . paso17
    (152) paso17 -> .

    ID              reduce using rule 152 (paso17 -> .)
    IF              reduce using rule 152 (paso17 -> .)
    PRINT           reduce using rule 152 (paso17 -> .)
    WHILE           reduce using rule 152 (paso17 -> .)
    RBRACE          reduce using rule 152 (paso17 -> .)
    RETURN          reduce using rule 152 (paso17 -> .)

    paso17                         shift and go to state 242

state 229

    (52) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp . paso11 SEMICOLON
    (146) paso11 -> .

    SEMICOLON       reduce using rule 146 (paso11 -> .)

    paso11                         shift and go to state 243

state 230

    (53) auxAsignacion1 -> LBRACKET paso6b exp RBRACKET . paso7b paso27
    (141) paso7b -> .

    EQUALA          reduce using rule 141 (paso7b -> .)

    paso7b                         shift and go to state 244

state 231

    (74) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion . paso14
    (149) paso14 -> .

    ID              reduce using rule 149 (paso14 -> .)
    IF              reduce using rule 149 (paso14 -> .)
    PRINT           reduce using rule 149 (paso14 -> .)
    WHILE           reduce using rule 149 (paso14 -> .)
    RBRACE          reduce using rule 149 (paso14 -> .)
    RETURN          reduce using rule 149 (paso14 -> .)

    paso14                         shift and go to state 245

state 232

    (75) auxCondicion -> ELSE . paso13 bloque
    (148) paso13 -> .

    LBRACE          reduce using rule 148 (paso13 -> .)

    paso13                         shift and go to state 246

state 233

    (62) auxCicloExpresion -> AND paso8_and cicloExpresion paso9 . auxCicloExpresion
    (62) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (63) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (64) auxCicloExpresion -> .

    AND             shift and go to state 135
    OR              shift and go to state 137
    RPAREN          reduce using rule 64 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 247

state 234

    (63) auxCicloExpresion -> OR paso8_or cicloExpresion paso9 . auxCicloExpresion
    (62) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (63) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (64) auxCicloExpresion -> .

    AND             shift and go to state 135
    OR              shift and go to state 137
    RPAREN          reduce using rule 64 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 248

state 235

    (35) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 249


state 236

    (42) auxVar1Funcion -> idVarsFuncion COLON tipo . addTypeFuncion SEMICOLON
    (43) addTypeFuncion -> .

    SEMICOLON       reduce using rule 43 (addTypeFuncion -> .)

    addTypeFuncion                 shift and go to state 250

state 237

    (44) idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .

    COLON           reduce using rule 44 (idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .)


state 238

    (46) ambIdVarsFuncion -> COMMA . idVarsFuncion
    (44) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 186

    idVarsFuncion                  shift and go to state 251

state 239

    (106) auxVarcte -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 252


state 240

    (107) auxVarcte -> LBRACKET paso6b . exp RBRACKET paso7b paso27
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    termino                        shift and go to state 87
    exp                            shift and go to state 253
    factor                         shift and go to state 92
    auxExp                         shift and go to state 89
    auxFactor                      shift and go to state 97
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 241

    (122) llamada -> CALL COLON ID paso24 cteLlamada . LPAREN auxLlamada RPAREN paso26

    LPAREN          shift and go to state 254


state 242

    (121) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .

    ID              reduce using rule 121 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    IF              reduce using rule 121 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    PRINT           reduce using rule 121 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    WHILE           reduce using rule 121 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    RETURN          reduce using rule 121 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    RBRACE          reduce using rule 121 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)


state 243

    (52) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 . SEMICOLON

    SEMICOLON       shift and go to state 255


state 244

    (53) auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b . paso27
    (162) paso27 -> .

    EQUALA          reduce using rule 162 (paso27 -> .)

    paso27                         shift and go to state 256

state 245

    (74) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .

    ID              reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    IF              reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    PRINT           reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    WHILE           reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    RBRACE          reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    RETURN          reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)


state 246

    (75) auxCondicion -> ELSE paso13 . bloque
    (32) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 39

    bloque                         shift and go to state 257

state 247

    (62) auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion .

    RPAREN          reduce using rule 62 (auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion .)


state 248

    (63) auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion .

    RPAREN          reduce using rule 63 (auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion .)


state 249

    (35) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON . RBRACE

    RBRACE          shift and go to state 258


state 250

    (42) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion . SEMICOLON

    SEMICOLON       shift and go to state 259


state 251

    (46) ambIdVarsFuncion -> COMMA idVarsFuncion .

    COLON           reduce using rule 46 (ambIdVarsFuncion -> COMMA idVarsFuncion .)


state 252

    (106) auxVarcte -> LPAREN exp RPAREN .

    MULTI           reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    GTHAN           reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    LTHAN           reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    GETHAN          reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    LETHAN          reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    AND             reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    OR              reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 106 (auxVarcte -> LPAREN exp RPAREN .)


state 253

    (107) auxVarcte -> LBRACKET paso6b exp . RBRACKET paso7b paso27

    RBRACKET        shift and go to state 260


state 254

    (122) llamada -> CALL COLON ID paso24 cteLlamada LPAREN . auxLlamada RPAREN paso26
    (123) auxLlamada -> . argumentos
    (124) auxLlamada -> .
    (125) argumentos -> . auxArgumentos1
    (126) argumentos -> .
    (127) auxArgumentos1 -> . exp paso25 ambAuxArgumentos1
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

  ! reduce/reduce conflict for RPAREN resolved using rule 124 (auxLlamada -> .)
    RPAREN          reduce using rule 124 (auxLlamada -> .)
    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

  ! RPAREN          [ reduce using rule 126 (argumentos -> .) ]

    termino                        shift and go to state 87
    argumentos                     shift and go to state 261
    auxLlamada                     shift and go to state 262
    auxExp                         shift and go to state 89
    cicloTermino                   shift and go to state 91
    factor                         shift and go to state 92
    auxArgumentos1                 shift and go to state 263
    cicloExp                       shift and go to state 93
    auxFactor                      shift and go to state 97
    exp                            shift and go to state 264

state 255

    (52) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .

    ID              reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    IF              reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    PRINT           reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    WHILE           reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    RETURN          reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    RBRACE          reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)


state 256

    (53) auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b paso27 .

    EQUALA          reduce using rule 53 (auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)


state 257

    (75) auxCondicion -> ELSE paso13 bloque .

    ID              reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    IF              reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    PRINT           reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    WHILE           reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    RBRACE          reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    RETURN          reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)


state 258

    (35) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .

    FUNCTION        reduce using rule 35 (bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .)
    MAIN            reduce using rule 35 (bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .)


state 259

    (42) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .

    VAR             reduce using rule 42 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)
    ID              reduce using rule 42 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)
    IF              reduce using rule 42 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)
    PRINT           reduce using rule 42 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)
    WHILE           reduce using rule 42 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)
    RETURN          reduce using rule 42 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON .)


state 260

    (107) auxVarcte -> LBRACKET paso6b exp RBRACKET . paso7b paso27
    (141) paso7b -> .

    MULTI           reduce using rule 141 (paso7b -> .)
    DIVIDE          reduce using rule 141 (paso7b -> .)
    PLUS            reduce using rule 141 (paso7b -> .)
    MINUS           reduce using rule 141 (paso7b -> .)
    COMMA           reduce using rule 141 (paso7b -> .)
    RPAREN          reduce using rule 141 (paso7b -> .)
    GTHAN           reduce using rule 141 (paso7b -> .)
    LTHAN           reduce using rule 141 (paso7b -> .)
    NOTEQUAL        reduce using rule 141 (paso7b -> .)
    GETHAN          reduce using rule 141 (paso7b -> .)
    LETHAN          reduce using rule 141 (paso7b -> .)
    EQUAL           reduce using rule 141 (paso7b -> .)
    AND             reduce using rule 141 (paso7b -> .)
    OR              reduce using rule 141 (paso7b -> .)
    RBRACKET        reduce using rule 141 (paso7b -> .)
    SEMICOLON       reduce using rule 141 (paso7b -> .)

    paso7b                         shift and go to state 265

state 261

    (123) auxLlamada -> argumentos .

    RPAREN          reduce using rule 123 (auxLlamada -> argumentos .)


state 262

    (122) llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada . RPAREN paso26

    RPAREN          shift and go to state 266


state 263

    (125) argumentos -> auxArgumentos1 .

    RPAREN          reduce using rule 125 (argumentos -> auxArgumentos1 .)


state 264

    (127) auxArgumentos1 -> exp . paso25 ambAuxArgumentos1
    (160) paso25 -> .

    COMMA           reduce using rule 160 (paso25 -> .)
    RPAREN          reduce using rule 160 (paso25 -> .)

    paso25                         shift and go to state 267

state 265

    (107) auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b . paso27
    (162) paso27 -> .

    MULTI           reduce using rule 162 (paso27 -> .)
    DIVIDE          reduce using rule 162 (paso27 -> .)
    PLUS            reduce using rule 162 (paso27 -> .)
    MINUS           reduce using rule 162 (paso27 -> .)
    COMMA           reduce using rule 162 (paso27 -> .)
    RPAREN          reduce using rule 162 (paso27 -> .)
    GTHAN           reduce using rule 162 (paso27 -> .)
    LTHAN           reduce using rule 162 (paso27 -> .)
    NOTEQUAL        reduce using rule 162 (paso27 -> .)
    GETHAN          reduce using rule 162 (paso27 -> .)
    LETHAN          reduce using rule 162 (paso27 -> .)
    EQUAL           reduce using rule 162 (paso27 -> .)
    AND             reduce using rule 162 (paso27 -> .)
    OR              reduce using rule 162 (paso27 -> .)
    RBRACKET        reduce using rule 162 (paso27 -> .)
    SEMICOLON       reduce using rule 162 (paso27 -> .)

    paso27                         shift and go to state 268

state 266

    (122) llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN . paso26
    (161) paso26 -> .

    MULTI           reduce using rule 161 (paso26 -> .)
    DIVIDE          reduce using rule 161 (paso26 -> .)
    PLUS            reduce using rule 161 (paso26 -> .)
    MINUS           reduce using rule 161 (paso26 -> .)
    COMMA           reduce using rule 161 (paso26 -> .)
    RPAREN          reduce using rule 161 (paso26 -> .)
    GTHAN           reduce using rule 161 (paso26 -> .)
    LTHAN           reduce using rule 161 (paso26 -> .)
    NOTEQUAL        reduce using rule 161 (paso26 -> .)
    GETHAN          reduce using rule 161 (paso26 -> .)
    LETHAN          reduce using rule 161 (paso26 -> .)
    EQUAL           reduce using rule 161 (paso26 -> .)
    AND             reduce using rule 161 (paso26 -> .)
    OR              reduce using rule 161 (paso26 -> .)
    RBRACKET        reduce using rule 161 (paso26 -> .)
    SEMICOLON       reduce using rule 161 (paso26 -> .)

    paso26                         shift and go to state 269

state 267

    (127) auxArgumentos1 -> exp paso25 . ambAuxArgumentos1
    (128) ambAuxArgumentos1 -> . COMMA auxArgumentos1
    (129) ambAuxArgumentos1 -> .

    COMMA           shift and go to state 271
    RPAREN          reduce using rule 129 (ambAuxArgumentos1 -> .)

    ambAuxArgumentos1              shift and go to state 270

state 268

    (107) auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .

    MULTI           reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    DIVIDE          reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    PLUS            reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    MINUS           reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    COMMA           reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    RPAREN          reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    GTHAN           reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    LTHAN           reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    NOTEQUAL        reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    GETHAN          reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    LETHAN          reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    EQUAL           reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    AND             reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    OR              reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    RBRACKET        reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)
    SEMICOLON       reduce using rule 107 (auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27 .)


state 269

    (122) llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .

    MULTI           reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    DIVIDE          reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    PLUS            reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    MINUS           reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    COMMA           reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    RPAREN          reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    GTHAN           reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    LTHAN           reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    NOTEQUAL        reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    GETHAN          reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    LETHAN          reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    EQUAL           reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    AND             reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    OR              reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    RBRACKET        reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)
    SEMICOLON       reduce using rule 122 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26 .)


state 270

    (127) auxArgumentos1 -> exp paso25 ambAuxArgumentos1 .

    RPAREN          reduce using rule 127 (auxArgumentos1 -> exp paso25 ambAuxArgumentos1 .)


state 271

    (128) ambAuxArgumentos1 -> COMMA . auxArgumentos1
    (127) auxArgumentos1 -> . exp paso25 ambAuxArgumentos1
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 96
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    CALL            reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 89
    termino                        shift and go to state 87
    exp                            shift and go to state 264
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 97
    auxArgumentos1                 shift and go to state 272
    cicloExp                       shift and go to state 93
    cicloTermino                   shift and go to state 91

state 272

    (128) ambAuxArgumentos1 -> COMMA auxArgumentos1 .

    RPAREN          reduce using rule 128 (ambAuxArgumentos1 -> COMMA auxArgumentos1 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CTESTRING in state 75 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 160 resolved as shift
WARNING: reduce/reduce conflict in state 254 resolved using rule (auxLlamada -> <empty>)
WARNING: rejected rule (argumentos -> <empty>) in state 254
WARNING: Rule (argumentos -> <empty>) is never reduced
