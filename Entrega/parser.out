Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque
Rule 2     addProcedureDir -> <empty>
Rule 3     cicloVars -> vars cicloVars
Rule 4     cicloVars -> <empty>
Rule 5     vars -> createVariableDir VAR auxVar1
Rule 6     createVariableDir -> <empty>
Rule 7     auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON
Rule 8     addTypeGlobal -> <empty>
Rule 9     idVars -> ID addVariableDir ambIdVars
Rule 10    addVariableDir -> <empty>
Rule 11    ambIdVars -> COMMA idVars
Rule 12    ambIdVars -> <empty>
Rule 13    tipo -> INT ambAuxTipo1
Rule 14    tipo -> BOOL ambAuxTipo1
Rule 15    tipo -> STRING ambAuxTipo1
Rule 16    tipo -> FLOAT ambAuxTipo1
Rule 17    tipo -> CHAR ambAuxTipo1
Rule 18    ambAuxTipo1 -> LBRACKET CTEINT RBRACKET
Rule 19    ambAuxTipo1 -> <empty>
Rule 20    cicloVarsMain -> varsMain cicloVarsMain
Rule 21    cicloVarsMain -> <empty>
Rule 22    varsMain -> createVariableDirMain VAR auxVar1Main
Rule 23    createVariableDirMain -> <empty>
Rule 24    auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON
Rule 25    addTypeGlobalMain -> <empty>
Rule 26    idVarsMain -> ID addVariableDirMain ambIdVarsMain
Rule 27    addVariableDirMain -> <empty>
Rule 28    ambIdVarsMain -> COMMA idVarsMain
Rule 29    ambIdVarsMain -> <empty>
Rule 30    bloque -> LBRACE cicloVarsMain cicloBloque RBRACE
Rule 31    cicloBloque -> estatuto cicloBloque
Rule 32    cicloBloque -> <empty>
Rule 33    bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
Rule 34    cicloBloqueFuncion -> estatuto cicloBloqueFuncion
Rule 35    cicloBloqueFuncion -> <empty>
Rule 36    cicloVarsFuncion -> varsFuncion cicloVarsFuncion
Rule 37    cicloVarsFuncion -> <empty>
Rule 38    varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion
Rule 39    createVariableDirFuncion -> <empty>
Rule 40    auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON
Rule 41    addTypeGlobalFuncion -> <empty>
Rule 42    idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion
Rule 43    addVariableDirFuncion -> <empty>
Rule 44    ambIdVarsFuncion -> COMMA idVarsFuncion
Rule 45    ambIdVarsFuncion -> <empty>
Rule 46    estatuto -> asignacion
Rule 47    estatuto -> condicion
Rule 48    estatuto -> escritura
Rule 49    estatuto -> ciclo
Rule 50    asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
Rule 51    auxAsignacion1 -> LBRACKET exp RBRACKET
Rule 52    auxAsignacion1 -> <empty>
Rule 53    escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
Rule 54    auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1
Rule 55    ambAuxEscritura1 -> COMMA auxEscritura1
Rule 56    ambAuxEscritura1 -> <empty>
Rule 57    auxEscritura2 -> exp
Rule 58    auxEscritura2 -> CTESTRING paso1
Rule 59    cicloExpresion -> expresion paso10
Rule 60    auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion
Rule 61    auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion
Rule 62    auxCicloExpresion -> <empty>
Rule 63    expresion -> exp auxExpresion
Rule 64    auxExpresion -> GTHAN mayor exp
Rule 65    auxExpresion -> LTHAN menor exp
Rule 66    auxExpresion -> NOTEQUAL diferente exp
Rule 67    auxExpresion -> GETHAN mayorIg exp
Rule 68    auxExpresion -> LETHAN menorIg exp
Rule 69    auxExpresion -> EQUAL igual exp
Rule 70    auxExpresion -> <empty>
Rule 71    expAndOr -> cicloExpresion auxCicloExpresion
Rule 72    condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
Rule 73    auxCondicion -> ELSE paso13 bloque
Rule 74    auxCondicion -> <empty>
Rule 75    exp -> cicloExp
Rule 76    cicloExp -> termino paso4 ambExp
Rule 77    ambExp -> auxExp cicloExp
Rule 78    ambExp -> <empty>
Rule 79    auxExp -> PLUS paso3_suma
Rule 80    auxExp -> MINUS paso3_resta
Rule 81    termino -> cicloTermino
Rule 82    cicloTermino -> factor paso5 ambCicloTermino
Rule 83    ambCicloTermino -> auxTermino cicloTermino
Rule 84    ambCicloTermino -> <empty>
Rule 85    auxTermino -> MULTI paso2_mult
Rule 86    auxTermino -> DIVIDE paso2_div
Rule 87    factor -> LPAREN paso6 exp RPAREN paso7
Rule 88    factor -> auxFactor varcte
Rule 89    auxFactor -> auxExp
Rule 90    auxFactor -> <empty>
Rule 91    varcte -> ID paso1 addType auxVarcte
Rule 92    varcte -> CTEINT paso1 cteInt
Rule 93    varcte -> CTEFLOAT paso1 cteFloat
Rule 94    varcte -> CTECHAR paso1 cteChar
Rule 95    varcte -> CTEBOOL paso1 cteBool
Rule 96    varcte -> CTESTRING paso1 cteString
Rule 97    varcte -> llamada
Rule 98    addType -> <empty>
Rule 99    auxVarcte -> LPAREN exp RPAREN
Rule 100   auxVarcte -> LBRACKET exp LBRACKET
Rule 101   auxVarcte -> <empty>
Rule 102   cicloFuncion -> funcion cicloFuncion
Rule 103   cicloFuncion -> <empty>
Rule 104   funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23
Rule 105   addProcDirectoryFunc -> <empty>
Rule 106   initDicFunc -> <empty>
Rule 107   auxFunction -> parametros
Rule 108   auxFunction -> <empty>
Rule 109   parametros -> auxParametros
Rule 110   auxParametros -> tipo ID addParameters ambAuxParametros
Rule 111   addParameters -> <empty>
Rule 112   ambAuxParametros -> COMMA auxParametros
Rule 113   ambAuxParametros -> <empty>
Rule 114   ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17
Rule 115   llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN
Rule 116   auxLlamada -> argumentos
Rule 117   auxLlamada -> <empty>
Rule 118   argumentos -> auxArgumentos1
Rule 119   argumentos -> <empty>
Rule 120   auxArgumentos1 -> exp
Rule 121   ambAuxArgumentos1 -> COMMA auxArgumentos1
Rule 122   ambAuxArgumentos1 -> <empty>
Rule 123   lectura -> READ LPAREN ID RPAREN SEMICOLON
Rule 124   paso1 -> <empty>
Rule 125   paso2_mult -> <empty>
Rule 126   paso2_div -> <empty>
Rule 127   paso3_suma -> <empty>
Rule 128   paso3_resta -> <empty>
Rule 129   paso4 -> <empty>
Rule 130   paso5 -> <empty>
Rule 131   paso6 -> <empty>
Rule 132   paso7 -> <empty>
Rule 133   paso8_and -> <empty>
Rule 134   paso8_or -> <empty>
Rule 135   paso9 -> <empty>
Rule 136   paso10 -> <empty>
Rule 137   paso11 -> <empty>
Rule 138   paso12 -> <empty>
Rule 139   paso13 -> <empty>
Rule 140   paso14 -> <empty>
Rule 141   paso15 -> <empty>
Rule 142   paso16 -> <empty>
Rule 143   paso17 -> <empty>
Rule 144   paso18 -> <empty>
Rule 145   paso19 -> <empty>
Rule 146   paso20 -> <empty>
Rule 147   paso21 -> <empty>
Rule 148   paso22 -> <empty>
Rule 149   paso23 -> <empty>
Rule 150   paso24 -> <empty>
Rule 151   paso25 -> <empty>
Rule 152   cteInt -> <empty>
Rule 153   cteFloat -> <empty>
Rule 154   cteChar -> <empty>
Rule 155   cteBool -> <empty>
Rule 156   cteString -> <empty>
Rule 157   cteLlamada -> <empty>
Rule 158   mayor -> <empty>
Rule 159   menor -> <empty>
Rule 160   mayorIg -> <empty>
Rule 161   menorIg -> <empty>
Rule 162   igual -> <empty>
Rule 163   diferente -> <empty>
Rule 164   asig -> <empty>

Terminals, with rules where they appear

AND                  : 60
BOOL                 : 14
CALL                 : 115
CHAR                 : 17
COLON                : 7 24 40 115
COMMA                : 11 28 44 55 112 121
CTEBOOL              : 95
CTECHAR              : 94
CTEFLOAT             : 93
CTEINT               : 18 92
CTESTRING            : 58 96
DIVIDE               : 86
ELSE                 : 73
EQUAL                : 69
EQUALA               : 50
FLOAT                : 16
FUNCTION             : 104
GETHAN               : 67
GTHAN                : 64
ID                   : 1 9 26 42 50 91 104 110 115 123
IF                   : 72
INT                  : 13
LBRACE               : 30 33
LBRACKET             : 18 51 100 100
LETHAN               : 68
LPAREN               : 53 72 87 99 104 114 115 123
LTHAN                : 65
MAIN                 : 1
MINUS                : 80
MULTI                : 85
NOTEQUAL             : 66
OR                   : 61
PLUS                 : 79
PRINT                : 53
PROGRAM              : 1
RBRACE               : 30 33
RBRACKET             : 18 51
READ                 : 123
RETURN               : 33
RPAREN               : 53 72 87 99 104 114 115 123
SEMICOLON            : 1 7 24 33 40 50 53 123
STRING               : 15
VAR                  : 5 22 38
WHILE                : 114
error                : 

Nonterminals, with rules where they appear

addParameters        : 110
addProcDirectoryFunc : 104
addProcedureDir      : 1
addType              : 50 91
addTypeGlobal        : 7
addTypeGlobalFuncion : 40
addTypeGlobalMain    : 24
addVariableDir       : 9
addVariableDirFuncion : 42
addVariableDirMain   : 26
ambAuxArgumentos1    : 
ambAuxEscritura1     : 54
ambAuxParametros     : 110
ambAuxTipo1          : 13 14 15 16 17
ambCicloTermino      : 82
ambExp               : 76
ambIdVars            : 9
ambIdVarsFuncion     : 42
ambIdVarsMain        : 26
argumentos           : 116
asig                 : 50
asignacion           : 46
auxArgumentos1       : 118 121
auxAsignacion1       : 50
auxCicloExpresion    : 60 61 71
auxCondicion         : 72
auxEscritura1        : 53 55
auxEscritura2        : 54
auxExp               : 77 89
auxExpresion         : 63
auxFactor            : 88
auxFunction          : 104
auxLlamada           : 
auxParametros        : 109 112
auxTermino           : 83
auxVar1              : 5
auxVar1Funcion       : 38
auxVar1Main          : 22
auxVarcte            : 91
bloque               : 1 72 73 114
bloqueFuncion        : 104
ciclo                : 49
cicloBloque          : 30 31
cicloBloqueFuncion   : 33 34
cicloExp             : 75 77
cicloExpresion       : 60 61 71
cicloFuncion         : 1 102
cicloTermino         : 81 83
cicloVars            : 1 3
cicloVarsFuncion     : 33 36
cicloVarsMain        : 20 30
condicion            : 47
createVariableDir    : 5
createVariableDirFuncion : 38
createVariableDirMain : 22
cteBool              : 95
cteChar              : 94
cteFloat             : 93
cteInt               : 92
cteLlamada           : 115
cteString            : 96
diferente            : 66
escritura            : 48
estatuto             : 31 34
exp                  : 50 51 57 63 64 65 66 67 68 69 87 99 100 120
expAndOr             : 72 114
expresion            : 33 59
factor               : 82
funcion              : 102
idVars               : 7 11
idVarsFuncion        : 40 44
idVarsMain           : 24 28
igual                : 69
initDicFunc          : 104
lectura              : 
llamada              : 97
mayor                : 64
mayorIg              : 67
menor                : 65
menorIg              : 68
parametros           : 107
paso1                : 50 58 91 92 93 94 95 96
paso10               : 59
paso11               : 50
paso12               : 72
paso13               : 73
paso14               : 72
paso15               : 114
paso16               : 114
paso17               : 114
paso18               : 54
paso19               : 1
paso20               : 1
paso21               : 33
paso22               : 104
paso23               : 104
paso24               : 115
paso25               : 
paso2_div            : 86
paso2_mult           : 85
paso3_resta          : 80
paso3_suma           : 79
paso4                : 76
paso5                : 82
paso6                : 87
paso7                : 87
paso8_and            : 60
paso8_or             : 61
paso9                : 60 61
programa             : 0
termino              : 76
tipo                 : 7 24 40 104 110
varcte               : 88
vars                 : 3
varsFuncion          : 36
varsMain             : 20

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque
    (2) addProcedureDir -> .

    SEMICOLON       reduce using rule 2 (addProcedureDir -> .)

    addProcedureDir                shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProcedureDir . SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON . paso19 cicloVars cicloFuncion MAIN paso20 bloque
    (145) paso19 -> .

    FUNCTION        reduce using rule 145 (paso19 -> .)
    MAIN            reduce using rule 145 (paso19 -> .)
    VAR             reduce using rule 145 (paso19 -> .)

    paso19                         shift and go to state 6

state 6

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 . cicloVars cicloFuncion MAIN paso20 bloque
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    cicloVars                      shift and go to state 7
    vars                           shift and go to state 8
    createVariableDir              shift and go to state 9

state 7

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars . cicloFuncion MAIN paso20 bloque
    (102) cicloFuncion -> . funcion cicloFuncion
    (103) cicloFuncion -> .
    (104) funcion -> . FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23

    MAIN            reduce using rule 103 (cicloFuncion -> .)
    FUNCTION        shift and go to state 10

    cicloFuncion                   shift and go to state 11
    funcion                        shift and go to state 12

state 8

    (3) cicloVars -> vars . cicloVars
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    createVariableDir              shift and go to state 9
    cicloVars                      shift and go to state 13
    vars                           shift and go to state 8

state 9

    (5) vars -> createVariableDir . VAR auxVar1

    VAR             shift and go to state 14


state 10

    (104) funcion -> FUNCTION . tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 16
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 18

    tipo                           shift and go to state 17

state 11

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion . MAIN paso20 bloque

    MAIN            shift and go to state 21


state 12

    (102) cicloFuncion -> funcion . cicloFuncion
    (102) cicloFuncion -> . funcion cicloFuncion
    (103) cicloFuncion -> .
    (104) funcion -> . FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23

    MAIN            reduce using rule 103 (cicloFuncion -> .)
    FUNCTION        shift and go to state 10

    cicloFuncion                   shift and go to state 22
    funcion                        shift and go to state 12

state 13

    (3) cicloVars -> vars cicloVars .

    FUNCTION        reduce using rule 3 (cicloVars -> vars cicloVars .)
    MAIN            reduce using rule 3 (cicloVars -> vars cicloVars .)


state 14

    (5) vars -> createVariableDir VAR . auxVar1
    (7) auxVar1 -> . idVars COLON tipo addTypeGlobal SEMICOLON
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 25

    idVars                         shift and go to state 23
    auxVar1                        shift and go to state 24

state 15

    (16) tipo -> FLOAT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 26
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 27

state 16

    (15) tipo -> STRING . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 26
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 28

state 17

    (104) funcion -> FUNCTION tipo . ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23

    ID              shift and go to state 29


state 18

    (17) tipo -> CHAR . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 26
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 30

state 19

    (13) tipo -> INT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 26
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 31

state 20

    (14) tipo -> BOOL . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 26
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 32

state 21

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN . paso20 bloque
    (146) paso20 -> .

    LBRACE          reduce using rule 146 (paso20 -> .)

    paso20                         shift and go to state 33

state 22

    (102) cicloFuncion -> funcion cicloFuncion .

    MAIN            reduce using rule 102 (cicloFuncion -> funcion cicloFuncion .)


state 23

    (7) auxVar1 -> idVars . COLON tipo addTypeGlobal SEMICOLON

    COLON           shift and go to state 34


state 24

    (5) vars -> createVariableDir VAR auxVar1 .

    VAR             reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    FUNCTION        reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    MAIN            reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)


state 25

    (9) idVars -> ID . addVariableDir ambIdVars
    (10) addVariableDir -> .

    COMMA           reduce using rule 10 (addVariableDir -> .)
    COLON           reduce using rule 10 (addVariableDir -> .)

    addVariableDir                 shift and go to state 35

state 26

    (18) ambAuxTipo1 -> LBRACKET . CTEINT RBRACKET

    CTEINT          shift and go to state 36


state 27

    (16) tipo -> FLOAT ambAuxTipo1 .

    SEMICOLON       reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)
    ID              reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)


state 28

    (15) tipo -> STRING ambAuxTipo1 .

    SEMICOLON       reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)
    ID              reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)


state 29

    (104) funcion -> FUNCTION tipo ID . LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23

    LPAREN          shift and go to state 37


state 30

    (17) tipo -> CHAR ambAuxTipo1 .

    SEMICOLON       reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)
    ID              reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)


state 31

    (13) tipo -> INT ambAuxTipo1 .

    SEMICOLON       reduce using rule 13 (tipo -> INT ambAuxTipo1 .)
    ID              reduce using rule 13 (tipo -> INT ambAuxTipo1 .)


state 32

    (14) tipo -> BOOL ambAuxTipo1 .

    SEMICOLON       reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)
    ID              reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)


state 33

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 . bloque
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 38

    bloque                         shift and go to state 39

state 34

    (7) auxVar1 -> idVars COLON . tipo addTypeGlobal SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 16
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 18

    tipo                           shift and go to state 40

state 35

    (9) idVars -> ID addVariableDir . ambIdVars
    (11) ambIdVars -> . COMMA idVars
    (12) ambIdVars -> .

    COMMA           shift and go to state 42
    COLON           reduce using rule 12 (ambIdVars -> .)

    ambIdVars                      shift and go to state 41

state 36

    (18) ambAuxTipo1 -> LBRACKET CTEINT . RBRACKET

    RBRACKET        shift and go to state 43


state 37

    (104) funcion -> FUNCTION tipo ID LPAREN . auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23
    (107) auxFunction -> . parametros
    (108) auxFunction -> .
    (109) parametros -> . auxParametros
    (110) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    RPAREN          reduce using rule 108 (auxFunction -> .)
    INT             shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 16
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 18

    tipo                           shift and go to state 44
    auxFunction                    shift and go to state 45
    auxParametros                  shift and go to state 46
    parametros                     shift and go to state 47

state 38

    (30) bloque -> LBRACE . cicloVarsMain cicloBloque RBRACE
    (20) cicloVarsMain -> . varsMain cicloVarsMain
    (21) cicloVarsMain -> .
    (22) varsMain -> . createVariableDirMain VAR auxVar1Main
    (23) createVariableDirMain -> .

    ID              reduce using rule 21 (cicloVarsMain -> .)
    IF              reduce using rule 21 (cicloVarsMain -> .)
    PRINT           reduce using rule 21 (cicloVarsMain -> .)
    WHILE           reduce using rule 21 (cicloVarsMain -> .)
    RBRACE          reduce using rule 21 (cicloVarsMain -> .)
    VAR             reduce using rule 23 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 49
    createVariableDirMain          shift and go to state 48
    varsMain                       shift and go to state 50

state 39

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque .)


state 40

    (7) auxVar1 -> idVars COLON tipo . addTypeGlobal SEMICOLON
    (8) addTypeGlobal -> .

    SEMICOLON       reduce using rule 8 (addTypeGlobal -> .)

    addTypeGlobal                  shift and go to state 51

state 41

    (9) idVars -> ID addVariableDir ambIdVars .

    COLON           reduce using rule 9 (idVars -> ID addVariableDir ambIdVars .)


state 42

    (11) ambIdVars -> COMMA . idVars
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 25

    idVars                         shift and go to state 52

state 43

    (18) ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .

    ID              reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .)
    SEMICOLON       reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .)


state 44

    (110) auxParametros -> tipo . ID addParameters ambAuxParametros

    ID              shift and go to state 53


state 45

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction . RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23

    RPAREN          shift and go to state 54


state 46

    (109) parametros -> auxParametros .

    RPAREN          reduce using rule 109 (parametros -> auxParametros .)


state 47

    (107) auxFunction -> parametros .

    RPAREN          reduce using rule 107 (auxFunction -> parametros .)


state 48

    (22) varsMain -> createVariableDirMain . VAR auxVar1Main

    VAR             shift and go to state 55


state 49

    (30) bloque -> LBRACE cicloVarsMain . cicloBloque RBRACE
    (31) cicloBloque -> . estatuto cicloBloque
    (32) cicloBloque -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . ciclo
    (50) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (72) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (53) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (114) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RBRACE          reduce using rule 32 (cicloBloque -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 56
    WHILE           shift and go to state 57

    ciclo                          shift and go to state 58
    estatuto                       shift and go to state 59
    condicion                      shift and go to state 60
    cicloBloque                    shift and go to state 61
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65

state 50

    (20) cicloVarsMain -> varsMain . cicloVarsMain
    (20) cicloVarsMain -> . varsMain cicloVarsMain
    (21) cicloVarsMain -> .
    (22) varsMain -> . createVariableDirMain VAR auxVar1Main
    (23) createVariableDirMain -> .

    ID              reduce using rule 21 (cicloVarsMain -> .)
    IF              reduce using rule 21 (cicloVarsMain -> .)
    PRINT           reduce using rule 21 (cicloVarsMain -> .)
    WHILE           reduce using rule 21 (cicloVarsMain -> .)
    RBRACE          reduce using rule 21 (cicloVarsMain -> .)
    VAR             reduce using rule 23 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 66
    createVariableDirMain          shift and go to state 48
    varsMain                       shift and go to state 50

state 51

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal . SEMICOLON

    SEMICOLON       shift and go to state 67


state 52

    (11) ambIdVars -> COMMA idVars .

    COLON           reduce using rule 11 (ambIdVars -> COMMA idVars .)


state 53

    (110) auxParametros -> tipo ID . addParameters ambAuxParametros
    (111) addParameters -> .

    COMMA           reduce using rule 111 (addParameters -> .)
    RPAREN          reduce using rule 111 (addParameters -> .)

    addParameters                  shift and go to state 68

state 54

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN . initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23
    (106) initDicFunc -> .

    LBRACE          reduce using rule 106 (initDicFunc -> .)

    initDicFunc                    shift and go to state 69

state 55

    (22) varsMain -> createVariableDirMain VAR . auxVar1Main
    (24) auxVar1Main -> . idVarsMain COLON tipo addTypeGlobalMain SEMICOLON
    (26) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 72

    auxVar1Main                    shift and go to state 70
    idVarsMain                     shift and go to state 71

state 56

    (53) escritura -> PRINT . LPAREN auxEscritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 73


state 57

    (114) ciclo -> WHILE . paso15 LPAREN expAndOr RPAREN paso16 bloque paso17
    (141) paso15 -> .

    LPAREN          reduce using rule 141 (paso15 -> .)

    paso15                         shift and go to state 74

state 58

    (49) estatuto -> ciclo .

    ID              reduce using rule 49 (estatuto -> ciclo .)
    IF              reduce using rule 49 (estatuto -> ciclo .)
    PRINT           reduce using rule 49 (estatuto -> ciclo .)
    WHILE           reduce using rule 49 (estatuto -> ciclo .)
    RBRACE          reduce using rule 49 (estatuto -> ciclo .)
    RETURN          reduce using rule 49 (estatuto -> ciclo .)


state 59

    (31) cicloBloque -> estatuto . cicloBloque
    (31) cicloBloque -> . estatuto cicloBloque
    (32) cicloBloque -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . ciclo
    (50) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (72) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (53) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (114) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RBRACE          reduce using rule 32 (cicloBloque -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 56
    WHILE           shift and go to state 57

    ciclo                          shift and go to state 58
    asignacion                     shift and go to state 64
    estatuto                       shift and go to state 59
    condicion                      shift and go to state 60
    cicloBloque                    shift and go to state 75
    escritura                      shift and go to state 65

state 60

    (47) estatuto -> condicion .

    ID              reduce using rule 47 (estatuto -> condicion .)
    IF              reduce using rule 47 (estatuto -> condicion .)
    PRINT           reduce using rule 47 (estatuto -> condicion .)
    WHILE           reduce using rule 47 (estatuto -> condicion .)
    RBRACE          reduce using rule 47 (estatuto -> condicion .)
    RETURN          reduce using rule 47 (estatuto -> condicion .)


state 61

    (30) bloque -> LBRACE cicloVarsMain cicloBloque . RBRACE

    RBRACE          shift and go to state 76


state 62

    (50) asignacion -> ID . paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (124) paso1 -> .

    LBRACKET        reduce using rule 124 (paso1 -> .)
    EQUALA          reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 77

state 63

    (72) condicion -> IF . LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14

    LPAREN          shift and go to state 78


state 64

    (46) estatuto -> asignacion .

    ID              reduce using rule 46 (estatuto -> asignacion .)
    IF              reduce using rule 46 (estatuto -> asignacion .)
    PRINT           reduce using rule 46 (estatuto -> asignacion .)
    WHILE           reduce using rule 46 (estatuto -> asignacion .)
    RBRACE          reduce using rule 46 (estatuto -> asignacion .)
    RETURN          reduce using rule 46 (estatuto -> asignacion .)


state 65

    (48) estatuto -> escritura .

    ID              reduce using rule 48 (estatuto -> escritura .)
    IF              reduce using rule 48 (estatuto -> escritura .)
    PRINT           reduce using rule 48 (estatuto -> escritura .)
    WHILE           reduce using rule 48 (estatuto -> escritura .)
    RBRACE          reduce using rule 48 (estatuto -> escritura .)
    RETURN          reduce using rule 48 (estatuto -> escritura .)


state 66

    (20) cicloVarsMain -> varsMain cicloVarsMain .

    ID              reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    IF              reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    PRINT           reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    WHILE           reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    RBRACE          reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)


state 67

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .

    VAR             reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    FUNCTION        reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    MAIN            reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)


state 68

    (110) auxParametros -> tipo ID addParameters . ambAuxParametros
    (112) ambAuxParametros -> . COMMA auxParametros
    (113) ambAuxParametros -> .

    COMMA           shift and go to state 79
    RPAREN          reduce using rule 113 (ambAuxParametros -> .)

    ambAuxParametros               shift and go to state 80

state 69

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc . bloqueFuncion addProcDirectoryFunc paso22 paso23
    (33) bloqueFuncion -> . LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE

    LBRACE          shift and go to state 81

    bloqueFuncion                  shift and go to state 82

state 70

    (22) varsMain -> createVariableDirMain VAR auxVar1Main .

    VAR             reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    ID              reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    IF              reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    PRINT           reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    WHILE           reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    RBRACE          reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)


state 71

    (24) auxVar1Main -> idVarsMain . COLON tipo addTypeGlobalMain SEMICOLON

    COLON           shift and go to state 83


state 72

    (26) idVarsMain -> ID . addVariableDirMain ambIdVarsMain
    (27) addVariableDirMain -> .

    COMMA           reduce using rule 27 (addVariableDirMain -> .)
    COLON           reduce using rule 27 (addVariableDirMain -> .)

    addVariableDirMain             shift and go to state 84

state 73

    (53) escritura -> PRINT LPAREN . auxEscritura1 RPAREN SEMICOLON
    (54) auxEscritura1 -> . auxEscritura2 paso18 ambAuxEscritura1
    (57) auxEscritura2 -> . exp
    (58) auxEscritura2 -> . CTESTRING paso1
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 85
    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

  ! CTESTRING       [ reduce using rule 90 (auxFactor -> .) ]

    auxExp                         shift and go to state 88
    auxEscritura1                  shift and go to state 93
    auxEscritura2                  shift and go to state 94
    termino                        shift and go to state 86
    exp                            shift and go to state 97
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 74

    (114) ciclo -> WHILE paso15 . LPAREN expAndOr RPAREN paso16 bloque paso17

    LPAREN          shift and go to state 98


state 75

    (31) cicloBloque -> estatuto cicloBloque .

    RBRACE          reduce using rule 31 (cicloBloque -> estatuto cicloBloque .)


state 76

    (30) bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .

    ID              reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    IF              reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    PRINT           reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    WHILE           reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RBRACE          reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RETURN          reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    $end            reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    ELSE            reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)


state 77

    (50) asignacion -> ID paso1 . addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (98) addType -> .

    LBRACKET        reduce using rule 98 (addType -> .)
    EQUALA          reduce using rule 98 (addType -> .)

    addType                        shift and go to state 99

state 78

    (72) condicion -> IF LPAREN . expAndOr paso12 RPAREN bloque auxCondicion paso14
    (71) expAndOr -> . cicloExpresion auxCicloExpresion
    (59) cicloExpresion -> . expresion paso10
    (63) expresion -> . exp auxExpresion
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    expAndOr                       shift and go to state 100
    termino                        shift and go to state 86
    cicloExpresion                 shift and go to state 101
    auxExp                         shift and go to state 88
    cicloTermino                   shift and go to state 90
    factor                         shift and go to state 91
    cicloExp                       shift and go to state 92
    auxFactor                      shift and go to state 96
    expresion                      shift and go to state 102
    exp                            shift and go to state 103

state 79

    (112) ambAuxParametros -> COMMA . auxParametros
    (110) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 16
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 18

    tipo                           shift and go to state 44
    auxParametros                  shift and go to state 104

state 80

    (110) auxParametros -> tipo ID addParameters ambAuxParametros .

    RPAREN          reduce using rule 110 (auxParametros -> tipo ID addParameters ambAuxParametros .)


state 81

    (33) bloqueFuncion -> LBRACE . cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
    (36) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (37) cicloVarsFuncion -> .
    (38) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (39) createVariableDirFuncion -> .

    ID              reduce using rule 37 (cicloVarsFuncion -> .)
    IF              reduce using rule 37 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 37 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 37 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 37 (cicloVarsFuncion -> .)
    VAR             reduce using rule 39 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 105
    cicloVarsFuncion               shift and go to state 106
    createVariableDirFuncion       shift and go to state 107

state 82

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion . addProcDirectoryFunc paso22 paso23
    (105) addProcDirectoryFunc -> .

    FUNCTION        reduce using rule 105 (addProcDirectoryFunc -> .)
    MAIN            reduce using rule 105 (addProcDirectoryFunc -> .)

    addProcDirectoryFunc           shift and go to state 108

state 83

    (24) auxVar1Main -> idVarsMain COLON . tipo addTypeGlobalMain SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 16
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 18

    tipo                           shift and go to state 109

state 84

    (26) idVarsMain -> ID addVariableDirMain . ambIdVarsMain
    (28) ambIdVarsMain -> . COMMA idVarsMain
    (29) ambIdVarsMain -> .

    COMMA           shift and go to state 111
    COLON           reduce using rule 29 (ambIdVarsMain -> .)

    ambIdVarsMain                  shift and go to state 110

state 85

    (58) auxEscritura2 -> CTESTRING . paso1
    (124) paso1 -> .

    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 112

state 86

    (76) cicloExp -> termino . paso4 ambExp
    (129) paso4 -> .

    PLUS            reduce using rule 129 (paso4 -> .)
    MINUS           reduce using rule 129 (paso4 -> .)
    COMMA           reduce using rule 129 (paso4 -> .)
    RPAREN          reduce using rule 129 (paso4 -> .)
    GTHAN           reduce using rule 129 (paso4 -> .)
    LTHAN           reduce using rule 129 (paso4 -> .)
    NOTEQUAL        reduce using rule 129 (paso4 -> .)
    GETHAN          reduce using rule 129 (paso4 -> .)
    LETHAN          reduce using rule 129 (paso4 -> .)
    EQUAL           reduce using rule 129 (paso4 -> .)
    AND             reduce using rule 129 (paso4 -> .)
    OR              reduce using rule 129 (paso4 -> .)
    RBRACKET        reduce using rule 129 (paso4 -> .)
    SEMICOLON       reduce using rule 129 (paso4 -> .)
    LBRACKET        reduce using rule 129 (paso4 -> .)

    paso4                          shift and go to state 113

state 87

    (80) auxExp -> MINUS . paso3_resta
    (128) paso3_resta -> .

    ID              reduce using rule 128 (paso3_resta -> .)
    CTEINT          reduce using rule 128 (paso3_resta -> .)
    CTEFLOAT        reduce using rule 128 (paso3_resta -> .)
    CTECHAR         reduce using rule 128 (paso3_resta -> .)
    CTEBOOL         reduce using rule 128 (paso3_resta -> .)
    CTESTRING       reduce using rule 128 (paso3_resta -> .)
    CALL            reduce using rule 128 (paso3_resta -> .)
    LPAREN          reduce using rule 128 (paso3_resta -> .)
    PLUS            reduce using rule 128 (paso3_resta -> .)
    MINUS           reduce using rule 128 (paso3_resta -> .)

    paso3_resta                    shift and go to state 114

state 88

    (89) auxFactor -> auxExp .

    ID              reduce using rule 89 (auxFactor -> auxExp .)
    CTEINT          reduce using rule 89 (auxFactor -> auxExp .)
    CTEFLOAT        reduce using rule 89 (auxFactor -> auxExp .)
    CTECHAR         reduce using rule 89 (auxFactor -> auxExp .)
    CTEBOOL         reduce using rule 89 (auxFactor -> auxExp .)
    CTESTRING       reduce using rule 89 (auxFactor -> auxExp .)
    CALL            reduce using rule 89 (auxFactor -> auxExp .)


state 89

    (79) auxExp -> PLUS . paso3_suma
    (127) paso3_suma -> .

    ID              reduce using rule 127 (paso3_suma -> .)
    CTEINT          reduce using rule 127 (paso3_suma -> .)
    CTEFLOAT        reduce using rule 127 (paso3_suma -> .)
    CTECHAR         reduce using rule 127 (paso3_suma -> .)
    CTEBOOL         reduce using rule 127 (paso3_suma -> .)
    CTESTRING       reduce using rule 127 (paso3_suma -> .)
    CALL            reduce using rule 127 (paso3_suma -> .)
    LPAREN          reduce using rule 127 (paso3_suma -> .)
    PLUS            reduce using rule 127 (paso3_suma -> .)
    MINUS           reduce using rule 127 (paso3_suma -> .)

    paso3_suma                     shift and go to state 115

state 90

    (81) termino -> cicloTermino .

    PLUS            reduce using rule 81 (termino -> cicloTermino .)
    MINUS           reduce using rule 81 (termino -> cicloTermino .)
    AND             reduce using rule 81 (termino -> cicloTermino .)
    OR              reduce using rule 81 (termino -> cicloTermino .)
    RPAREN          reduce using rule 81 (termino -> cicloTermino .)
    SEMICOLON       reduce using rule 81 (termino -> cicloTermino .)
    COMMA           reduce using rule 81 (termino -> cicloTermino .)
    GTHAN           reduce using rule 81 (termino -> cicloTermino .)
    LTHAN           reduce using rule 81 (termino -> cicloTermino .)
    NOTEQUAL        reduce using rule 81 (termino -> cicloTermino .)
    GETHAN          reduce using rule 81 (termino -> cicloTermino .)
    LETHAN          reduce using rule 81 (termino -> cicloTermino .)
    EQUAL           reduce using rule 81 (termino -> cicloTermino .)
    RBRACKET        reduce using rule 81 (termino -> cicloTermino .)
    LBRACKET        reduce using rule 81 (termino -> cicloTermino .)


state 91

    (82) cicloTermino -> factor . paso5 ambCicloTermino
    (130) paso5 -> .

    MULTI           reduce using rule 130 (paso5 -> .)
    DIVIDE          reduce using rule 130 (paso5 -> .)
    PLUS            reduce using rule 130 (paso5 -> .)
    MINUS           reduce using rule 130 (paso5 -> .)
    COMMA           reduce using rule 130 (paso5 -> .)
    RPAREN          reduce using rule 130 (paso5 -> .)
    GTHAN           reduce using rule 130 (paso5 -> .)
    LTHAN           reduce using rule 130 (paso5 -> .)
    NOTEQUAL        reduce using rule 130 (paso5 -> .)
    GETHAN          reduce using rule 130 (paso5 -> .)
    LETHAN          reduce using rule 130 (paso5 -> .)
    EQUAL           reduce using rule 130 (paso5 -> .)
    AND             reduce using rule 130 (paso5 -> .)
    OR              reduce using rule 130 (paso5 -> .)
    RBRACKET        reduce using rule 130 (paso5 -> .)
    SEMICOLON       reduce using rule 130 (paso5 -> .)
    LBRACKET        reduce using rule 130 (paso5 -> .)

    paso5                          shift and go to state 116

state 92

    (75) exp -> cicloExp .

    RPAREN          reduce using rule 75 (exp -> cicloExp .)
    COMMA           reduce using rule 75 (exp -> cicloExp .)
    GTHAN           reduce using rule 75 (exp -> cicloExp .)
    LTHAN           reduce using rule 75 (exp -> cicloExp .)
    NOTEQUAL        reduce using rule 75 (exp -> cicloExp .)
    GETHAN          reduce using rule 75 (exp -> cicloExp .)
    LETHAN          reduce using rule 75 (exp -> cicloExp .)
    EQUAL           reduce using rule 75 (exp -> cicloExp .)
    AND             reduce using rule 75 (exp -> cicloExp .)
    OR              reduce using rule 75 (exp -> cicloExp .)
    SEMICOLON       reduce using rule 75 (exp -> cicloExp .)
    LBRACKET        reduce using rule 75 (exp -> cicloExp .)
    RBRACKET        reduce using rule 75 (exp -> cicloExp .)


state 93

    (53) escritura -> PRINT LPAREN auxEscritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 117


state 94

    (54) auxEscritura1 -> auxEscritura2 . paso18 ambAuxEscritura1
    (144) paso18 -> .

    COMMA           reduce using rule 144 (paso18 -> .)
    RPAREN          reduce using rule 144 (paso18 -> .)

    paso18                         shift and go to state 118

state 95

    (87) factor -> LPAREN . paso6 exp RPAREN paso7
    (131) paso6 -> .

    LPAREN          reduce using rule 131 (paso6 -> .)
    PLUS            reduce using rule 131 (paso6 -> .)
    MINUS           reduce using rule 131 (paso6 -> .)
    ID              reduce using rule 131 (paso6 -> .)
    CTEINT          reduce using rule 131 (paso6 -> .)
    CTEFLOAT        reduce using rule 131 (paso6 -> .)
    CTECHAR         reduce using rule 131 (paso6 -> .)
    CTEBOOL         reduce using rule 131 (paso6 -> .)
    CTESTRING       reduce using rule 131 (paso6 -> .)
    CALL            reduce using rule 131 (paso6 -> .)

    paso6                          shift and go to state 119

state 96

    (88) factor -> auxFactor . varcte
    (91) varcte -> . ID paso1 addType auxVarcte
    (92) varcte -> . CTEINT paso1 cteInt
    (93) varcte -> . CTEFLOAT paso1 cteFloat
    (94) varcte -> . CTECHAR paso1 cteChar
    (95) varcte -> . CTEBOOL paso1 cteBool
    (96) varcte -> . CTESTRING paso1 cteString
    (97) varcte -> . llamada
    (115) llamada -> . CALL COLON ID paso24 cteLlamada LPAREN RPAREN

    ID              shift and go to state 126
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 123
    CTECHAR         shift and go to state 121
    CTEBOOL         shift and go to state 127
    CTESTRING       shift and go to state 120
    CALL            shift and go to state 128

    varcte                         shift and go to state 122
    llamada                        shift and go to state 124

state 97

    (57) auxEscritura2 -> exp .

    COMMA           reduce using rule 57 (auxEscritura2 -> exp .)
    RPAREN          reduce using rule 57 (auxEscritura2 -> exp .)


state 98

    (114) ciclo -> WHILE paso15 LPAREN . expAndOr RPAREN paso16 bloque paso17
    (71) expAndOr -> . cicloExpresion auxCicloExpresion
    (59) cicloExpresion -> . expresion paso10
    (63) expresion -> . exp auxExpresion
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    expAndOr                       shift and go to state 129
    termino                        shift and go to state 86
    cicloExpresion                 shift and go to state 101
    auxExp                         shift and go to state 88
    cicloTermino                   shift and go to state 90
    factor                         shift and go to state 91
    cicloExp                       shift and go to state 92
    auxFactor                      shift and go to state 96
    expresion                      shift and go to state 102
    exp                            shift and go to state 103

state 99

    (50) asignacion -> ID paso1 addType . auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (51) auxAsignacion1 -> . LBRACKET exp RBRACKET
    (52) auxAsignacion1 -> .

    LBRACKET        shift and go to state 131
    EQUALA          reduce using rule 52 (auxAsignacion1 -> .)

    auxAsignacion1                 shift and go to state 130

state 100

    (72) condicion -> IF LPAREN expAndOr . paso12 RPAREN bloque auxCondicion paso14
    (138) paso12 -> .

    RPAREN          reduce using rule 138 (paso12 -> .)

    paso12                         shift and go to state 132

state 101

    (71) expAndOr -> cicloExpresion . auxCicloExpresion
    (60) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (61) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (62) auxCicloExpresion -> .

    AND             shift and go to state 133
    OR              shift and go to state 135
    RPAREN          reduce using rule 62 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 134

state 102

    (59) cicloExpresion -> expresion . paso10
    (136) paso10 -> .

    AND             reduce using rule 136 (paso10 -> .)
    OR              reduce using rule 136 (paso10 -> .)
    RPAREN          reduce using rule 136 (paso10 -> .)

    paso10                         shift and go to state 136

state 103

    (63) expresion -> exp . auxExpresion
    (64) auxExpresion -> . GTHAN mayor exp
    (65) auxExpresion -> . LTHAN menor exp
    (66) auxExpresion -> . NOTEQUAL diferente exp
    (67) auxExpresion -> . GETHAN mayorIg exp
    (68) auxExpresion -> . LETHAN menorIg exp
    (69) auxExpresion -> . EQUAL igual exp
    (70) auxExpresion -> .

    GTHAN           shift and go to state 139
    LTHAN           shift and go to state 142
    NOTEQUAL        shift and go to state 137
    GETHAN          shift and go to state 141
    LETHAN          shift and go to state 143
    EQUAL           shift and go to state 140
    AND             reduce using rule 70 (auxExpresion -> .)
    OR              reduce using rule 70 (auxExpresion -> .)
    RPAREN          reduce using rule 70 (auxExpresion -> .)
    SEMICOLON       reduce using rule 70 (auxExpresion -> .)

    auxExpresion                   shift and go to state 138

state 104

    (112) ambAuxParametros -> COMMA auxParametros .

    RPAREN          reduce using rule 112 (ambAuxParametros -> COMMA auxParametros .)


state 105

    (36) cicloVarsFuncion -> varsFuncion . cicloVarsFuncion
    (36) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (37) cicloVarsFuncion -> .
    (38) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (39) createVariableDirFuncion -> .

    ID              reduce using rule 37 (cicloVarsFuncion -> .)
    IF              reduce using rule 37 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 37 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 37 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 37 (cicloVarsFuncion -> .)
    VAR             reduce using rule 39 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 105
    cicloVarsFuncion               shift and go to state 144
    createVariableDirFuncion       shift and go to state 107

state 106

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion . paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
    (147) paso21 -> .

    ID              reduce using rule 147 (paso21 -> .)
    IF              reduce using rule 147 (paso21 -> .)
    PRINT           reduce using rule 147 (paso21 -> .)
    WHILE           reduce using rule 147 (paso21 -> .)
    RETURN          reduce using rule 147 (paso21 -> .)

    paso21                         shift and go to state 145

state 107

    (38) varsFuncion -> createVariableDirFuncion . VAR auxVar1Funcion

    VAR             shift and go to state 146


state 108

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc . paso22 paso23
    (148) paso22 -> .

    FUNCTION        reduce using rule 148 (paso22 -> .)
    MAIN            reduce using rule 148 (paso22 -> .)

    paso22                         shift and go to state 147

state 109

    (24) auxVar1Main -> idVarsMain COLON tipo . addTypeGlobalMain SEMICOLON
    (25) addTypeGlobalMain -> .

    SEMICOLON       reduce using rule 25 (addTypeGlobalMain -> .)

    addTypeGlobalMain              shift and go to state 148

state 110

    (26) idVarsMain -> ID addVariableDirMain ambIdVarsMain .

    COLON           reduce using rule 26 (idVarsMain -> ID addVariableDirMain ambIdVarsMain .)


state 111

    (28) ambIdVarsMain -> COMMA . idVarsMain
    (26) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 72

    idVarsMain                     shift and go to state 149

state 112

    (58) auxEscritura2 -> CTESTRING paso1 .

    COMMA           reduce using rule 58 (auxEscritura2 -> CTESTRING paso1 .)
    RPAREN          reduce using rule 58 (auxEscritura2 -> CTESTRING paso1 .)


state 113

    (76) cicloExp -> termino paso4 . ambExp
    (77) ambExp -> . auxExp cicloExp
    (78) ambExp -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    COMMA           reduce using rule 78 (ambExp -> .)
    RPAREN          reduce using rule 78 (ambExp -> .)
    GTHAN           reduce using rule 78 (ambExp -> .)
    LTHAN           reduce using rule 78 (ambExp -> .)
    NOTEQUAL        reduce using rule 78 (ambExp -> .)
    GETHAN          reduce using rule 78 (ambExp -> .)
    LETHAN          reduce using rule 78 (ambExp -> .)
    EQUAL           reduce using rule 78 (ambExp -> .)
    AND             reduce using rule 78 (ambExp -> .)
    OR              reduce using rule 78 (ambExp -> .)
    RBRACKET        reduce using rule 78 (ambExp -> .)
    SEMICOLON       reduce using rule 78 (ambExp -> .)
    LBRACKET        reduce using rule 78 (ambExp -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 150
    ambExp                         shift and go to state 151

state 114

    (80) auxExp -> MINUS paso3_resta .

    ID              reduce using rule 80 (auxExp -> MINUS paso3_resta .)
    CTEINT          reduce using rule 80 (auxExp -> MINUS paso3_resta .)
    CTEFLOAT        reduce using rule 80 (auxExp -> MINUS paso3_resta .)
    CTECHAR         reduce using rule 80 (auxExp -> MINUS paso3_resta .)
    CTEBOOL         reduce using rule 80 (auxExp -> MINUS paso3_resta .)
    CTESTRING       reduce using rule 80 (auxExp -> MINUS paso3_resta .)
    CALL            reduce using rule 80 (auxExp -> MINUS paso3_resta .)
    LPAREN          reduce using rule 80 (auxExp -> MINUS paso3_resta .)
    PLUS            reduce using rule 80 (auxExp -> MINUS paso3_resta .)
    MINUS           reduce using rule 80 (auxExp -> MINUS paso3_resta .)


state 115

    (79) auxExp -> PLUS paso3_suma .

    ID              reduce using rule 79 (auxExp -> PLUS paso3_suma .)
    CTEINT          reduce using rule 79 (auxExp -> PLUS paso3_suma .)
    CTEFLOAT        reduce using rule 79 (auxExp -> PLUS paso3_suma .)
    CTECHAR         reduce using rule 79 (auxExp -> PLUS paso3_suma .)
    CTEBOOL         reduce using rule 79 (auxExp -> PLUS paso3_suma .)
    CTESTRING       reduce using rule 79 (auxExp -> PLUS paso3_suma .)
    CALL            reduce using rule 79 (auxExp -> PLUS paso3_suma .)
    LPAREN          reduce using rule 79 (auxExp -> PLUS paso3_suma .)
    PLUS            reduce using rule 79 (auxExp -> PLUS paso3_suma .)
    MINUS           reduce using rule 79 (auxExp -> PLUS paso3_suma .)


state 116

    (82) cicloTermino -> factor paso5 . ambCicloTermino
    (83) ambCicloTermino -> . auxTermino cicloTermino
    (84) ambCicloTermino -> .
    (85) auxTermino -> . MULTI paso2_mult
    (86) auxTermino -> . DIVIDE paso2_div

    PLUS            reduce using rule 84 (ambCicloTermino -> .)
    MINUS           reduce using rule 84 (ambCicloTermino -> .)
    COMMA           reduce using rule 84 (ambCicloTermino -> .)
    RPAREN          reduce using rule 84 (ambCicloTermino -> .)
    GTHAN           reduce using rule 84 (ambCicloTermino -> .)
    LTHAN           reduce using rule 84 (ambCicloTermino -> .)
    NOTEQUAL        reduce using rule 84 (ambCicloTermino -> .)
    GETHAN          reduce using rule 84 (ambCicloTermino -> .)
    LETHAN          reduce using rule 84 (ambCicloTermino -> .)
    EQUAL           reduce using rule 84 (ambCicloTermino -> .)
    AND             reduce using rule 84 (ambCicloTermino -> .)
    OR              reduce using rule 84 (ambCicloTermino -> .)
    RBRACKET        reduce using rule 84 (ambCicloTermino -> .)
    SEMICOLON       reduce using rule 84 (ambCicloTermino -> .)
    LBRACKET        reduce using rule 84 (ambCicloTermino -> .)
    MULTI           shift and go to state 152
    DIVIDE          shift and go to state 155

    ambCicloTermino                shift and go to state 153
    auxTermino                     shift and go to state 154

state 117

    (53) escritura -> PRINT LPAREN auxEscritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 156


state 118

    (54) auxEscritura1 -> auxEscritura2 paso18 . ambAuxEscritura1
    (55) ambAuxEscritura1 -> . COMMA auxEscritura1
    (56) ambAuxEscritura1 -> .

    COMMA           shift and go to state 157
    RPAREN          reduce using rule 56 (ambAuxEscritura1 -> .)

    ambAuxEscritura1               shift and go to state 158

state 119

    (87) factor -> LPAREN paso6 . exp RPAREN paso7
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    termino                        shift and go to state 86
    exp                            shift and go to state 159
    factor                         shift and go to state 91
    cicloTermino                   shift and go to state 90
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92

state 120

    (96) varcte -> CTESTRING . paso1 cteString
    (124) paso1 -> .

    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 160

state 121

    (94) varcte -> CTECHAR . paso1 cteChar
    (124) paso1 -> .

    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 161

state 122

    (88) factor -> auxFactor varcte .

    MULTI           reduce using rule 88 (factor -> auxFactor varcte .)
    DIVIDE          reduce using rule 88 (factor -> auxFactor varcte .)
    PLUS            reduce using rule 88 (factor -> auxFactor varcte .)
    MINUS           reduce using rule 88 (factor -> auxFactor varcte .)
    RPAREN          reduce using rule 88 (factor -> auxFactor varcte .)
    GTHAN           reduce using rule 88 (factor -> auxFactor varcte .)
    LTHAN           reduce using rule 88 (factor -> auxFactor varcte .)
    NOTEQUAL        reduce using rule 88 (factor -> auxFactor varcte .)
    GETHAN          reduce using rule 88 (factor -> auxFactor varcte .)
    LETHAN          reduce using rule 88 (factor -> auxFactor varcte .)
    EQUAL           reduce using rule 88 (factor -> auxFactor varcte .)
    AND             reduce using rule 88 (factor -> auxFactor varcte .)
    OR              reduce using rule 88 (factor -> auxFactor varcte .)
    RBRACKET        reduce using rule 88 (factor -> auxFactor varcte .)
    SEMICOLON       reduce using rule 88 (factor -> auxFactor varcte .)
    COMMA           reduce using rule 88 (factor -> auxFactor varcte .)
    LBRACKET        reduce using rule 88 (factor -> auxFactor varcte .)


state 123

    (93) varcte -> CTEFLOAT . paso1 cteFloat
    (124) paso1 -> .

    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 162

state 124

    (97) varcte -> llamada .

    MULTI           reduce using rule 97 (varcte -> llamada .)
    DIVIDE          reduce using rule 97 (varcte -> llamada .)
    PLUS            reduce using rule 97 (varcte -> llamada .)
    MINUS           reduce using rule 97 (varcte -> llamada .)
    COMMA           reduce using rule 97 (varcte -> llamada .)
    RPAREN          reduce using rule 97 (varcte -> llamada .)
    GTHAN           reduce using rule 97 (varcte -> llamada .)
    LTHAN           reduce using rule 97 (varcte -> llamada .)
    NOTEQUAL        reduce using rule 97 (varcte -> llamada .)
    GETHAN          reduce using rule 97 (varcte -> llamada .)
    LETHAN          reduce using rule 97 (varcte -> llamada .)
    EQUAL           reduce using rule 97 (varcte -> llamada .)
    AND             reduce using rule 97 (varcte -> llamada .)
    OR              reduce using rule 97 (varcte -> llamada .)
    RBRACKET        reduce using rule 97 (varcte -> llamada .)
    SEMICOLON       reduce using rule 97 (varcte -> llamada .)
    LBRACKET        reduce using rule 97 (varcte -> llamada .)


state 125

    (92) varcte -> CTEINT . paso1 cteInt
    (124) paso1 -> .

    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 163

state 126

    (91) varcte -> ID . paso1 addType auxVarcte
    (124) paso1 -> .

    LPAREN          reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)
    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 164

state 127

    (95) varcte -> CTEBOOL . paso1 cteBool
    (124) paso1 -> .

    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 165

state 128

    (115) llamada -> CALL . COLON ID paso24 cteLlamada LPAREN RPAREN

    COLON           shift and go to state 166


state 129

    (114) ciclo -> WHILE paso15 LPAREN expAndOr . RPAREN paso16 bloque paso17

    RPAREN          shift and go to state 167


state 130

    (50) asignacion -> ID paso1 addType auxAsignacion1 . EQUALA asig exp paso11 SEMICOLON

    EQUALA          shift and go to state 168


state 131

    (51) auxAsignacion1 -> LBRACKET . exp RBRACKET
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    termino                        shift and go to state 86
    exp                            shift and go to state 169
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 132

    (72) condicion -> IF LPAREN expAndOr paso12 . RPAREN bloque auxCondicion paso14

    RPAREN          shift and go to state 170


state 133

    (60) auxCicloExpresion -> AND . paso8_and cicloExpresion paso9 auxCicloExpresion
    (133) paso8_and -> .

    LPAREN          reduce using rule 133 (paso8_and -> .)
    PLUS            reduce using rule 133 (paso8_and -> .)
    MINUS           reduce using rule 133 (paso8_and -> .)
    ID              reduce using rule 133 (paso8_and -> .)
    CTEINT          reduce using rule 133 (paso8_and -> .)
    CTEFLOAT        reduce using rule 133 (paso8_and -> .)
    CTECHAR         reduce using rule 133 (paso8_and -> .)
    CTEBOOL         reduce using rule 133 (paso8_and -> .)
    CTESTRING       reduce using rule 133 (paso8_and -> .)
    CALL            reduce using rule 133 (paso8_and -> .)

    paso8_and                      shift and go to state 171

state 134

    (71) expAndOr -> cicloExpresion auxCicloExpresion .

    RPAREN          reduce using rule 71 (expAndOr -> cicloExpresion auxCicloExpresion .)


state 135

    (61) auxCicloExpresion -> OR . paso8_or cicloExpresion paso9 auxCicloExpresion
    (134) paso8_or -> .

    LPAREN          reduce using rule 134 (paso8_or -> .)
    PLUS            reduce using rule 134 (paso8_or -> .)
    MINUS           reduce using rule 134 (paso8_or -> .)
    ID              reduce using rule 134 (paso8_or -> .)
    CTEINT          reduce using rule 134 (paso8_or -> .)
    CTEFLOAT        reduce using rule 134 (paso8_or -> .)
    CTECHAR         reduce using rule 134 (paso8_or -> .)
    CTEBOOL         reduce using rule 134 (paso8_or -> .)
    CTESTRING       reduce using rule 134 (paso8_or -> .)
    CALL            reduce using rule 134 (paso8_or -> .)

    paso8_or                       shift and go to state 172

state 136

    (59) cicloExpresion -> expresion paso10 .

    AND             reduce using rule 59 (cicloExpresion -> expresion paso10 .)
    OR              reduce using rule 59 (cicloExpresion -> expresion paso10 .)
    RPAREN          reduce using rule 59 (cicloExpresion -> expresion paso10 .)


state 137

    (66) auxExpresion -> NOTEQUAL . diferente exp
    (163) diferente -> .

    LPAREN          reduce using rule 163 (diferente -> .)
    PLUS            reduce using rule 163 (diferente -> .)
    MINUS           reduce using rule 163 (diferente -> .)
    ID              reduce using rule 163 (diferente -> .)
    CTEINT          reduce using rule 163 (diferente -> .)
    CTEFLOAT        reduce using rule 163 (diferente -> .)
    CTECHAR         reduce using rule 163 (diferente -> .)
    CTEBOOL         reduce using rule 163 (diferente -> .)
    CTESTRING       reduce using rule 163 (diferente -> .)
    CALL            reduce using rule 163 (diferente -> .)

    diferente                      shift and go to state 173

state 138

    (63) expresion -> exp auxExpresion .

    AND             reduce using rule 63 (expresion -> exp auxExpresion .)
    OR              reduce using rule 63 (expresion -> exp auxExpresion .)
    RPAREN          reduce using rule 63 (expresion -> exp auxExpresion .)
    SEMICOLON       reduce using rule 63 (expresion -> exp auxExpresion .)


state 139

    (64) auxExpresion -> GTHAN . mayor exp
    (158) mayor -> .

    LPAREN          reduce using rule 158 (mayor -> .)
    PLUS            reduce using rule 158 (mayor -> .)
    MINUS           reduce using rule 158 (mayor -> .)
    ID              reduce using rule 158 (mayor -> .)
    CTEINT          reduce using rule 158 (mayor -> .)
    CTEFLOAT        reduce using rule 158 (mayor -> .)
    CTECHAR         reduce using rule 158 (mayor -> .)
    CTEBOOL         reduce using rule 158 (mayor -> .)
    CTESTRING       reduce using rule 158 (mayor -> .)
    CALL            reduce using rule 158 (mayor -> .)

    mayor                          shift and go to state 174

state 140

    (69) auxExpresion -> EQUAL . igual exp
    (162) igual -> .

    LPAREN          reduce using rule 162 (igual -> .)
    PLUS            reduce using rule 162 (igual -> .)
    MINUS           reduce using rule 162 (igual -> .)
    ID              reduce using rule 162 (igual -> .)
    CTEINT          reduce using rule 162 (igual -> .)
    CTEFLOAT        reduce using rule 162 (igual -> .)
    CTECHAR         reduce using rule 162 (igual -> .)
    CTEBOOL         reduce using rule 162 (igual -> .)
    CTESTRING       reduce using rule 162 (igual -> .)
    CALL            reduce using rule 162 (igual -> .)

    igual                          shift and go to state 175

state 141

    (67) auxExpresion -> GETHAN . mayorIg exp
    (160) mayorIg -> .

    LPAREN          reduce using rule 160 (mayorIg -> .)
    PLUS            reduce using rule 160 (mayorIg -> .)
    MINUS           reduce using rule 160 (mayorIg -> .)
    ID              reduce using rule 160 (mayorIg -> .)
    CTEINT          reduce using rule 160 (mayorIg -> .)
    CTEFLOAT        reduce using rule 160 (mayorIg -> .)
    CTECHAR         reduce using rule 160 (mayorIg -> .)
    CTEBOOL         reduce using rule 160 (mayorIg -> .)
    CTESTRING       reduce using rule 160 (mayorIg -> .)
    CALL            reduce using rule 160 (mayorIg -> .)

    mayorIg                        shift and go to state 176

state 142

    (65) auxExpresion -> LTHAN . menor exp
    (159) menor -> .

    LPAREN          reduce using rule 159 (menor -> .)
    PLUS            reduce using rule 159 (menor -> .)
    MINUS           reduce using rule 159 (menor -> .)
    ID              reduce using rule 159 (menor -> .)
    CTEINT          reduce using rule 159 (menor -> .)
    CTEFLOAT        reduce using rule 159 (menor -> .)
    CTECHAR         reduce using rule 159 (menor -> .)
    CTEBOOL         reduce using rule 159 (menor -> .)
    CTESTRING       reduce using rule 159 (menor -> .)
    CALL            reduce using rule 159 (menor -> .)

    menor                          shift and go to state 177

state 143

    (68) auxExpresion -> LETHAN . menorIg exp
    (161) menorIg -> .

    LPAREN          reduce using rule 161 (menorIg -> .)
    PLUS            reduce using rule 161 (menorIg -> .)
    MINUS           reduce using rule 161 (menorIg -> .)
    ID              reduce using rule 161 (menorIg -> .)
    CTEINT          reduce using rule 161 (menorIg -> .)
    CTEFLOAT        reduce using rule 161 (menorIg -> .)
    CTECHAR         reduce using rule 161 (menorIg -> .)
    CTEBOOL         reduce using rule 161 (menorIg -> .)
    CTESTRING       reduce using rule 161 (menorIg -> .)
    CALL            reduce using rule 161 (menorIg -> .)

    menorIg                        shift and go to state 178

state 144

    (36) cicloVarsFuncion -> varsFuncion cicloVarsFuncion .

    ID              reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    IF              reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    PRINT           reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    WHILE           reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    RETURN          reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)


state 145

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 . cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
    (34) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (35) cicloBloqueFuncion -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . ciclo
    (50) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (72) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (53) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (114) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RETURN          reduce using rule 35 (cicloBloqueFuncion -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 56
    WHILE           shift and go to state 57

    ciclo                          shift and go to state 58
    estatuto                       shift and go to state 179
    condicion                      shift and go to state 60
    cicloBloqueFuncion             shift and go to state 180
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65

state 146

    (38) varsFuncion -> createVariableDirFuncion VAR . auxVar1Funcion
    (40) auxVar1Funcion -> . idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON
    (42) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 183

    idVarsFuncion                  shift and go to state 181
    auxVar1Funcion                 shift and go to state 182

state 147

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 . paso23
    (149) paso23 -> .

    FUNCTION        reduce using rule 149 (paso23 -> .)
    MAIN            reduce using rule 149 (paso23 -> .)

    paso23                         shift and go to state 184

state 148

    (24) auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain . SEMICOLON

    SEMICOLON       shift and go to state 185


state 149

    (28) ambIdVarsMain -> COMMA idVarsMain .

    COLON           reduce using rule 28 (ambIdVarsMain -> COMMA idVarsMain .)


state 150

    (77) ambExp -> auxExp . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    cicloExp                       shift and go to state 186
    termino                        shift and go to state 86
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    auxExp                         shift and go to state 88
    cicloTermino                   shift and go to state 90

state 151

    (76) cicloExp -> termino paso4 ambExp .

    AND             reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    OR              reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    RPAREN          reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    SEMICOLON       reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    GTHAN           reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    LTHAN           reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    NOTEQUAL        reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    GETHAN          reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    LETHAN          reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    EQUAL           reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    COMMA           reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    RBRACKET        reduce using rule 76 (cicloExp -> termino paso4 ambExp .)
    LBRACKET        reduce using rule 76 (cicloExp -> termino paso4 ambExp .)


state 152

    (85) auxTermino -> MULTI . paso2_mult
    (125) paso2_mult -> .

    LPAREN          reduce using rule 125 (paso2_mult -> .)
    PLUS            reduce using rule 125 (paso2_mult -> .)
    MINUS           reduce using rule 125 (paso2_mult -> .)
    ID              reduce using rule 125 (paso2_mult -> .)
    CTEINT          reduce using rule 125 (paso2_mult -> .)
    CTEFLOAT        reduce using rule 125 (paso2_mult -> .)
    CTECHAR         reduce using rule 125 (paso2_mult -> .)
    CTEBOOL         reduce using rule 125 (paso2_mult -> .)
    CTESTRING       reduce using rule 125 (paso2_mult -> .)
    CALL            reduce using rule 125 (paso2_mult -> .)

    paso2_mult                     shift and go to state 187

state 153

    (82) cicloTermino -> factor paso5 ambCicloTermino .

    PLUS            reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    MINUS           reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    AND             reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    OR              reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    RPAREN          reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    SEMICOLON       reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    LBRACKET        reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    RBRACKET        reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    GTHAN           reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    LTHAN           reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    NOTEQUAL        reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    GETHAN          reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    LETHAN          reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    EQUAL           reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)
    COMMA           reduce using rule 82 (cicloTermino -> factor paso5 ambCicloTermino .)


state 154

    (83) ambCicloTermino -> auxTermino . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    cicloTermino                   shift and go to state 188
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96

state 155

    (86) auxTermino -> DIVIDE . paso2_div
    (126) paso2_div -> .

    LPAREN          reduce using rule 126 (paso2_div -> .)
    PLUS            reduce using rule 126 (paso2_div -> .)
    MINUS           reduce using rule 126 (paso2_div -> .)
    ID              reduce using rule 126 (paso2_div -> .)
    CTEINT          reduce using rule 126 (paso2_div -> .)
    CTEFLOAT        reduce using rule 126 (paso2_div -> .)
    CTECHAR         reduce using rule 126 (paso2_div -> .)
    CTEBOOL         reduce using rule 126 (paso2_div -> .)
    CTESTRING       reduce using rule 126 (paso2_div -> .)
    CALL            reduce using rule 126 (paso2_div -> .)

    paso2_div                      shift and go to state 189

state 156

    (53) escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .

    ID              reduce using rule 53 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 53 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 53 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 53 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 53 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 53 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)


state 157

    (55) ambAuxEscritura1 -> COMMA . auxEscritura1
    (54) auxEscritura1 -> . auxEscritura2 paso18 ambAuxEscritura1
    (57) auxEscritura2 -> . exp
    (58) auxEscritura2 -> . CTESTRING paso1
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 85
    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

  ! CTESTRING       [ reduce using rule 90 (auxFactor -> .) ]

    auxExp                         shift and go to state 88
    auxEscritura1                  shift and go to state 190
    auxEscritura2                  shift and go to state 94
    termino                        shift and go to state 86
    exp                            shift and go to state 97
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 158

    (54) auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1 .

    RPAREN          reduce using rule 54 (auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1 .)


state 159

    (87) factor -> LPAREN paso6 exp . RPAREN paso7

    RPAREN          shift and go to state 191


state 160

    (96) varcte -> CTESTRING paso1 . cteString
    (156) cteString -> .

    MULTI           reduce using rule 156 (cteString -> .)
    DIVIDE          reduce using rule 156 (cteString -> .)
    PLUS            reduce using rule 156 (cteString -> .)
    MINUS           reduce using rule 156 (cteString -> .)
    COMMA           reduce using rule 156 (cteString -> .)
    RPAREN          reduce using rule 156 (cteString -> .)
    GTHAN           reduce using rule 156 (cteString -> .)
    LTHAN           reduce using rule 156 (cteString -> .)
    NOTEQUAL        reduce using rule 156 (cteString -> .)
    GETHAN          reduce using rule 156 (cteString -> .)
    LETHAN          reduce using rule 156 (cteString -> .)
    EQUAL           reduce using rule 156 (cteString -> .)
    AND             reduce using rule 156 (cteString -> .)
    OR              reduce using rule 156 (cteString -> .)
    RBRACKET        reduce using rule 156 (cteString -> .)
    SEMICOLON       reduce using rule 156 (cteString -> .)
    LBRACKET        reduce using rule 156 (cteString -> .)

    cteString                      shift and go to state 192

state 161

    (94) varcte -> CTECHAR paso1 . cteChar
    (154) cteChar -> .

    MULTI           reduce using rule 154 (cteChar -> .)
    DIVIDE          reduce using rule 154 (cteChar -> .)
    PLUS            reduce using rule 154 (cteChar -> .)
    MINUS           reduce using rule 154 (cteChar -> .)
    COMMA           reduce using rule 154 (cteChar -> .)
    RPAREN          reduce using rule 154 (cteChar -> .)
    GTHAN           reduce using rule 154 (cteChar -> .)
    LTHAN           reduce using rule 154 (cteChar -> .)
    NOTEQUAL        reduce using rule 154 (cteChar -> .)
    GETHAN          reduce using rule 154 (cteChar -> .)
    LETHAN          reduce using rule 154 (cteChar -> .)
    EQUAL           reduce using rule 154 (cteChar -> .)
    AND             reduce using rule 154 (cteChar -> .)
    OR              reduce using rule 154 (cteChar -> .)
    RBRACKET        reduce using rule 154 (cteChar -> .)
    SEMICOLON       reduce using rule 154 (cteChar -> .)
    LBRACKET        reduce using rule 154 (cteChar -> .)

    cteChar                        shift and go to state 193

state 162

    (93) varcte -> CTEFLOAT paso1 . cteFloat
    (153) cteFloat -> .

    MULTI           reduce using rule 153 (cteFloat -> .)
    DIVIDE          reduce using rule 153 (cteFloat -> .)
    PLUS            reduce using rule 153 (cteFloat -> .)
    MINUS           reduce using rule 153 (cteFloat -> .)
    COMMA           reduce using rule 153 (cteFloat -> .)
    RPAREN          reduce using rule 153 (cteFloat -> .)
    GTHAN           reduce using rule 153 (cteFloat -> .)
    LTHAN           reduce using rule 153 (cteFloat -> .)
    NOTEQUAL        reduce using rule 153 (cteFloat -> .)
    GETHAN          reduce using rule 153 (cteFloat -> .)
    LETHAN          reduce using rule 153 (cteFloat -> .)
    EQUAL           reduce using rule 153 (cteFloat -> .)
    AND             reduce using rule 153 (cteFloat -> .)
    OR              reduce using rule 153 (cteFloat -> .)
    RBRACKET        reduce using rule 153 (cteFloat -> .)
    SEMICOLON       reduce using rule 153 (cteFloat -> .)
    LBRACKET        reduce using rule 153 (cteFloat -> .)

    cteFloat                       shift and go to state 194

state 163

    (92) varcte -> CTEINT paso1 . cteInt
    (152) cteInt -> .

    MULTI           reduce using rule 152 (cteInt -> .)
    DIVIDE          reduce using rule 152 (cteInt -> .)
    PLUS            reduce using rule 152 (cteInt -> .)
    MINUS           reduce using rule 152 (cteInt -> .)
    COMMA           reduce using rule 152 (cteInt -> .)
    RPAREN          reduce using rule 152 (cteInt -> .)
    GTHAN           reduce using rule 152 (cteInt -> .)
    LTHAN           reduce using rule 152 (cteInt -> .)
    NOTEQUAL        reduce using rule 152 (cteInt -> .)
    GETHAN          reduce using rule 152 (cteInt -> .)
    LETHAN          reduce using rule 152 (cteInt -> .)
    EQUAL           reduce using rule 152 (cteInt -> .)
    AND             reduce using rule 152 (cteInt -> .)
    OR              reduce using rule 152 (cteInt -> .)
    RBRACKET        reduce using rule 152 (cteInt -> .)
    SEMICOLON       reduce using rule 152 (cteInt -> .)
    LBRACKET        reduce using rule 152 (cteInt -> .)

    cteInt                         shift and go to state 195

state 164

    (91) varcte -> ID paso1 . addType auxVarcte
    (98) addType -> .

    LPAREN          reduce using rule 98 (addType -> .)
    LBRACKET        reduce using rule 98 (addType -> .)
    MULTI           reduce using rule 98 (addType -> .)
    DIVIDE          reduce using rule 98 (addType -> .)
    PLUS            reduce using rule 98 (addType -> .)
    MINUS           reduce using rule 98 (addType -> .)
    COMMA           reduce using rule 98 (addType -> .)
    RPAREN          reduce using rule 98 (addType -> .)
    GTHAN           reduce using rule 98 (addType -> .)
    LTHAN           reduce using rule 98 (addType -> .)
    NOTEQUAL        reduce using rule 98 (addType -> .)
    GETHAN          reduce using rule 98 (addType -> .)
    LETHAN          reduce using rule 98 (addType -> .)
    EQUAL           reduce using rule 98 (addType -> .)
    AND             reduce using rule 98 (addType -> .)
    OR              reduce using rule 98 (addType -> .)
    RBRACKET        reduce using rule 98 (addType -> .)
    SEMICOLON       reduce using rule 98 (addType -> .)

    addType                        shift and go to state 196

state 165

    (95) varcte -> CTEBOOL paso1 . cteBool
    (155) cteBool -> .

    MULTI           reduce using rule 155 (cteBool -> .)
    DIVIDE          reduce using rule 155 (cteBool -> .)
    PLUS            reduce using rule 155 (cteBool -> .)
    MINUS           reduce using rule 155 (cteBool -> .)
    COMMA           reduce using rule 155 (cteBool -> .)
    RPAREN          reduce using rule 155 (cteBool -> .)
    GTHAN           reduce using rule 155 (cteBool -> .)
    LTHAN           reduce using rule 155 (cteBool -> .)
    NOTEQUAL        reduce using rule 155 (cteBool -> .)
    GETHAN          reduce using rule 155 (cteBool -> .)
    LETHAN          reduce using rule 155 (cteBool -> .)
    EQUAL           reduce using rule 155 (cteBool -> .)
    AND             reduce using rule 155 (cteBool -> .)
    OR              reduce using rule 155 (cteBool -> .)
    RBRACKET        reduce using rule 155 (cteBool -> .)
    SEMICOLON       reduce using rule 155 (cteBool -> .)
    LBRACKET        reduce using rule 155 (cteBool -> .)

    cteBool                        shift and go to state 197

state 166

    (115) llamada -> CALL COLON . ID paso24 cteLlamada LPAREN RPAREN

    ID              shift and go to state 198


state 167

    (114) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN . paso16 bloque paso17
    (142) paso16 -> .

    LBRACE          reduce using rule 142 (paso16 -> .)

    paso16                         shift and go to state 199

state 168

    (50) asignacion -> ID paso1 addType auxAsignacion1 EQUALA . asig exp paso11 SEMICOLON
    (164) asig -> .

    LPAREN          reduce using rule 164 (asig -> .)
    PLUS            reduce using rule 164 (asig -> .)
    MINUS           reduce using rule 164 (asig -> .)
    ID              reduce using rule 164 (asig -> .)
    CTEINT          reduce using rule 164 (asig -> .)
    CTEFLOAT        reduce using rule 164 (asig -> .)
    CTECHAR         reduce using rule 164 (asig -> .)
    CTEBOOL         reduce using rule 164 (asig -> .)
    CTESTRING       reduce using rule 164 (asig -> .)
    CALL            reduce using rule 164 (asig -> .)

    asig                           shift and go to state 200

state 169

    (51) auxAsignacion1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 201


state 170

    (72) condicion -> IF LPAREN expAndOr paso12 RPAREN . bloque auxCondicion paso14
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 38

    bloque                         shift and go to state 202

state 171

    (60) auxCicloExpresion -> AND paso8_and . cicloExpresion paso9 auxCicloExpresion
    (59) cicloExpresion -> . expresion paso10
    (63) expresion -> . exp auxExpresion
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    termino                        shift and go to state 86
    cicloExpresion                 shift and go to state 203
    cicloTermino                   shift and go to state 90
    factor                         shift and go to state 91
    cicloExp                       shift and go to state 92
    auxFactor                      shift and go to state 96
    auxExp                         shift and go to state 88
    expresion                      shift and go to state 102
    exp                            shift and go to state 103

state 172

    (61) auxCicloExpresion -> OR paso8_or . cicloExpresion paso9 auxCicloExpresion
    (59) cicloExpresion -> . expresion paso10
    (63) expresion -> . exp auxExpresion
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    termino                        shift and go to state 86
    cicloExpresion                 shift and go to state 204
    cicloTermino                   shift and go to state 90
    factor                         shift and go to state 91
    cicloExp                       shift and go to state 92
    auxFactor                      shift and go to state 96
    auxExp                         shift and go to state 88
    expresion                      shift and go to state 102
    exp                            shift and go to state 103

state 173

    (66) auxExpresion -> NOTEQUAL diferente . exp
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    termino                        shift and go to state 86
    exp                            shift and go to state 205
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 174

    (64) auxExpresion -> GTHAN mayor . exp
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    cicloExp                       shift and go to state 92
    termino                        shift and go to state 86
    exp                            shift and go to state 206
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloTermino                   shift and go to state 90

state 175

    (69) auxExpresion -> EQUAL igual . exp
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    termino                        shift and go to state 86
    exp                            shift and go to state 207
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 176

    (67) auxExpresion -> GETHAN mayorIg . exp
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    termino                        shift and go to state 86
    exp                            shift and go to state 208
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 177

    (65) auxExpresion -> LTHAN menor . exp
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    termino                        shift and go to state 86
    exp                            shift and go to state 209
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 178

    (68) auxExpresion -> LETHAN menorIg . exp
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    termino                        shift and go to state 86
    exp                            shift and go to state 210
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 179

    (34) cicloBloqueFuncion -> estatuto . cicloBloqueFuncion
    (34) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (35) cicloBloqueFuncion -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . ciclo
    (50) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (72) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (53) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (114) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RETURN          reduce using rule 35 (cicloBloqueFuncion -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 56
    WHILE           shift and go to state 57

    ciclo                          shift and go to state 58
    asignacion                     shift and go to state 64
    estatuto                       shift and go to state 179
    condicion                      shift and go to state 60
    cicloBloqueFuncion             shift and go to state 211
    escritura                      shift and go to state 65

state 180

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion . RETURN expresion SEMICOLON RBRACE

    RETURN          shift and go to state 212


state 181

    (40) auxVar1Funcion -> idVarsFuncion . COLON tipo addTypeGlobalFuncion SEMICOLON

    COLON           shift and go to state 213


state 182

    (38) varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .

    VAR             reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    ID              reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    IF              reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    PRINT           reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    WHILE           reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    RETURN          reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)


state 183

    (42) idVarsFuncion -> ID . addVariableDirFuncion ambIdVarsFuncion
    (43) addVariableDirFuncion -> .

    COMMA           reduce using rule 43 (addVariableDirFuncion -> .)
    COLON           reduce using rule 43 (addVariableDirFuncion -> .)

    addVariableDirFuncion          shift and go to state 214

state 184

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23 .

    FUNCTION        reduce using rule 104 (funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23 .)
    MAIN            reduce using rule 104 (funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23 .)


state 185

    (24) auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .

    VAR             reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    ID              reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    IF              reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    PRINT           reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    WHILE           reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    RBRACE          reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)


state 186

    (77) ambExp -> auxExp cicloExp .

    COMMA           reduce using rule 77 (ambExp -> auxExp cicloExp .)
    RPAREN          reduce using rule 77 (ambExp -> auxExp cicloExp .)
    GTHAN           reduce using rule 77 (ambExp -> auxExp cicloExp .)
    LTHAN           reduce using rule 77 (ambExp -> auxExp cicloExp .)
    NOTEQUAL        reduce using rule 77 (ambExp -> auxExp cicloExp .)
    GETHAN          reduce using rule 77 (ambExp -> auxExp cicloExp .)
    LETHAN          reduce using rule 77 (ambExp -> auxExp cicloExp .)
    EQUAL           reduce using rule 77 (ambExp -> auxExp cicloExp .)
    AND             reduce using rule 77 (ambExp -> auxExp cicloExp .)
    OR              reduce using rule 77 (ambExp -> auxExp cicloExp .)
    RBRACKET        reduce using rule 77 (ambExp -> auxExp cicloExp .)
    SEMICOLON       reduce using rule 77 (ambExp -> auxExp cicloExp .)
    LBRACKET        reduce using rule 77 (ambExp -> auxExp cicloExp .)


state 187

    (85) auxTermino -> MULTI paso2_mult .

    LPAREN          reduce using rule 85 (auxTermino -> MULTI paso2_mult .)
    PLUS            reduce using rule 85 (auxTermino -> MULTI paso2_mult .)
    MINUS           reduce using rule 85 (auxTermino -> MULTI paso2_mult .)
    ID              reduce using rule 85 (auxTermino -> MULTI paso2_mult .)
    CTEINT          reduce using rule 85 (auxTermino -> MULTI paso2_mult .)
    CTEFLOAT        reduce using rule 85 (auxTermino -> MULTI paso2_mult .)
    CTECHAR         reduce using rule 85 (auxTermino -> MULTI paso2_mult .)
    CTEBOOL         reduce using rule 85 (auxTermino -> MULTI paso2_mult .)
    CTESTRING       reduce using rule 85 (auxTermino -> MULTI paso2_mult .)
    CALL            reduce using rule 85 (auxTermino -> MULTI paso2_mult .)


state 188

    (83) ambCicloTermino -> auxTermino cicloTermino .

    PLUS            reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    MINUS           reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    COMMA           reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    RPAREN          reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    GTHAN           reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    LTHAN           reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    NOTEQUAL        reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    GETHAN          reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    LETHAN          reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    EQUAL           reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    AND             reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    OR              reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    RBRACKET        reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    SEMICOLON       reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)
    LBRACKET        reduce using rule 83 (ambCicloTermino -> auxTermino cicloTermino .)


state 189

    (86) auxTermino -> DIVIDE paso2_div .

    LPAREN          reduce using rule 86 (auxTermino -> DIVIDE paso2_div .)
    PLUS            reduce using rule 86 (auxTermino -> DIVIDE paso2_div .)
    MINUS           reduce using rule 86 (auxTermino -> DIVIDE paso2_div .)
    ID              reduce using rule 86 (auxTermino -> DIVIDE paso2_div .)
    CTEINT          reduce using rule 86 (auxTermino -> DIVIDE paso2_div .)
    CTEFLOAT        reduce using rule 86 (auxTermino -> DIVIDE paso2_div .)
    CTECHAR         reduce using rule 86 (auxTermino -> DIVIDE paso2_div .)
    CTEBOOL         reduce using rule 86 (auxTermino -> DIVIDE paso2_div .)
    CTESTRING       reduce using rule 86 (auxTermino -> DIVIDE paso2_div .)
    CALL            reduce using rule 86 (auxTermino -> DIVIDE paso2_div .)


state 190

    (55) ambAuxEscritura1 -> COMMA auxEscritura1 .

    RPAREN          reduce using rule 55 (ambAuxEscritura1 -> COMMA auxEscritura1 .)


state 191

    (87) factor -> LPAREN paso6 exp RPAREN . paso7
    (132) paso7 -> .

    MULTI           reduce using rule 132 (paso7 -> .)
    DIVIDE          reduce using rule 132 (paso7 -> .)
    PLUS            reduce using rule 132 (paso7 -> .)
    MINUS           reduce using rule 132 (paso7 -> .)
    COMMA           reduce using rule 132 (paso7 -> .)
    RPAREN          reduce using rule 132 (paso7 -> .)
    GTHAN           reduce using rule 132 (paso7 -> .)
    LTHAN           reduce using rule 132 (paso7 -> .)
    NOTEQUAL        reduce using rule 132 (paso7 -> .)
    GETHAN          reduce using rule 132 (paso7 -> .)
    LETHAN          reduce using rule 132 (paso7 -> .)
    EQUAL           reduce using rule 132 (paso7 -> .)
    AND             reduce using rule 132 (paso7 -> .)
    OR              reduce using rule 132 (paso7 -> .)
    RBRACKET        reduce using rule 132 (paso7 -> .)
    SEMICOLON       reduce using rule 132 (paso7 -> .)
    LBRACKET        reduce using rule 132 (paso7 -> .)

    paso7                          shift and go to state 215

state 192

    (96) varcte -> CTESTRING paso1 cteString .

    MULTI           reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    DIVIDE          reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    PLUS            reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    MINUS           reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    COMMA           reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    RPAREN          reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    GTHAN           reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    LTHAN           reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    NOTEQUAL        reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    GETHAN          reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    LETHAN          reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    EQUAL           reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    AND             reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    OR              reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    RBRACKET        reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    SEMICOLON       reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)
    LBRACKET        reduce using rule 96 (varcte -> CTESTRING paso1 cteString .)


state 193

    (94) varcte -> CTECHAR paso1 cteChar .

    MULTI           reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    DIVIDE          reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    PLUS            reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    MINUS           reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    COMMA           reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    RPAREN          reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    GTHAN           reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    LTHAN           reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    NOTEQUAL        reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    GETHAN          reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    LETHAN          reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    EQUAL           reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    AND             reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    OR              reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    RBRACKET        reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    SEMICOLON       reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)
    LBRACKET        reduce using rule 94 (varcte -> CTECHAR paso1 cteChar .)


state 194

    (93) varcte -> CTEFLOAT paso1 cteFloat .

    MULTI           reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    DIVIDE          reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    PLUS            reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    MINUS           reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    COMMA           reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    RPAREN          reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    GTHAN           reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    LTHAN           reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    NOTEQUAL        reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    GETHAN          reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    LETHAN          reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    EQUAL           reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    AND             reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    OR              reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    RBRACKET        reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    SEMICOLON       reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)
    LBRACKET        reduce using rule 93 (varcte -> CTEFLOAT paso1 cteFloat .)


state 195

    (92) varcte -> CTEINT paso1 cteInt .

    MULTI           reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    DIVIDE          reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    PLUS            reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    MINUS           reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    COMMA           reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    RPAREN          reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    GTHAN           reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    LTHAN           reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    NOTEQUAL        reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    GETHAN          reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    LETHAN          reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    EQUAL           reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    AND             reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    OR              reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    RBRACKET        reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    SEMICOLON       reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)
    LBRACKET        reduce using rule 92 (varcte -> CTEINT paso1 cteInt .)


state 196

    (91) varcte -> ID paso1 addType . auxVarcte
    (99) auxVarcte -> . LPAREN exp RPAREN
    (100) auxVarcte -> . LBRACKET exp LBRACKET
    (101) auxVarcte -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
    LPAREN          shift and go to state 216
    LBRACKET        shift and go to state 217
    MULTI           reduce using rule 101 (auxVarcte -> .)
    DIVIDE          reduce using rule 101 (auxVarcte -> .)
    PLUS            reduce using rule 101 (auxVarcte -> .)
    MINUS           reduce using rule 101 (auxVarcte -> .)
    COMMA           reduce using rule 101 (auxVarcte -> .)
    RPAREN          reduce using rule 101 (auxVarcte -> .)
    GTHAN           reduce using rule 101 (auxVarcte -> .)
    LTHAN           reduce using rule 101 (auxVarcte -> .)
    NOTEQUAL        reduce using rule 101 (auxVarcte -> .)
    GETHAN          reduce using rule 101 (auxVarcte -> .)
    LETHAN          reduce using rule 101 (auxVarcte -> .)
    EQUAL           reduce using rule 101 (auxVarcte -> .)
    AND             reduce using rule 101 (auxVarcte -> .)
    OR              reduce using rule 101 (auxVarcte -> .)
    RBRACKET        reduce using rule 101 (auxVarcte -> .)
    SEMICOLON       reduce using rule 101 (auxVarcte -> .)

  ! LBRACKET        [ reduce using rule 101 (auxVarcte -> .) ]

    auxVarcte                      shift and go to state 218

state 197

    (95) varcte -> CTEBOOL paso1 cteBool .

    MULTI           reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    DIVIDE          reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    PLUS            reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    MINUS           reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    COMMA           reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    RPAREN          reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    GTHAN           reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    LTHAN           reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    NOTEQUAL        reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    GETHAN          reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    LETHAN          reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    EQUAL           reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    AND             reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    OR              reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    RBRACKET        reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    SEMICOLON       reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)
    LBRACKET        reduce using rule 95 (varcte -> CTEBOOL paso1 cteBool .)


state 198

    (115) llamada -> CALL COLON ID . paso24 cteLlamada LPAREN RPAREN
    (150) paso24 -> .

    LPAREN          reduce using rule 150 (paso24 -> .)

    paso24                         shift and go to state 219

state 199

    (114) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 . bloque paso17
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 38

    bloque                         shift and go to state 220

state 200

    (50) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig . exp paso11 SEMICOLON
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    cicloTermino                   shift and go to state 90
    termino                        shift and go to state 86
    exp                            shift and go to state 221
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92

state 201

    (51) auxAsignacion1 -> LBRACKET exp RBRACKET .

    EQUALA          reduce using rule 51 (auxAsignacion1 -> LBRACKET exp RBRACKET .)


state 202

    (72) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque . auxCondicion paso14
    (73) auxCondicion -> . ELSE paso13 bloque
    (74) auxCondicion -> .

    ELSE            shift and go to state 223
    ID              reduce using rule 74 (auxCondicion -> .)
    IF              reduce using rule 74 (auxCondicion -> .)
    PRINT           reduce using rule 74 (auxCondicion -> .)
    WHILE           reduce using rule 74 (auxCondicion -> .)
    RBRACE          reduce using rule 74 (auxCondicion -> .)
    RETURN          reduce using rule 74 (auxCondicion -> .)

    auxCondicion                   shift and go to state 222

state 203

    (60) auxCicloExpresion -> AND paso8_and cicloExpresion . paso9 auxCicloExpresion
    (135) paso9 -> .

    AND             reduce using rule 135 (paso9 -> .)
    OR              reduce using rule 135 (paso9 -> .)
    RPAREN          reduce using rule 135 (paso9 -> .)

    paso9                          shift and go to state 224

state 204

    (61) auxCicloExpresion -> OR paso8_or cicloExpresion . paso9 auxCicloExpresion
    (135) paso9 -> .

    AND             reduce using rule 135 (paso9 -> .)
    OR              reduce using rule 135 (paso9 -> .)
    RPAREN          reduce using rule 135 (paso9 -> .)

    paso9                          shift and go to state 225

state 205

    (66) auxExpresion -> NOTEQUAL diferente exp .

    AND             reduce using rule 66 (auxExpresion -> NOTEQUAL diferente exp .)
    OR              reduce using rule 66 (auxExpresion -> NOTEQUAL diferente exp .)
    RPAREN          reduce using rule 66 (auxExpresion -> NOTEQUAL diferente exp .)
    SEMICOLON       reduce using rule 66 (auxExpresion -> NOTEQUAL diferente exp .)


state 206

    (64) auxExpresion -> GTHAN mayor exp .

    AND             reduce using rule 64 (auxExpresion -> GTHAN mayor exp .)
    OR              reduce using rule 64 (auxExpresion -> GTHAN mayor exp .)
    RPAREN          reduce using rule 64 (auxExpresion -> GTHAN mayor exp .)
    SEMICOLON       reduce using rule 64 (auxExpresion -> GTHAN mayor exp .)


state 207

    (69) auxExpresion -> EQUAL igual exp .

    AND             reduce using rule 69 (auxExpresion -> EQUAL igual exp .)
    OR              reduce using rule 69 (auxExpresion -> EQUAL igual exp .)
    RPAREN          reduce using rule 69 (auxExpresion -> EQUAL igual exp .)
    SEMICOLON       reduce using rule 69 (auxExpresion -> EQUAL igual exp .)


state 208

    (67) auxExpresion -> GETHAN mayorIg exp .

    AND             reduce using rule 67 (auxExpresion -> GETHAN mayorIg exp .)
    OR              reduce using rule 67 (auxExpresion -> GETHAN mayorIg exp .)
    RPAREN          reduce using rule 67 (auxExpresion -> GETHAN mayorIg exp .)
    SEMICOLON       reduce using rule 67 (auxExpresion -> GETHAN mayorIg exp .)


state 209

    (65) auxExpresion -> LTHAN menor exp .

    AND             reduce using rule 65 (auxExpresion -> LTHAN menor exp .)
    OR              reduce using rule 65 (auxExpresion -> LTHAN menor exp .)
    RPAREN          reduce using rule 65 (auxExpresion -> LTHAN menor exp .)
    SEMICOLON       reduce using rule 65 (auxExpresion -> LTHAN menor exp .)


state 210

    (68) auxExpresion -> LETHAN menorIg exp .

    AND             reduce using rule 68 (auxExpresion -> LETHAN menorIg exp .)
    OR              reduce using rule 68 (auxExpresion -> LETHAN menorIg exp .)
    RPAREN          reduce using rule 68 (auxExpresion -> LETHAN menorIg exp .)
    SEMICOLON       reduce using rule 68 (auxExpresion -> LETHAN menorIg exp .)


state 211

    (34) cicloBloqueFuncion -> estatuto cicloBloqueFuncion .

    RETURN          reduce using rule 34 (cicloBloqueFuncion -> estatuto cicloBloqueFuncion .)


state 212

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN . expresion SEMICOLON RBRACE
    (63) expresion -> . exp auxExpresion
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    expresion                      shift and go to state 226
    auxExp                         shift and go to state 88
    termino                        shift and go to state 86
    exp                            shift and go to state 103
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 213

    (40) auxVar1Funcion -> idVarsFuncion COLON . tipo addTypeGlobalFuncion SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 16
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 18

    tipo                           shift and go to state 227

state 214

    (42) idVarsFuncion -> ID addVariableDirFuncion . ambIdVarsFuncion
    (44) ambIdVarsFuncion -> . COMMA idVarsFuncion
    (45) ambIdVarsFuncion -> .

    COMMA           shift and go to state 229
    COLON           reduce using rule 45 (ambIdVarsFuncion -> .)

    ambIdVarsFuncion               shift and go to state 228

state 215

    (87) factor -> LPAREN paso6 exp RPAREN paso7 .

    MULTI           reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    DIVIDE          reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    PLUS            reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    MINUS           reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RPAREN          reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    GTHAN           reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LTHAN           reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    NOTEQUAL        reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    GETHAN          reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LETHAN          reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    EQUAL           reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    AND             reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    OR              reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RBRACKET        reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    SEMICOLON       reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    COMMA           reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LBRACKET        reduce using rule 87 (factor -> LPAREN paso6 exp RPAREN paso7 .)


state 216

    (99) auxVarcte -> LPAREN . exp RPAREN
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    termino                        shift and go to state 86
    exp                            shift and go to state 230
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 217

    (100) auxVarcte -> LBRACKET . exp LBRACKET
    (75) exp -> . cicloExp
    (76) cicloExp -> . termino paso4 ambExp
    (81) termino -> . cicloTermino
    (82) cicloTermino -> . factor paso5 ambCicloTermino
    (87) factor -> . LPAREN paso6 exp RPAREN paso7
    (88) factor -> . auxFactor varcte
    (89) auxFactor -> . auxExp
    (90) auxFactor -> .
    (79) auxExp -> . PLUS paso3_suma
    (80) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 90 (auxFactor -> .)
    CTEINT          reduce using rule 90 (auxFactor -> .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> .)
    CTECHAR         reduce using rule 90 (auxFactor -> .)
    CTEBOOL         reduce using rule 90 (auxFactor -> .)
    CTESTRING       reduce using rule 90 (auxFactor -> .)
    CALL            reduce using rule 90 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 87

    auxExp                         shift and go to state 88
    termino                        shift and go to state 86
    exp                            shift and go to state 231
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 218

    (91) varcte -> ID paso1 addType auxVarcte .

    MULTI           reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    DIVIDE          reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    PLUS            reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    MINUS           reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    COMMA           reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    RPAREN          reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    GTHAN           reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    LTHAN           reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    NOTEQUAL        reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    GETHAN          reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    LETHAN          reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    EQUAL           reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    AND             reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    OR              reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    RBRACKET        reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    SEMICOLON       reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)
    LBRACKET        reduce using rule 91 (varcte -> ID paso1 addType auxVarcte .)


state 219

    (115) llamada -> CALL COLON ID paso24 . cteLlamada LPAREN RPAREN
    (157) cteLlamada -> .

    LPAREN          reduce using rule 157 (cteLlamada -> .)

    cteLlamada                     shift and go to state 232

state 220

    (114) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque . paso17
    (143) paso17 -> .

    ID              reduce using rule 143 (paso17 -> .)
    IF              reduce using rule 143 (paso17 -> .)
    PRINT           reduce using rule 143 (paso17 -> .)
    WHILE           reduce using rule 143 (paso17 -> .)
    RBRACE          reduce using rule 143 (paso17 -> .)
    RETURN          reduce using rule 143 (paso17 -> .)

    paso17                         shift and go to state 233

state 221

    (50) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp . paso11 SEMICOLON
    (137) paso11 -> .

    SEMICOLON       reduce using rule 137 (paso11 -> .)

    paso11                         shift and go to state 234

state 222

    (72) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion . paso14
    (140) paso14 -> .

    ID              reduce using rule 140 (paso14 -> .)
    IF              reduce using rule 140 (paso14 -> .)
    PRINT           reduce using rule 140 (paso14 -> .)
    WHILE           reduce using rule 140 (paso14 -> .)
    RBRACE          reduce using rule 140 (paso14 -> .)
    RETURN          reduce using rule 140 (paso14 -> .)

    paso14                         shift and go to state 235

state 223

    (73) auxCondicion -> ELSE . paso13 bloque
    (139) paso13 -> .

    LBRACE          reduce using rule 139 (paso13 -> .)

    paso13                         shift and go to state 236

state 224

    (60) auxCicloExpresion -> AND paso8_and cicloExpresion paso9 . auxCicloExpresion
    (60) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (61) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (62) auxCicloExpresion -> .

    AND             shift and go to state 133
    OR              shift and go to state 135
    RPAREN          reduce using rule 62 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 237

state 225

    (61) auxCicloExpresion -> OR paso8_or cicloExpresion paso9 . auxCicloExpresion
    (60) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (61) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (62) auxCicloExpresion -> .

    AND             shift and go to state 133
    OR              shift and go to state 135
    RPAREN          reduce using rule 62 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 238

state 226

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 239


state 227

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo . addTypeGlobalFuncion SEMICOLON
    (41) addTypeGlobalFuncion -> .

    SEMICOLON       reduce using rule 41 (addTypeGlobalFuncion -> .)

    addTypeGlobalFuncion           shift and go to state 240

state 228

    (42) idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .

    COLON           reduce using rule 42 (idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .)


state 229

    (44) ambIdVarsFuncion -> COMMA . idVarsFuncion
    (42) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 183

    idVarsFuncion                  shift and go to state 241

state 230

    (99) auxVarcte -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 242


state 231

    (100) auxVarcte -> LBRACKET exp . LBRACKET

    LBRACKET        shift and go to state 243


state 232

    (115) llamada -> CALL COLON ID paso24 cteLlamada . LPAREN RPAREN

    LPAREN          shift and go to state 244


state 233

    (114) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .

    ID              reduce using rule 114 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    IF              reduce using rule 114 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    PRINT           reduce using rule 114 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    WHILE           reduce using rule 114 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    RETURN          reduce using rule 114 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    RBRACE          reduce using rule 114 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)


state 234

    (50) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 . SEMICOLON

    SEMICOLON       shift and go to state 245


state 235

    (72) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .

    ID              reduce using rule 72 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    IF              reduce using rule 72 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    PRINT           reduce using rule 72 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    WHILE           reduce using rule 72 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    RBRACE          reduce using rule 72 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    RETURN          reduce using rule 72 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)


state 236

    (73) auxCondicion -> ELSE paso13 . bloque
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 38

    bloque                         shift and go to state 246

state 237

    (60) auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion .

    RPAREN          reduce using rule 60 (auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion .)


state 238

    (61) auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion .

    RPAREN          reduce using rule 61 (auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion .)


state 239

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON . RBRACE

    RBRACE          shift and go to state 247


state 240

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion . SEMICOLON

    SEMICOLON       shift and go to state 248


state 241

    (44) ambIdVarsFuncion -> COMMA idVarsFuncion .

    COLON           reduce using rule 44 (ambIdVarsFuncion -> COMMA idVarsFuncion .)


state 242

    (99) auxVarcte -> LPAREN exp RPAREN .

    MULTI           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    GTHAN           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    LTHAN           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    GETHAN          reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    LETHAN          reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    AND             reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    OR              reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    LBRACKET        reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)


state 243

    (100) auxVarcte -> LBRACKET exp LBRACKET .

    MULTI           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    DIVIDE          reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    PLUS            reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    MINUS           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    COMMA           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    RPAREN          reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    GTHAN           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    LTHAN           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    NOTEQUAL        reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    GETHAN          reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    LETHAN          reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    EQUAL           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    AND             reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    OR              reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    RBRACKET        reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    SEMICOLON       reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    LBRACKET        reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)


state 244

    (115) llamada -> CALL COLON ID paso24 cteLlamada LPAREN . RPAREN

    RPAREN          shift and go to state 249


state 245

    (50) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .

    ID              reduce using rule 50 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    IF              reduce using rule 50 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    PRINT           reduce using rule 50 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    WHILE           reduce using rule 50 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    RETURN          reduce using rule 50 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    RBRACE          reduce using rule 50 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)


state 246

    (73) auxCondicion -> ELSE paso13 bloque .

    ID              reduce using rule 73 (auxCondicion -> ELSE paso13 bloque .)
    IF              reduce using rule 73 (auxCondicion -> ELSE paso13 bloque .)
    PRINT           reduce using rule 73 (auxCondicion -> ELSE paso13 bloque .)
    WHILE           reduce using rule 73 (auxCondicion -> ELSE paso13 bloque .)
    RBRACE          reduce using rule 73 (auxCondicion -> ELSE paso13 bloque .)
    RETURN          reduce using rule 73 (auxCondicion -> ELSE paso13 bloque .)


state 247

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .

    FUNCTION        reduce using rule 33 (bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .)
    MAIN            reduce using rule 33 (bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .)


state 248

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .

    VAR             reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    ID              reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    IF              reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    PRINT           reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    WHILE           reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    RETURN          reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)


state 249

    (115) llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .

    MULTI           reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    DIVIDE          reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    PLUS            reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    MINUS           reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    COMMA           reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    RPAREN          reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    GTHAN           reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    LTHAN           reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    GETHAN          reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    LETHAN          reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    EQUAL           reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    AND             reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    OR              reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    RBRACKET        reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    SEMICOLON       reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)
    LBRACKET        reduce using rule 115 (llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CTESTRING in state 73 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 157 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 196 resolved as shift
