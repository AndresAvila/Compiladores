Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque
Rule 2     addProcedureDir -> <empty>
Rule 3     cicloVars -> vars cicloVars
Rule 4     cicloVars -> <empty>
Rule 5     vars -> createVariableDir VAR auxVar1
Rule 6     createVariableDir -> <empty>
Rule 7     auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON
Rule 8     addTypeGlobal -> <empty>
Rule 9     idVars -> ID addVariableDir ambIdVars
Rule 10    addVariableDir -> <empty>
Rule 11    ambIdVars -> COMMA idVars
Rule 12    ambIdVars -> <empty>
Rule 13    tipo -> INT ambAuxTipo1
Rule 14    tipo -> BOOL ambAuxTipo1
Rule 15    tipo -> STRING ambAuxTipo1
Rule 16    tipo -> FLOAT ambAuxTipo1
Rule 17    tipo -> CHAR ambAuxTipo1
Rule 18    ambAuxTipo1 -> LBRACKET CTEINT RBRACKET
Rule 19    ambAuxTipo1 -> <empty>
Rule 20    cicloVarsMain -> varsMain cicloVarsMain
Rule 21    cicloVarsMain -> <empty>
Rule 22    varsMain -> createVariableDirMain VAR auxVar1Main
Rule 23    createVariableDirMain -> <empty>
Rule 24    auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON
Rule 25    addTypeGlobalMain -> <empty>
Rule 26    idVarsMain -> ID addVariableDirMain ambIdVarsMain
Rule 27    addVariableDirMain -> <empty>
Rule 28    ambIdVarsMain -> COMMA idVarsMain
Rule 29    ambIdVarsMain -> <empty>
Rule 30    bloque -> LBRACE cicloVarsMain cicloBloque RBRACE
Rule 31    cicloBloque -> estatuto cicloBloque
Rule 32    cicloBloque -> <empty>
Rule 33    bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
Rule 34    cicloBloqueFuncion -> estatuto cicloBloqueFuncion
Rule 35    cicloBloqueFuncion -> <empty>
Rule 36    cicloVarsFuncion -> varsFuncion cicloVarsFuncion
Rule 37    cicloVarsFuncion -> <empty>
Rule 38    varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion
Rule 39    createVariableDirFuncion -> <empty>
Rule 40    auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON
Rule 41    addTypeGlobalFuncion -> <empty>
Rule 42    idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion
Rule 43    addVariableDirFuncion -> <empty>
Rule 44    ambIdVarsFuncion -> COMMA idVarsFuncion
Rule 45    ambIdVarsFuncion -> <empty>
Rule 46    estatuto -> asignacion
Rule 47    estatuto -> condicion
Rule 48    estatuto -> escritura
Rule 49    estatuto -> lectura
Rule 50    estatuto -> llamada
Rule 51    estatuto -> ciclo
Rule 52    asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
Rule 53    auxAsignacion1 -> LBRACKET exp RBRACKET
Rule 54    auxAsignacion1 -> <empty>
Rule 55    escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
Rule 56    auxEscritura1 -> auxEscritura2 ambAuxEscritura1
Rule 57    ambAuxEscritura1 -> COMMA auxEscritura1
Rule 58    ambAuxEscritura1 -> <empty>
Rule 59    auxEscritura2 -> exp
Rule 60    auxEscritura2 -> CTESTRING
Rule 61    cicloExpresion -> expresion paso10
Rule 62    auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion
Rule 63    auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion
Rule 64    auxCicloExpresion -> <empty>
Rule 65    expresion -> exp auxExpresion
Rule 66    auxExpresion -> GTHAN mayor exp
Rule 67    auxExpresion -> LTHAN menor exp
Rule 68    auxExpresion -> NOTEQUAL diferente exp
Rule 69    auxExpresion -> GETHAN mayorIg exp
Rule 70    auxExpresion -> LETHAN menorIg exp
Rule 71    auxExpresion -> EQUAL igual exp
Rule 72    auxExpresion -> <empty>
Rule 73    expAndOr -> cicloExpresion auxCicloExpresion
Rule 74    condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
Rule 75    auxCondicion -> ELSE paso13 bloque
Rule 76    auxCondicion -> <empty>
Rule 77    exp -> cicloExp
Rule 78    cicloExp -> termino paso4 ambExp
Rule 79    ambExp -> auxExp cicloExp
Rule 80    ambExp -> <empty>
Rule 81    auxExp -> PLUS paso3_suma
Rule 82    auxExp -> MINUS paso3_resta
Rule 83    termino -> cicloTermino
Rule 84    cicloTermino -> factor paso5 ambCicloTermino
Rule 85    ambCicloTermino -> auxTermino cicloTermino
Rule 86    ambCicloTermino -> <empty>
Rule 87    auxTermino -> MULTI paso2_mult
Rule 88    auxTermino -> DIVIDE paso2_div
Rule 89    factor -> LPAREN paso6 exp RPAREN paso7
Rule 90    factor -> auxFactor varcte
Rule 91    auxFactor -> auxExp
Rule 92    auxFactor -> <empty>
Rule 93    varcte -> ID paso1 addType auxVarcte
Rule 94    varcte -> CTEINT paso1 cteInt
Rule 95    varcte -> CTEFLOAT paso1 cteFloat
Rule 96    varcte -> CTECHAR paso1 cteChar
Rule 97    varcte -> CTEBOOL paso1 cteBool
Rule 98    varcte -> CTESTRING paso1 cteString
Rule 99    addType -> <empty>
Rule 100   auxVarcte -> LPAREN exp RPAREN
Rule 101   auxVarcte -> LBRACKET exp LBRACKET
Rule 102   auxVarcte -> <empty>
Rule 103   cicloFuncion -> funcion cicloFuncion
Rule 104   cicloFuncion -> <empty>
Rule 105   funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc
Rule 106   addProcDirectoryFunc -> <empty>
Rule 107   auxFunction -> parametros
Rule 108   auxFunction -> <empty>
Rule 109   parametros -> auxParametros
Rule 110   auxParametros -> tipo ID addParameters ambAuxParametros
Rule 111   addParameters -> <empty>
Rule 112   ambAuxParametros -> COMMA auxParametros
Rule 113   ambAuxParametros -> <empty>
Rule 114   ciclo -> WHILE LPAREN expAndOr RPAREN bloque
Rule 115   llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON
Rule 116   auxLlamada -> argumentos
Rule 117   auxLlamada -> <empty>
Rule 118   argumentos -> auxArgumentos1
Rule 119   argumentos -> <empty>
Rule 120   auxArgumentos1 -> exp ambAuxArgumentos1
Rule 121   ambAuxArgumentos1 -> COMMA auxArgumentos1
Rule 122   ambAuxArgumentos1 -> <empty>
Rule 123   lectura -> READ LPAREN ID RPAREN SEMICOLON
Rule 124   paso1 -> <empty>
Rule 125   paso2_mult -> <empty>
Rule 126   paso2_div -> <empty>
Rule 127   paso3_suma -> <empty>
Rule 128   paso3_resta -> <empty>
Rule 129   paso4 -> <empty>
Rule 130   paso5 -> <empty>
Rule 131   paso6 -> <empty>
Rule 132   paso7 -> <empty>
Rule 133   paso8_and -> <empty>
Rule 134   paso8_or -> <empty>
Rule 135   paso9 -> <empty>
Rule 136   paso10 -> <empty>
Rule 137   paso11 -> <empty>
Rule 138   paso12 -> <empty>
Rule 139   paso13 -> <empty>
Rule 140   paso14 -> <empty>
Rule 141   cteInt -> <empty>
Rule 142   cteFloat -> <empty>
Rule 143   cteChar -> <empty>
Rule 144   cteBool -> <empty>
Rule 145   cteString -> <empty>
Rule 146   mayor -> <empty>
Rule 147   menor -> <empty>
Rule 148   mayorIg -> <empty>
Rule 149   menorIg -> <empty>
Rule 150   igual -> <empty>
Rule 151   diferente -> <empty>
Rule 152   asig -> <empty>

Terminals, with rules where they appear

AND                  : 62
BOOL                 : 14
CHAR                 : 17
COLON                : 7 24 40
COMMA                : 11 28 44 57 112 121
CTEBOOL              : 97
CTECHAR              : 96
CTEFLOAT             : 95
CTEINT               : 18 94
CTESTRING            : 60 98
DIVIDE               : 88
ELSE                 : 75
EQUAL                : 71
EQUALA               : 52
FLOAT                : 16
FUNCTION             : 105
GETHAN               : 69
GTHAN                : 66
ID                   : 1 9 26 42 52 93 105 110 115 123
IF                   : 74
INT                  : 13
LBRACE               : 30 33
LBRACKET             : 18 53 101 101
LETHAN               : 70
LPAREN               : 55 74 89 100 105 114 115 123
LTHAN                : 67
MAIN                 : 1
MINUS                : 82
MULTI                : 87
NOTEQUAL             : 68
OR                   : 63
PLUS                 : 81
PRINT                : 55
PROGRAM              : 1
RBRACE               : 30 33
RBRACKET             : 18 53
READ                 : 123
RETURN               : 33
RPAREN               : 55 74 89 100 105 114 115 123
SEMICOLON            : 1 7 24 33 40 52 55 115 123
STRING               : 15
VAR                  : 5 22 38
WHILE                : 114
error                : 

Nonterminals, with rules where they appear

addParameters        : 110
addProcDirectoryFunc : 105
addProcedureDir      : 1
addType              : 52 93
addTypeGlobal        : 7
addTypeGlobalFuncion : 40
addTypeGlobalMain    : 24
addVariableDir       : 9
addVariableDirFuncion : 42
addVariableDirMain   : 26
ambAuxArgumentos1    : 120
ambAuxEscritura1     : 56
ambAuxParametros     : 110
ambAuxTipo1          : 13 14 15 16 17
ambCicloTermino      : 84
ambExp               : 78
ambIdVars            : 9
ambIdVarsFuncion     : 42
ambIdVarsMain        : 26
argumentos           : 116
asig                 : 52
asignacion           : 46
auxArgumentos1       : 118 121
auxAsignacion1       : 52
auxCicloExpresion    : 62 63 73
auxCondicion         : 74
auxEscritura1        : 55 57
auxEscritura2        : 56
auxExp               : 79 91
auxExpresion         : 65
auxFactor            : 90
auxFunction          : 105
auxLlamada           : 115
auxParametros        : 109 112
auxTermino           : 85
auxVar1              : 5
auxVar1Funcion       : 38
auxVar1Main          : 22
auxVarcte            : 93
bloque               : 1 74 75 114
bloqueFuncion        : 105
ciclo                : 51
cicloBloque          : 30 31
cicloBloqueFuncion   : 33 34
cicloExp             : 77 79
cicloExpresion       : 62 63 73
cicloFuncion         : 1 103
cicloTermino         : 83 85
cicloVars            : 1 3
cicloVarsFuncion     : 33 36
cicloVarsMain        : 20 30
condicion            : 47
createVariableDir    : 5
createVariableDirFuncion : 38
createVariableDirMain : 22
cteBool              : 97
cteChar              : 96
cteFloat             : 95
cteInt               : 94
cteString            : 98
diferente            : 68
escritura            : 48
estatuto             : 31 34
exp                  : 52 53 59 65 66 67 68 69 70 71 89 100 101 120
expAndOr             : 74 114
expresion            : 33 61
factor               : 84
funcion              : 103
idVars               : 7 11
idVarsFuncion        : 40 44
idVarsMain           : 24 28
igual                : 71
lectura              : 49
llamada              : 50
mayor                : 66
mayorIg              : 69
menor                : 67
menorIg              : 70
parametros           : 107
paso1                : 52 93 94 95 96 97 98
paso10               : 61
paso11               : 52
paso12               : 74
paso13               : 75
paso14               : 74
paso2_div            : 88
paso2_mult           : 87
paso3_resta          : 82
paso3_suma           : 81
paso4                : 78
paso5                : 84
paso6                : 89
paso7                : 89
paso8_and            : 62
paso8_or             : 63
paso9                : 62 63
programa             : 0
termino              : 78
tipo                 : 7 24 40 105 110
varcte               : 90
vars                 : 3
varsFuncion          : 36
varsMain             : 20

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque
    (2) addProcedureDir -> .

    SEMICOLON       reduce using rule 2 (addProcedureDir -> .)

    addProcedureDir                shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProcedureDir . SEMICOLON cicloVars cicloFuncion MAIN bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON . cicloVars cicloFuncion MAIN bloque
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    vars                           shift and go to state 6
    cicloVars                      shift and go to state 7
    createVariableDir              shift and go to state 8

state 6

    (3) cicloVars -> vars . cicloVars
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    createVariableDir              shift and go to state 8
    cicloVars                      shift and go to state 9
    vars                           shift and go to state 6

state 7

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars . cicloFuncion MAIN bloque
    (103) cicloFuncion -> . funcion cicloFuncion
    (104) cicloFuncion -> .
    (105) funcion -> . FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    MAIN            reduce using rule 104 (cicloFuncion -> .)
    FUNCTION        shift and go to state 10

    cicloFuncion                   shift and go to state 11
    funcion                        shift and go to state 12

state 8

    (5) vars -> createVariableDir . VAR auxVar1

    VAR             shift and go to state 13


state 9

    (3) cicloVars -> vars cicloVars .

    FUNCTION        reduce using rule 3 (cicloVars -> vars cicloVars .)
    MAIN            reduce using rule 3 (cicloVars -> vars cicloVars .)


state 10

    (105) funcion -> FUNCTION . tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 15

state 11

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion . MAIN bloque

    MAIN            shift and go to state 20


state 12

    (103) cicloFuncion -> funcion . cicloFuncion
    (103) cicloFuncion -> . funcion cicloFuncion
    (104) cicloFuncion -> .
    (105) funcion -> . FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    MAIN            reduce using rule 104 (cicloFuncion -> .)
    FUNCTION        shift and go to state 10

    cicloFuncion                   shift and go to state 21
    funcion                        shift and go to state 12

state 13

    (5) vars -> createVariableDir VAR . auxVar1
    (7) auxVar1 -> . idVars COLON tipo addTypeGlobal SEMICOLON
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 24

    idVars                         shift and go to state 22
    auxVar1                        shift and go to state 23

state 14

    (15) tipo -> STRING . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 26

state 15

    (105) funcion -> FUNCTION tipo . ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    ID              shift and go to state 27


state 16

    (13) tipo -> INT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 28

state 17

    (16) tipo -> FLOAT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 29

state 18

    (17) tipo -> CHAR . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 30

state 19

    (14) tipo -> BOOL . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 31

state 20

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN . bloque
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 33

state 21

    (103) cicloFuncion -> funcion cicloFuncion .

    MAIN            reduce using rule 103 (cicloFuncion -> funcion cicloFuncion .)


state 22

    (7) auxVar1 -> idVars . COLON tipo addTypeGlobal SEMICOLON

    COLON           shift and go to state 34


state 23

    (5) vars -> createVariableDir VAR auxVar1 .

    VAR             reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    FUNCTION        reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    MAIN            reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)


state 24

    (9) idVars -> ID . addVariableDir ambIdVars
    (10) addVariableDir -> .

    COMMA           reduce using rule 10 (addVariableDir -> .)
    COLON           reduce using rule 10 (addVariableDir -> .)

    addVariableDir                 shift and go to state 35

state 25

    (18) ambAuxTipo1 -> LBRACKET . CTEINT RBRACKET

    CTEINT          shift and go to state 36


state 26

    (15) tipo -> STRING ambAuxTipo1 .

    SEMICOLON       reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)
    ID              reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)


state 27

    (105) funcion -> FUNCTION tipo ID . LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    LPAREN          shift and go to state 37


state 28

    (13) tipo -> INT ambAuxTipo1 .

    SEMICOLON       reduce using rule 13 (tipo -> INT ambAuxTipo1 .)
    ID              reduce using rule 13 (tipo -> INT ambAuxTipo1 .)


state 29

    (16) tipo -> FLOAT ambAuxTipo1 .

    SEMICOLON       reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)
    ID              reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)


state 30

    (17) tipo -> CHAR ambAuxTipo1 .

    SEMICOLON       reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)
    ID              reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)


state 31

    (14) tipo -> BOOL ambAuxTipo1 .

    SEMICOLON       reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)
    ID              reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)


state 32

    (30) bloque -> LBRACE . cicloVarsMain cicloBloque RBRACE
    (20) cicloVarsMain -> . varsMain cicloVarsMain
    (21) cicloVarsMain -> .
    (22) varsMain -> . createVariableDirMain VAR auxVar1Main
    (23) createVariableDirMain -> .

    ID              reduce using rule 21 (cicloVarsMain -> .)
    IF              reduce using rule 21 (cicloVarsMain -> .)
    PRINT           reduce using rule 21 (cicloVarsMain -> .)
    READ            reduce using rule 21 (cicloVarsMain -> .)
    WHILE           reduce using rule 21 (cicloVarsMain -> .)
    RBRACE          reduce using rule 21 (cicloVarsMain -> .)
    VAR             reduce using rule 23 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 39
    createVariableDirMain          shift and go to state 38
    varsMain                       shift and go to state 40

state 33

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque .)


state 34

    (7) auxVar1 -> idVars COLON . tipo addTypeGlobal SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 41

state 35

    (9) idVars -> ID addVariableDir . ambIdVars
    (11) ambIdVars -> . COMMA idVars
    (12) ambIdVars -> .

    COMMA           shift and go to state 43
    COLON           reduce using rule 12 (ambIdVars -> .)

    ambIdVars                      shift and go to state 42

state 36

    (18) ambAuxTipo1 -> LBRACKET CTEINT . RBRACKET

    RBRACKET        shift and go to state 44


state 37

    (105) funcion -> FUNCTION tipo ID LPAREN . auxFunction RPAREN bloqueFuncion addProcDirectoryFunc
    (107) auxFunction -> . parametros
    (108) auxFunction -> .
    (109) parametros -> . auxParametros
    (110) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    RPAREN          reduce using rule 108 (auxFunction -> .)
    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 45
    auxFunction                    shift and go to state 46
    auxParametros                  shift and go to state 47
    parametros                     shift and go to state 48

state 38

    (22) varsMain -> createVariableDirMain . VAR auxVar1Main

    VAR             shift and go to state 49


state 39

    (30) bloque -> LBRACE cicloVarsMain . cicloBloque RBRACE
    (31) cicloBloque -> . estatuto cicloBloque
    (32) cicloBloque -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . lectura
    (50) estatuto -> . llamada
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (74) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (123) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (115) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (114) ciclo -> . WHILE LPAREN expAndOr RPAREN bloque

    RBRACE          reduce using rule 32 (cicloBloque -> .)
    ID              shift and go to state 60
    IF              shift and go to state 57
    PRINT           shift and go to state 51
    READ            shift and go to state 50
    WHILE           shift and go to state 52

    estatuto                       shift and go to state 54
    llamada                        shift and go to state 55
    condicion                      shift and go to state 56
    lectura                        shift and go to state 58
    cicloBloque                    shift and go to state 59
    ciclo                          shift and go to state 53
    asignacion                     shift and go to state 61
    escritura                      shift and go to state 62

state 40

    (20) cicloVarsMain -> varsMain . cicloVarsMain
    (20) cicloVarsMain -> . varsMain cicloVarsMain
    (21) cicloVarsMain -> .
    (22) varsMain -> . createVariableDirMain VAR auxVar1Main
    (23) createVariableDirMain -> .

    ID              reduce using rule 21 (cicloVarsMain -> .)
    IF              reduce using rule 21 (cicloVarsMain -> .)
    PRINT           reduce using rule 21 (cicloVarsMain -> .)
    READ            reduce using rule 21 (cicloVarsMain -> .)
    WHILE           reduce using rule 21 (cicloVarsMain -> .)
    RBRACE          reduce using rule 21 (cicloVarsMain -> .)
    VAR             reduce using rule 23 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 63
    createVariableDirMain          shift and go to state 38
    varsMain                       shift and go to state 40

state 41

    (7) auxVar1 -> idVars COLON tipo . addTypeGlobal SEMICOLON
    (8) addTypeGlobal -> .

    SEMICOLON       reduce using rule 8 (addTypeGlobal -> .)

    addTypeGlobal                  shift and go to state 64

state 42

    (9) idVars -> ID addVariableDir ambIdVars .

    COLON           reduce using rule 9 (idVars -> ID addVariableDir ambIdVars .)


state 43

    (11) ambIdVars -> COMMA . idVars
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 24

    idVars                         shift and go to state 65

state 44

    (18) ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .

    ID              reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .)
    SEMICOLON       reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .)


state 45

    (110) auxParametros -> tipo . ID addParameters ambAuxParametros

    ID              shift and go to state 66


state 46

    (105) funcion -> FUNCTION tipo ID LPAREN auxFunction . RPAREN bloqueFuncion addProcDirectoryFunc

    RPAREN          shift and go to state 67


state 47

    (109) parametros -> auxParametros .

    RPAREN          reduce using rule 109 (parametros -> auxParametros .)


state 48

    (107) auxFunction -> parametros .

    RPAREN          reduce using rule 107 (auxFunction -> parametros .)


state 49

    (22) varsMain -> createVariableDirMain VAR . auxVar1Main
    (24) auxVar1Main -> . idVarsMain COLON tipo addTypeGlobalMain SEMICOLON
    (26) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 70

    auxVar1Main                    shift and go to state 68
    idVarsMain                     shift and go to state 69

state 50

    (123) lectura -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 71


state 51

    (55) escritura -> PRINT . LPAREN auxEscritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 72


state 52

    (114) ciclo -> WHILE . LPAREN expAndOr RPAREN bloque

    LPAREN          shift and go to state 73


state 53

    (51) estatuto -> ciclo .

    ID              reduce using rule 51 (estatuto -> ciclo .)
    IF              reduce using rule 51 (estatuto -> ciclo .)
    PRINT           reduce using rule 51 (estatuto -> ciclo .)
    READ            reduce using rule 51 (estatuto -> ciclo .)
    WHILE           reduce using rule 51 (estatuto -> ciclo .)
    RBRACE          reduce using rule 51 (estatuto -> ciclo .)
    RETURN          reduce using rule 51 (estatuto -> ciclo .)


state 54

    (31) cicloBloque -> estatuto . cicloBloque
    (31) cicloBloque -> . estatuto cicloBloque
    (32) cicloBloque -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . lectura
    (50) estatuto -> . llamada
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (74) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (123) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (115) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (114) ciclo -> . WHILE LPAREN expAndOr RPAREN bloque

    RBRACE          reduce using rule 32 (cicloBloque -> .)
    ID              shift and go to state 60
    IF              shift and go to state 57
    PRINT           shift and go to state 51
    READ            shift and go to state 50
    WHILE           shift and go to state 52

    ciclo                          shift and go to state 53
    asignacion                     shift and go to state 61
    estatuto                       shift and go to state 54
    llamada                        shift and go to state 55
    condicion                      shift and go to state 56
    cicloBloque                    shift and go to state 74
    lectura                        shift and go to state 58
    escritura                      shift and go to state 62

state 55

    (50) estatuto -> llamada .

    ID              reduce using rule 50 (estatuto -> llamada .)
    IF              reduce using rule 50 (estatuto -> llamada .)
    PRINT           reduce using rule 50 (estatuto -> llamada .)
    READ            reduce using rule 50 (estatuto -> llamada .)
    WHILE           reduce using rule 50 (estatuto -> llamada .)
    RBRACE          reduce using rule 50 (estatuto -> llamada .)
    RETURN          reduce using rule 50 (estatuto -> llamada .)


state 56

    (47) estatuto -> condicion .

    ID              reduce using rule 47 (estatuto -> condicion .)
    IF              reduce using rule 47 (estatuto -> condicion .)
    PRINT           reduce using rule 47 (estatuto -> condicion .)
    READ            reduce using rule 47 (estatuto -> condicion .)
    WHILE           reduce using rule 47 (estatuto -> condicion .)
    RBRACE          reduce using rule 47 (estatuto -> condicion .)
    RETURN          reduce using rule 47 (estatuto -> condicion .)


state 57

    (74) condicion -> IF . LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14

    LPAREN          shift and go to state 75


state 58

    (49) estatuto -> lectura .

    ID              reduce using rule 49 (estatuto -> lectura .)
    IF              reduce using rule 49 (estatuto -> lectura .)
    PRINT           reduce using rule 49 (estatuto -> lectura .)
    READ            reduce using rule 49 (estatuto -> lectura .)
    WHILE           reduce using rule 49 (estatuto -> lectura .)
    RBRACE          reduce using rule 49 (estatuto -> lectura .)
    RETURN          reduce using rule 49 (estatuto -> lectura .)


state 59

    (30) bloque -> LBRACE cicloVarsMain cicloBloque . RBRACE

    RBRACE          shift and go to state 76


state 60

    (52) asignacion -> ID . paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (115) llamada -> ID . LPAREN auxLlamada RPAREN SEMICOLON
    (124) paso1 -> .

    LPAREN          shift and go to state 77
    LBRACKET        reduce using rule 124 (paso1 -> .)
    EQUALA          reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 78

state 61

    (46) estatuto -> asignacion .

    ID              reduce using rule 46 (estatuto -> asignacion .)
    IF              reduce using rule 46 (estatuto -> asignacion .)
    PRINT           reduce using rule 46 (estatuto -> asignacion .)
    READ            reduce using rule 46 (estatuto -> asignacion .)
    WHILE           reduce using rule 46 (estatuto -> asignacion .)
    RBRACE          reduce using rule 46 (estatuto -> asignacion .)
    RETURN          reduce using rule 46 (estatuto -> asignacion .)


state 62

    (48) estatuto -> escritura .

    ID              reduce using rule 48 (estatuto -> escritura .)
    IF              reduce using rule 48 (estatuto -> escritura .)
    PRINT           reduce using rule 48 (estatuto -> escritura .)
    READ            reduce using rule 48 (estatuto -> escritura .)
    WHILE           reduce using rule 48 (estatuto -> escritura .)
    RBRACE          reduce using rule 48 (estatuto -> escritura .)
    RETURN          reduce using rule 48 (estatuto -> escritura .)


state 63

    (20) cicloVarsMain -> varsMain cicloVarsMain .

    ID              reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    IF              reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    PRINT           reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    READ            reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    WHILE           reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    RBRACE          reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)


state 64

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal . SEMICOLON

    SEMICOLON       shift and go to state 79


state 65

    (11) ambIdVars -> COMMA idVars .

    COLON           reduce using rule 11 (ambIdVars -> COMMA idVars .)


state 66

    (110) auxParametros -> tipo ID . addParameters ambAuxParametros
    (111) addParameters -> .

    COMMA           reduce using rule 111 (addParameters -> .)
    RPAREN          reduce using rule 111 (addParameters -> .)

    addParameters                  shift and go to state 80

state 67

    (105) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN . bloqueFuncion addProcDirectoryFunc
    (33) bloqueFuncion -> . LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE

    LBRACE          shift and go to state 81

    bloqueFuncion                  shift and go to state 82

state 68

    (22) varsMain -> createVariableDirMain VAR auxVar1Main .

    VAR             reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    ID              reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    IF              reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    PRINT           reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    READ            reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    WHILE           reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    RBRACE          reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)


state 69

    (24) auxVar1Main -> idVarsMain . COLON tipo addTypeGlobalMain SEMICOLON

    COLON           shift and go to state 83


state 70

    (26) idVarsMain -> ID . addVariableDirMain ambIdVarsMain
    (27) addVariableDirMain -> .

    COMMA           reduce using rule 27 (addVariableDirMain -> .)
    COLON           reduce using rule 27 (addVariableDirMain -> .)

    addVariableDirMain             shift and go to state 84

state 71

    (123) lectura -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 85


state 72

    (55) escritura -> PRINT LPAREN . auxEscritura1 RPAREN SEMICOLON
    (56) auxEscritura1 -> . auxEscritura2 ambAuxEscritura1
    (59) auxEscritura2 -> . exp
    (60) auxEscritura2 -> . CTESTRING
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 86
    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

  ! CTESTRING       [ reduce using rule 92 (auxFactor -> .) ]

    auxExp                         shift and go to state 97
    auxEscritura1                  shift and go to state 93
    auxEscritura2                  shift and go to state 94
    termino                        shift and go to state 87
    exp                            shift and go to state 98
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 73

    (114) ciclo -> WHILE LPAREN . expAndOr RPAREN bloque
    (73) expAndOr -> . cicloExpresion auxCicloExpresion
    (61) cicloExpresion -> . expresion paso10
    (65) expresion -> . exp auxExpresion
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    expAndOr                       shift and go to state 99
    termino                        shift and go to state 87
    cicloExpresion                 shift and go to state 100
    auxExp                         shift and go to state 97
    cicloTermino                   shift and go to state 90
    factor                         shift and go to state 91
    cicloExp                       shift and go to state 92
    auxFactor                      shift and go to state 96
    expresion                      shift and go to state 101
    exp                            shift and go to state 102

state 74

    (31) cicloBloque -> estatuto cicloBloque .

    RBRACE          reduce using rule 31 (cicloBloque -> estatuto cicloBloque .)


state 75

    (74) condicion -> IF LPAREN . expAndOr paso12 RPAREN bloque auxCondicion paso14
    (73) expAndOr -> . cicloExpresion auxCicloExpresion
    (61) cicloExpresion -> . expresion paso10
    (65) expresion -> . exp auxExpresion
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    expAndOr                       shift and go to state 103
    termino                        shift and go to state 87
    cicloExpresion                 shift and go to state 100
    auxExp                         shift and go to state 97
    cicloTermino                   shift and go to state 90
    factor                         shift and go to state 91
    cicloExp                       shift and go to state 92
    auxFactor                      shift and go to state 96
    expresion                      shift and go to state 101
    exp                            shift and go to state 102

state 76

    (30) bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .

    ID              reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    IF              reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    PRINT           reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    READ            reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    WHILE           reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RBRACE          reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RETURN          reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    $end            reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    ELSE            reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)


state 77

    (115) llamada -> ID LPAREN . auxLlamada RPAREN SEMICOLON
    (116) auxLlamada -> . argumentos
    (117) auxLlamada -> .
    (118) argumentos -> . auxArgumentos1
    (119) argumentos -> .
    (120) auxArgumentos1 -> . exp ambAuxArgumentos1
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

  ! reduce/reduce conflict for RPAREN resolved using rule 117 (auxLlamada -> .)
    RPAREN          reduce using rule 117 (auxLlamada -> .)
    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

  ! RPAREN          [ reduce using rule 119 (argumentos -> .) ]

    auxExp                         shift and go to state 97
    auxLlamada                     shift and go to state 105
    termino                        shift and go to state 87
    exp                            shift and go to state 107
    factor                         shift and go to state 91
    argumentos                     shift and go to state 104
    auxFactor                      shift and go to state 96
    auxArgumentos1                 shift and go to state 106
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 78

    (52) asignacion -> ID paso1 . addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (99) addType -> .

    LBRACKET        reduce using rule 99 (addType -> .)
    EQUALA          reduce using rule 99 (addType -> .)

    addType                        shift and go to state 108

state 79

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .

    VAR             reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    FUNCTION        reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    MAIN            reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)


state 80

    (110) auxParametros -> tipo ID addParameters . ambAuxParametros
    (112) ambAuxParametros -> . COMMA auxParametros
    (113) ambAuxParametros -> .

    COMMA           shift and go to state 109
    RPAREN          reduce using rule 113 (ambAuxParametros -> .)

    ambAuxParametros               shift and go to state 110

state 81

    (33) bloqueFuncion -> LBRACE . cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
    (36) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (37) cicloVarsFuncion -> .
    (38) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (39) createVariableDirFuncion -> .

    ID              reduce using rule 37 (cicloVarsFuncion -> .)
    IF              reduce using rule 37 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 37 (cicloVarsFuncion -> .)
    READ            reduce using rule 37 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 37 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 37 (cicloVarsFuncion -> .)
    VAR             reduce using rule 39 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 111
    cicloVarsFuncion               shift and go to state 112
    createVariableDirFuncion       shift and go to state 113

state 82

    (105) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion . addProcDirectoryFunc
    (106) addProcDirectoryFunc -> .

    FUNCTION        reduce using rule 106 (addProcDirectoryFunc -> .)
    MAIN            reduce using rule 106 (addProcDirectoryFunc -> .)

    addProcDirectoryFunc           shift and go to state 114

state 83

    (24) auxVar1Main -> idVarsMain COLON . tipo addTypeGlobalMain SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 115

state 84

    (26) idVarsMain -> ID addVariableDirMain . ambIdVarsMain
    (28) ambIdVarsMain -> . COMMA idVarsMain
    (29) ambIdVarsMain -> .

    COMMA           shift and go to state 117
    COLON           reduce using rule 29 (ambIdVarsMain -> .)

    ambIdVarsMain                  shift and go to state 116

state 85

    (123) lectura -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 118


state 86

    (60) auxEscritura2 -> CTESTRING .

    COMMA           reduce using rule 60 (auxEscritura2 -> CTESTRING .)
    RPAREN          reduce using rule 60 (auxEscritura2 -> CTESTRING .)


state 87

    (78) cicloExp -> termino . paso4 ambExp
    (129) paso4 -> .

    PLUS            reduce using rule 129 (paso4 -> .)
    MINUS           reduce using rule 129 (paso4 -> .)
    COMMA           reduce using rule 129 (paso4 -> .)
    RPAREN          reduce using rule 129 (paso4 -> .)
    GTHAN           reduce using rule 129 (paso4 -> .)
    LTHAN           reduce using rule 129 (paso4 -> .)
    NOTEQUAL        reduce using rule 129 (paso4 -> .)
    GETHAN          reduce using rule 129 (paso4 -> .)
    LETHAN          reduce using rule 129 (paso4 -> .)
    EQUAL           reduce using rule 129 (paso4 -> .)
    AND             reduce using rule 129 (paso4 -> .)
    OR              reduce using rule 129 (paso4 -> .)
    RBRACKET        reduce using rule 129 (paso4 -> .)
    SEMICOLON       reduce using rule 129 (paso4 -> .)
    LBRACKET        reduce using rule 129 (paso4 -> .)

    paso4                          shift and go to state 119

state 88

    (82) auxExp -> MINUS . paso3_resta
    (128) paso3_resta -> .

    ID              reduce using rule 128 (paso3_resta -> .)
    CTEINT          reduce using rule 128 (paso3_resta -> .)
    CTEFLOAT        reduce using rule 128 (paso3_resta -> .)
    CTECHAR         reduce using rule 128 (paso3_resta -> .)
    CTEBOOL         reduce using rule 128 (paso3_resta -> .)
    CTESTRING       reduce using rule 128 (paso3_resta -> .)
    LPAREN          reduce using rule 128 (paso3_resta -> .)
    PLUS            reduce using rule 128 (paso3_resta -> .)
    MINUS           reduce using rule 128 (paso3_resta -> .)

    paso3_resta                    shift and go to state 120

state 89

    (81) auxExp -> PLUS . paso3_suma
    (127) paso3_suma -> .

    ID              reduce using rule 127 (paso3_suma -> .)
    CTEINT          reduce using rule 127 (paso3_suma -> .)
    CTEFLOAT        reduce using rule 127 (paso3_suma -> .)
    CTECHAR         reduce using rule 127 (paso3_suma -> .)
    CTEBOOL         reduce using rule 127 (paso3_suma -> .)
    CTESTRING       reduce using rule 127 (paso3_suma -> .)
    LPAREN          reduce using rule 127 (paso3_suma -> .)
    PLUS            reduce using rule 127 (paso3_suma -> .)
    MINUS           reduce using rule 127 (paso3_suma -> .)

    paso3_suma                     shift and go to state 121

state 90

    (83) termino -> cicloTermino .

    PLUS            reduce using rule 83 (termino -> cicloTermino .)
    MINUS           reduce using rule 83 (termino -> cicloTermino .)
    AND             reduce using rule 83 (termino -> cicloTermino .)
    OR              reduce using rule 83 (termino -> cicloTermino .)
    RPAREN          reduce using rule 83 (termino -> cicloTermino .)
    SEMICOLON       reduce using rule 83 (termino -> cicloTermino .)
    LBRACKET        reduce using rule 83 (termino -> cicloTermino .)
    COMMA           reduce using rule 83 (termino -> cicloTermino .)
    GTHAN           reduce using rule 83 (termino -> cicloTermino .)
    LTHAN           reduce using rule 83 (termino -> cicloTermino .)
    NOTEQUAL        reduce using rule 83 (termino -> cicloTermino .)
    GETHAN          reduce using rule 83 (termino -> cicloTermino .)
    LETHAN          reduce using rule 83 (termino -> cicloTermino .)
    EQUAL           reduce using rule 83 (termino -> cicloTermino .)
    RBRACKET        reduce using rule 83 (termino -> cicloTermino .)


state 91

    (84) cicloTermino -> factor . paso5 ambCicloTermino
    (130) paso5 -> .

    MULTI           reduce using rule 130 (paso5 -> .)
    DIVIDE          reduce using rule 130 (paso5 -> .)
    PLUS            reduce using rule 130 (paso5 -> .)
    MINUS           reduce using rule 130 (paso5 -> .)
    COMMA           reduce using rule 130 (paso5 -> .)
    RPAREN          reduce using rule 130 (paso5 -> .)
    GTHAN           reduce using rule 130 (paso5 -> .)
    LTHAN           reduce using rule 130 (paso5 -> .)
    NOTEQUAL        reduce using rule 130 (paso5 -> .)
    GETHAN          reduce using rule 130 (paso5 -> .)
    LETHAN          reduce using rule 130 (paso5 -> .)
    EQUAL           reduce using rule 130 (paso5 -> .)
    AND             reduce using rule 130 (paso5 -> .)
    OR              reduce using rule 130 (paso5 -> .)
    RBRACKET        reduce using rule 130 (paso5 -> .)
    SEMICOLON       reduce using rule 130 (paso5 -> .)
    LBRACKET        reduce using rule 130 (paso5 -> .)

    paso5                          shift and go to state 122

state 92

    (77) exp -> cicloExp .

    COMMA           reduce using rule 77 (exp -> cicloExp .)
    RPAREN          reduce using rule 77 (exp -> cicloExp .)
    AND             reduce using rule 77 (exp -> cicloExp .)
    OR              reduce using rule 77 (exp -> cicloExp .)
    SEMICOLON       reduce using rule 77 (exp -> cicloExp .)
    GTHAN           reduce using rule 77 (exp -> cicloExp .)
    LTHAN           reduce using rule 77 (exp -> cicloExp .)
    NOTEQUAL        reduce using rule 77 (exp -> cicloExp .)
    GETHAN          reduce using rule 77 (exp -> cicloExp .)
    LETHAN          reduce using rule 77 (exp -> cicloExp .)
    EQUAL           reduce using rule 77 (exp -> cicloExp .)
    RBRACKET        reduce using rule 77 (exp -> cicloExp .)
    LBRACKET        reduce using rule 77 (exp -> cicloExp .)


state 93

    (55) escritura -> PRINT LPAREN auxEscritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 123


state 94

    (56) auxEscritura1 -> auxEscritura2 . ambAuxEscritura1
    (57) ambAuxEscritura1 -> . COMMA auxEscritura1
    (58) ambAuxEscritura1 -> .

    COMMA           shift and go to state 124
    RPAREN          reduce using rule 58 (ambAuxEscritura1 -> .)

    ambAuxEscritura1               shift and go to state 125

state 95

    (89) factor -> LPAREN . paso6 exp RPAREN paso7
    (131) paso6 -> .

    LPAREN          reduce using rule 131 (paso6 -> .)
    PLUS            reduce using rule 131 (paso6 -> .)
    MINUS           reduce using rule 131 (paso6 -> .)
    ID              reduce using rule 131 (paso6 -> .)
    CTEINT          reduce using rule 131 (paso6 -> .)
    CTEFLOAT        reduce using rule 131 (paso6 -> .)
    CTECHAR         reduce using rule 131 (paso6 -> .)
    CTEBOOL         reduce using rule 131 (paso6 -> .)
    CTESTRING       reduce using rule 131 (paso6 -> .)

    paso6                          shift and go to state 126

state 96

    (90) factor -> auxFactor . varcte
    (93) varcte -> . ID paso1 addType auxVarcte
    (94) varcte -> . CTEINT paso1 cteInt
    (95) varcte -> . CTEFLOAT paso1 cteFloat
    (96) varcte -> . CTECHAR paso1 cteChar
    (97) varcte -> . CTEBOOL paso1 cteBool
    (98) varcte -> . CTESTRING paso1 cteString

    ID              shift and go to state 133
    CTEINT          shift and go to state 130
    CTEFLOAT        shift and go to state 131
    CTECHAR         shift and go to state 132
    CTEBOOL         shift and go to state 129
    CTESTRING       shift and go to state 127

    varcte                         shift and go to state 128

state 97

    (91) auxFactor -> auxExp .

    ID              reduce using rule 91 (auxFactor -> auxExp .)
    CTEINT          reduce using rule 91 (auxFactor -> auxExp .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> auxExp .)
    CTECHAR         reduce using rule 91 (auxFactor -> auxExp .)
    CTEBOOL         reduce using rule 91 (auxFactor -> auxExp .)
    CTESTRING       reduce using rule 91 (auxFactor -> auxExp .)


state 98

    (59) auxEscritura2 -> exp .

    COMMA           reduce using rule 59 (auxEscritura2 -> exp .)
    RPAREN          reduce using rule 59 (auxEscritura2 -> exp .)


state 99

    (114) ciclo -> WHILE LPAREN expAndOr . RPAREN bloque

    RPAREN          shift and go to state 134


state 100

    (73) expAndOr -> cicloExpresion . auxCicloExpresion
    (62) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (63) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (64) auxCicloExpresion -> .

    AND             shift and go to state 135
    OR              shift and go to state 137
    RPAREN          reduce using rule 64 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 136

state 101

    (61) cicloExpresion -> expresion . paso10
    (136) paso10 -> .

    AND             reduce using rule 136 (paso10 -> .)
    OR              reduce using rule 136 (paso10 -> .)
    RPAREN          reduce using rule 136 (paso10 -> .)

    paso10                         shift and go to state 138

state 102

    (65) expresion -> exp . auxExpresion
    (66) auxExpresion -> . GTHAN mayor exp
    (67) auxExpresion -> . LTHAN menor exp
    (68) auxExpresion -> . NOTEQUAL diferente exp
    (69) auxExpresion -> . GETHAN mayorIg exp
    (70) auxExpresion -> . LETHAN menorIg exp
    (71) auxExpresion -> . EQUAL igual exp
    (72) auxExpresion -> .

    GTHAN           shift and go to state 141
    LTHAN           shift and go to state 144
    NOTEQUAL        shift and go to state 139
    GETHAN          shift and go to state 143
    LETHAN          shift and go to state 145
    EQUAL           shift and go to state 142
    AND             reduce using rule 72 (auxExpresion -> .)
    OR              reduce using rule 72 (auxExpresion -> .)
    RPAREN          reduce using rule 72 (auxExpresion -> .)
    SEMICOLON       reduce using rule 72 (auxExpresion -> .)

    auxExpresion                   shift and go to state 140

state 103

    (74) condicion -> IF LPAREN expAndOr . paso12 RPAREN bloque auxCondicion paso14
    (138) paso12 -> .

    RPAREN          reduce using rule 138 (paso12 -> .)

    paso12                         shift and go to state 146

state 104

    (116) auxLlamada -> argumentos .

    RPAREN          reduce using rule 116 (auxLlamada -> argumentos .)


state 105

    (115) llamada -> ID LPAREN auxLlamada . RPAREN SEMICOLON

    RPAREN          shift and go to state 147


state 106

    (118) argumentos -> auxArgumentos1 .

    RPAREN          reduce using rule 118 (argumentos -> auxArgumentos1 .)


state 107

    (120) auxArgumentos1 -> exp . ambAuxArgumentos1
    (121) ambAuxArgumentos1 -> . COMMA auxArgumentos1
    (122) ambAuxArgumentos1 -> .

    COMMA           shift and go to state 149
    RPAREN          reduce using rule 122 (ambAuxArgumentos1 -> .)

    ambAuxArgumentos1              shift and go to state 148

state 108

    (52) asignacion -> ID paso1 addType . auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (53) auxAsignacion1 -> . LBRACKET exp RBRACKET
    (54) auxAsignacion1 -> .

    LBRACKET        shift and go to state 151
    EQUALA          reduce using rule 54 (auxAsignacion1 -> .)

    auxAsignacion1                 shift and go to state 150

state 109

    (112) ambAuxParametros -> COMMA . auxParametros
    (110) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 45
    auxParametros                  shift and go to state 152

state 110

    (110) auxParametros -> tipo ID addParameters ambAuxParametros .

    RPAREN          reduce using rule 110 (auxParametros -> tipo ID addParameters ambAuxParametros .)


state 111

    (36) cicloVarsFuncion -> varsFuncion . cicloVarsFuncion
    (36) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (37) cicloVarsFuncion -> .
    (38) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (39) createVariableDirFuncion -> .

    ID              reduce using rule 37 (cicloVarsFuncion -> .)
    IF              reduce using rule 37 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 37 (cicloVarsFuncion -> .)
    READ            reduce using rule 37 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 37 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 37 (cicloVarsFuncion -> .)
    VAR             reduce using rule 39 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 111
    cicloVarsFuncion               shift and go to state 153
    createVariableDirFuncion       shift and go to state 113

state 112

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion . cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
    (34) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (35) cicloBloqueFuncion -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . lectura
    (50) estatuto -> . llamada
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (74) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (123) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (115) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (114) ciclo -> . WHILE LPAREN expAndOr RPAREN bloque

    RETURN          reduce using rule 35 (cicloBloqueFuncion -> .)
    ID              shift and go to state 60
    IF              shift and go to state 57
    PRINT           shift and go to state 51
    READ            shift and go to state 50
    WHILE           shift and go to state 52

    estatuto                       shift and go to state 154
    llamada                        shift and go to state 55
    condicion                      shift and go to state 56
    cicloBloqueFuncion             shift and go to state 155
    lectura                        shift and go to state 58
    ciclo                          shift and go to state 53
    asignacion                     shift and go to state 61
    escritura                      shift and go to state 62

state 113

    (38) varsFuncion -> createVariableDirFuncion . VAR auxVar1Funcion

    VAR             shift and go to state 156


state 114

    (105) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc .

    FUNCTION        reduce using rule 105 (funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc .)
    MAIN            reduce using rule 105 (funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc .)


state 115

    (24) auxVar1Main -> idVarsMain COLON tipo . addTypeGlobalMain SEMICOLON
    (25) addTypeGlobalMain -> .

    SEMICOLON       reduce using rule 25 (addTypeGlobalMain -> .)

    addTypeGlobalMain              shift and go to state 157

state 116

    (26) idVarsMain -> ID addVariableDirMain ambIdVarsMain .

    COLON           reduce using rule 26 (idVarsMain -> ID addVariableDirMain ambIdVarsMain .)


state 117

    (28) ambIdVarsMain -> COMMA . idVarsMain
    (26) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 70

    idVarsMain                     shift and go to state 158

state 118

    (123) lectura -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 159


state 119

    (78) cicloExp -> termino paso4 . ambExp
    (79) ambExp -> . auxExp cicloExp
    (80) ambExp -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    COMMA           reduce using rule 80 (ambExp -> .)
    RPAREN          reduce using rule 80 (ambExp -> .)
    GTHAN           reduce using rule 80 (ambExp -> .)
    LTHAN           reduce using rule 80 (ambExp -> .)
    NOTEQUAL        reduce using rule 80 (ambExp -> .)
    GETHAN          reduce using rule 80 (ambExp -> .)
    LETHAN          reduce using rule 80 (ambExp -> .)
    EQUAL           reduce using rule 80 (ambExp -> .)
    AND             reduce using rule 80 (ambExp -> .)
    OR              reduce using rule 80 (ambExp -> .)
    RBRACKET        reduce using rule 80 (ambExp -> .)
    SEMICOLON       reduce using rule 80 (ambExp -> .)
    LBRACKET        reduce using rule 80 (ambExp -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 160
    ambExp                         shift and go to state 161

state 120

    (82) auxExp -> MINUS paso3_resta .

    ID              reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CTEINT          reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CTEFLOAT        reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CTECHAR         reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CTEBOOL         reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    CTESTRING       reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    LPAREN          reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    PLUS            reduce using rule 82 (auxExp -> MINUS paso3_resta .)
    MINUS           reduce using rule 82 (auxExp -> MINUS paso3_resta .)


state 121

    (81) auxExp -> PLUS paso3_suma .

    ID              reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CTEINT          reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CTEFLOAT        reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CTECHAR         reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CTEBOOL         reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    CTESTRING       reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    LPAREN          reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    PLUS            reduce using rule 81 (auxExp -> PLUS paso3_suma .)
    MINUS           reduce using rule 81 (auxExp -> PLUS paso3_suma .)


state 122

    (84) cicloTermino -> factor paso5 . ambCicloTermino
    (85) ambCicloTermino -> . auxTermino cicloTermino
    (86) ambCicloTermino -> .
    (87) auxTermino -> . MULTI paso2_mult
    (88) auxTermino -> . DIVIDE paso2_div

    PLUS            reduce using rule 86 (ambCicloTermino -> .)
    MINUS           reduce using rule 86 (ambCicloTermino -> .)
    COMMA           reduce using rule 86 (ambCicloTermino -> .)
    RPAREN          reduce using rule 86 (ambCicloTermino -> .)
    GTHAN           reduce using rule 86 (ambCicloTermino -> .)
    LTHAN           reduce using rule 86 (ambCicloTermino -> .)
    NOTEQUAL        reduce using rule 86 (ambCicloTermino -> .)
    GETHAN          reduce using rule 86 (ambCicloTermino -> .)
    LETHAN          reduce using rule 86 (ambCicloTermino -> .)
    EQUAL           reduce using rule 86 (ambCicloTermino -> .)
    AND             reduce using rule 86 (ambCicloTermino -> .)
    OR              reduce using rule 86 (ambCicloTermino -> .)
    RBRACKET        reduce using rule 86 (ambCicloTermino -> .)
    SEMICOLON       reduce using rule 86 (ambCicloTermino -> .)
    LBRACKET        reduce using rule 86 (ambCicloTermino -> .)
    MULTI           shift and go to state 162
    DIVIDE          shift and go to state 165

    ambCicloTermino                shift and go to state 163
    auxTermino                     shift and go to state 164

state 123

    (55) escritura -> PRINT LPAREN auxEscritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 166


state 124

    (57) ambAuxEscritura1 -> COMMA . auxEscritura1
    (56) auxEscritura1 -> . auxEscritura2 ambAuxEscritura1
    (59) auxEscritura2 -> . exp
    (60) auxEscritura2 -> . CTESTRING
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 86
    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

  ! CTESTRING       [ reduce using rule 92 (auxFactor -> .) ]

    auxExp                         shift and go to state 97
    auxEscritura1                  shift and go to state 167
    auxEscritura2                  shift and go to state 94
    termino                        shift and go to state 87
    exp                            shift and go to state 98
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 125

    (56) auxEscritura1 -> auxEscritura2 ambAuxEscritura1 .

    RPAREN          reduce using rule 56 (auxEscritura1 -> auxEscritura2 ambAuxEscritura1 .)


state 126

    (89) factor -> LPAREN paso6 . exp RPAREN paso7
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    termino                        shift and go to state 87
    exp                            shift and go to state 168
    factor                         shift and go to state 91
    cicloTermino                   shift and go to state 90
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92

state 127

    (98) varcte -> CTESTRING . paso1 cteString
    (124) paso1 -> .

    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 169

state 128

    (90) factor -> auxFactor varcte .

    MULTI           reduce using rule 90 (factor -> auxFactor varcte .)
    DIVIDE          reduce using rule 90 (factor -> auxFactor varcte .)
    PLUS            reduce using rule 90 (factor -> auxFactor varcte .)
    MINUS           reduce using rule 90 (factor -> auxFactor varcte .)
    AND             reduce using rule 90 (factor -> auxFactor varcte .)
    OR              reduce using rule 90 (factor -> auxFactor varcte .)
    RPAREN          reduce using rule 90 (factor -> auxFactor varcte .)
    SEMICOLON       reduce using rule 90 (factor -> auxFactor varcte .)
    COMMA           reduce using rule 90 (factor -> auxFactor varcte .)
    LBRACKET        reduce using rule 90 (factor -> auxFactor varcte .)
    GTHAN           reduce using rule 90 (factor -> auxFactor varcte .)
    LTHAN           reduce using rule 90 (factor -> auxFactor varcte .)
    NOTEQUAL        reduce using rule 90 (factor -> auxFactor varcte .)
    GETHAN          reduce using rule 90 (factor -> auxFactor varcte .)
    LETHAN          reduce using rule 90 (factor -> auxFactor varcte .)
    EQUAL           reduce using rule 90 (factor -> auxFactor varcte .)
    RBRACKET        reduce using rule 90 (factor -> auxFactor varcte .)


state 129

    (97) varcte -> CTEBOOL . paso1 cteBool
    (124) paso1 -> .

    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 170

state 130

    (94) varcte -> CTEINT . paso1 cteInt
    (124) paso1 -> .

    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 171

state 131

    (95) varcte -> CTEFLOAT . paso1 cteFloat
    (124) paso1 -> .

    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 172

state 132

    (96) varcte -> CTECHAR . paso1 cteChar
    (124) paso1 -> .

    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 173

state 133

    (93) varcte -> ID . paso1 addType auxVarcte
    (124) paso1 -> .

    LPAREN          reduce using rule 124 (paso1 -> .)
    LBRACKET        reduce using rule 124 (paso1 -> .)
    MULTI           reduce using rule 124 (paso1 -> .)
    DIVIDE          reduce using rule 124 (paso1 -> .)
    PLUS            reduce using rule 124 (paso1 -> .)
    MINUS           reduce using rule 124 (paso1 -> .)
    COMMA           reduce using rule 124 (paso1 -> .)
    RPAREN          reduce using rule 124 (paso1 -> .)
    GTHAN           reduce using rule 124 (paso1 -> .)
    LTHAN           reduce using rule 124 (paso1 -> .)
    NOTEQUAL        reduce using rule 124 (paso1 -> .)
    GETHAN          reduce using rule 124 (paso1 -> .)
    LETHAN          reduce using rule 124 (paso1 -> .)
    EQUAL           reduce using rule 124 (paso1 -> .)
    AND             reduce using rule 124 (paso1 -> .)
    OR              reduce using rule 124 (paso1 -> .)
    RBRACKET        reduce using rule 124 (paso1 -> .)
    SEMICOLON       reduce using rule 124 (paso1 -> .)

    paso1                          shift and go to state 174

state 134

    (114) ciclo -> WHILE LPAREN expAndOr RPAREN . bloque
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 175

state 135

    (62) auxCicloExpresion -> AND . paso8_and cicloExpresion paso9 auxCicloExpresion
    (133) paso8_and -> .

    LPAREN          reduce using rule 133 (paso8_and -> .)
    PLUS            reduce using rule 133 (paso8_and -> .)
    MINUS           reduce using rule 133 (paso8_and -> .)
    ID              reduce using rule 133 (paso8_and -> .)
    CTEINT          reduce using rule 133 (paso8_and -> .)
    CTEFLOAT        reduce using rule 133 (paso8_and -> .)
    CTECHAR         reduce using rule 133 (paso8_and -> .)
    CTEBOOL         reduce using rule 133 (paso8_and -> .)
    CTESTRING       reduce using rule 133 (paso8_and -> .)

    paso8_and                      shift and go to state 176

state 136

    (73) expAndOr -> cicloExpresion auxCicloExpresion .

    RPAREN          reduce using rule 73 (expAndOr -> cicloExpresion auxCicloExpresion .)


state 137

    (63) auxCicloExpresion -> OR . paso8_or cicloExpresion paso9 auxCicloExpresion
    (134) paso8_or -> .

    LPAREN          reduce using rule 134 (paso8_or -> .)
    PLUS            reduce using rule 134 (paso8_or -> .)
    MINUS           reduce using rule 134 (paso8_or -> .)
    ID              reduce using rule 134 (paso8_or -> .)
    CTEINT          reduce using rule 134 (paso8_or -> .)
    CTEFLOAT        reduce using rule 134 (paso8_or -> .)
    CTECHAR         reduce using rule 134 (paso8_or -> .)
    CTEBOOL         reduce using rule 134 (paso8_or -> .)
    CTESTRING       reduce using rule 134 (paso8_or -> .)

    paso8_or                       shift and go to state 177

state 138

    (61) cicloExpresion -> expresion paso10 .

    AND             reduce using rule 61 (cicloExpresion -> expresion paso10 .)
    OR              reduce using rule 61 (cicloExpresion -> expresion paso10 .)
    RPAREN          reduce using rule 61 (cicloExpresion -> expresion paso10 .)


state 139

    (68) auxExpresion -> NOTEQUAL . diferente exp
    (151) diferente -> .

    LPAREN          reduce using rule 151 (diferente -> .)
    PLUS            reduce using rule 151 (diferente -> .)
    MINUS           reduce using rule 151 (diferente -> .)
    ID              reduce using rule 151 (diferente -> .)
    CTEINT          reduce using rule 151 (diferente -> .)
    CTEFLOAT        reduce using rule 151 (diferente -> .)
    CTECHAR         reduce using rule 151 (diferente -> .)
    CTEBOOL         reduce using rule 151 (diferente -> .)
    CTESTRING       reduce using rule 151 (diferente -> .)

    diferente                      shift and go to state 178

state 140

    (65) expresion -> exp auxExpresion .

    AND             reduce using rule 65 (expresion -> exp auxExpresion .)
    OR              reduce using rule 65 (expresion -> exp auxExpresion .)
    RPAREN          reduce using rule 65 (expresion -> exp auxExpresion .)
    SEMICOLON       reduce using rule 65 (expresion -> exp auxExpresion .)


state 141

    (66) auxExpresion -> GTHAN . mayor exp
    (146) mayor -> .

    LPAREN          reduce using rule 146 (mayor -> .)
    PLUS            reduce using rule 146 (mayor -> .)
    MINUS           reduce using rule 146 (mayor -> .)
    ID              reduce using rule 146 (mayor -> .)
    CTEINT          reduce using rule 146 (mayor -> .)
    CTEFLOAT        reduce using rule 146 (mayor -> .)
    CTECHAR         reduce using rule 146 (mayor -> .)
    CTEBOOL         reduce using rule 146 (mayor -> .)
    CTESTRING       reduce using rule 146 (mayor -> .)

    mayor                          shift and go to state 179

state 142

    (71) auxExpresion -> EQUAL . igual exp
    (150) igual -> .

    LPAREN          reduce using rule 150 (igual -> .)
    PLUS            reduce using rule 150 (igual -> .)
    MINUS           reduce using rule 150 (igual -> .)
    ID              reduce using rule 150 (igual -> .)
    CTEINT          reduce using rule 150 (igual -> .)
    CTEFLOAT        reduce using rule 150 (igual -> .)
    CTECHAR         reduce using rule 150 (igual -> .)
    CTEBOOL         reduce using rule 150 (igual -> .)
    CTESTRING       reduce using rule 150 (igual -> .)

    igual                          shift and go to state 180

state 143

    (69) auxExpresion -> GETHAN . mayorIg exp
    (148) mayorIg -> .

    LPAREN          reduce using rule 148 (mayorIg -> .)
    PLUS            reduce using rule 148 (mayorIg -> .)
    MINUS           reduce using rule 148 (mayorIg -> .)
    ID              reduce using rule 148 (mayorIg -> .)
    CTEINT          reduce using rule 148 (mayorIg -> .)
    CTEFLOAT        reduce using rule 148 (mayorIg -> .)
    CTECHAR         reduce using rule 148 (mayorIg -> .)
    CTEBOOL         reduce using rule 148 (mayorIg -> .)
    CTESTRING       reduce using rule 148 (mayorIg -> .)

    mayorIg                        shift and go to state 181

state 144

    (67) auxExpresion -> LTHAN . menor exp
    (147) menor -> .

    LPAREN          reduce using rule 147 (menor -> .)
    PLUS            reduce using rule 147 (menor -> .)
    MINUS           reduce using rule 147 (menor -> .)
    ID              reduce using rule 147 (menor -> .)
    CTEINT          reduce using rule 147 (menor -> .)
    CTEFLOAT        reduce using rule 147 (menor -> .)
    CTECHAR         reduce using rule 147 (menor -> .)
    CTEBOOL         reduce using rule 147 (menor -> .)
    CTESTRING       reduce using rule 147 (menor -> .)

    menor                          shift and go to state 182

state 145

    (70) auxExpresion -> LETHAN . menorIg exp
    (149) menorIg -> .

    LPAREN          reduce using rule 149 (menorIg -> .)
    PLUS            reduce using rule 149 (menorIg -> .)
    MINUS           reduce using rule 149 (menorIg -> .)
    ID              reduce using rule 149 (menorIg -> .)
    CTEINT          reduce using rule 149 (menorIg -> .)
    CTEFLOAT        reduce using rule 149 (menorIg -> .)
    CTECHAR         reduce using rule 149 (menorIg -> .)
    CTEBOOL         reduce using rule 149 (menorIg -> .)
    CTESTRING       reduce using rule 149 (menorIg -> .)

    menorIg                        shift and go to state 183

state 146

    (74) condicion -> IF LPAREN expAndOr paso12 . RPAREN bloque auxCondicion paso14

    RPAREN          shift and go to state 184


state 147

    (115) llamada -> ID LPAREN auxLlamada RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 185


state 148

    (120) auxArgumentos1 -> exp ambAuxArgumentos1 .

    RPAREN          reduce using rule 120 (auxArgumentos1 -> exp ambAuxArgumentos1 .)


state 149

    (121) ambAuxArgumentos1 -> COMMA . auxArgumentos1
    (120) auxArgumentos1 -> . exp ambAuxArgumentos1
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    auxArgumentos1                 shift and go to state 186
    termino                        shift and go to state 87
    exp                            shift and go to state 107
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 150

    (52) asignacion -> ID paso1 addType auxAsignacion1 . EQUALA asig exp paso11 SEMICOLON

    EQUALA          shift and go to state 187


state 151

    (53) auxAsignacion1 -> LBRACKET . exp RBRACKET
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    termino                        shift and go to state 87
    exp                            shift and go to state 188
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 152

    (112) ambAuxParametros -> COMMA auxParametros .

    RPAREN          reduce using rule 112 (ambAuxParametros -> COMMA auxParametros .)


state 153

    (36) cicloVarsFuncion -> varsFuncion cicloVarsFuncion .

    ID              reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    IF              reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    PRINT           reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    READ            reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    WHILE           reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    RETURN          reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)


state 154

    (34) cicloBloqueFuncion -> estatuto . cicloBloqueFuncion
    (34) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (35) cicloBloqueFuncion -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . lectura
    (50) estatuto -> . llamada
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (74) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (123) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (115) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (114) ciclo -> . WHILE LPAREN expAndOr RPAREN bloque

    RETURN          reduce using rule 35 (cicloBloqueFuncion -> .)
    ID              shift and go to state 60
    IF              shift and go to state 57
    PRINT           shift and go to state 51
    READ            shift and go to state 50
    WHILE           shift and go to state 52

    ciclo                          shift and go to state 53
    asignacion                     shift and go to state 61
    estatuto                       shift and go to state 154
    llamada                        shift and go to state 55
    condicion                      shift and go to state 56
    cicloBloqueFuncion             shift and go to state 189
    lectura                        shift and go to state 58
    escritura                      shift and go to state 62

state 155

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion . RETURN expresion SEMICOLON RBRACE

    RETURN          shift and go to state 190


state 156

    (38) varsFuncion -> createVariableDirFuncion VAR . auxVar1Funcion
    (40) auxVar1Funcion -> . idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON
    (42) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 193

    idVarsFuncion                  shift and go to state 191
    auxVar1Funcion                 shift and go to state 192

state 157

    (24) auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain . SEMICOLON

    SEMICOLON       shift and go to state 194


state 158

    (28) ambIdVarsMain -> COMMA idVarsMain .

    COLON           reduce using rule 28 (ambIdVarsMain -> COMMA idVarsMain .)


state 159

    (123) lectura -> READ LPAREN ID RPAREN SEMICOLON .

    ID              reduce using rule 123 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 123 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 123 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 123 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 123 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 123 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACE          reduce using rule 123 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)


state 160

    (79) ambExp -> auxExp . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    cicloExp                       shift and go to state 195
    termino                        shift and go to state 87
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    auxExp                         shift and go to state 97
    cicloTermino                   shift and go to state 90

state 161

    (78) cicloExp -> termino paso4 ambExp .

    GTHAN           reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    LTHAN           reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    NOTEQUAL        reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    GETHAN          reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    LETHAN          reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    EQUAL           reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    SEMICOLON       reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    COMMA           reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    RPAREN          reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    AND             reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    OR              reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    LBRACKET        reduce using rule 78 (cicloExp -> termino paso4 ambExp .)
    RBRACKET        reduce using rule 78 (cicloExp -> termino paso4 ambExp .)


state 162

    (87) auxTermino -> MULTI . paso2_mult
    (125) paso2_mult -> .

    LPAREN          reduce using rule 125 (paso2_mult -> .)
    PLUS            reduce using rule 125 (paso2_mult -> .)
    MINUS           reduce using rule 125 (paso2_mult -> .)
    ID              reduce using rule 125 (paso2_mult -> .)
    CTEINT          reduce using rule 125 (paso2_mult -> .)
    CTEFLOAT        reduce using rule 125 (paso2_mult -> .)
    CTECHAR         reduce using rule 125 (paso2_mult -> .)
    CTEBOOL         reduce using rule 125 (paso2_mult -> .)
    CTESTRING       reduce using rule 125 (paso2_mult -> .)

    paso2_mult                     shift and go to state 196

state 163

    (84) cicloTermino -> factor paso5 ambCicloTermino .

    PLUS            reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    MINUS           reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    SEMICOLON       reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    COMMA           reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    RPAREN          reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    GTHAN           reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    LTHAN           reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    NOTEQUAL        reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    GETHAN          reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    LETHAN          reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    EQUAL           reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    AND             reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    OR              reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    RBRACKET        reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)
    LBRACKET        reduce using rule 84 (cicloTermino -> factor paso5 ambCicloTermino .)


state 164

    (85) ambCicloTermino -> auxTermino . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    cicloTermino                   shift and go to state 197
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96

state 165

    (88) auxTermino -> DIVIDE . paso2_div
    (126) paso2_div -> .

    LPAREN          reduce using rule 126 (paso2_div -> .)
    PLUS            reduce using rule 126 (paso2_div -> .)
    MINUS           reduce using rule 126 (paso2_div -> .)
    ID              reduce using rule 126 (paso2_div -> .)
    CTEINT          reduce using rule 126 (paso2_div -> .)
    CTEFLOAT        reduce using rule 126 (paso2_div -> .)
    CTECHAR         reduce using rule 126 (paso2_div -> .)
    CTEBOOL         reduce using rule 126 (paso2_div -> .)
    CTESTRING       reduce using rule 126 (paso2_div -> .)

    paso2_div                      shift and go to state 198

state 166

    (55) escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .

    ID              reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    READ            reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)


state 167

    (57) ambAuxEscritura1 -> COMMA auxEscritura1 .

    RPAREN          reduce using rule 57 (ambAuxEscritura1 -> COMMA auxEscritura1 .)


state 168

    (89) factor -> LPAREN paso6 exp . RPAREN paso7

    RPAREN          shift and go to state 199


state 169

    (98) varcte -> CTESTRING paso1 . cteString
    (145) cteString -> .

    MULTI           reduce using rule 145 (cteString -> .)
    DIVIDE          reduce using rule 145 (cteString -> .)
    PLUS            reduce using rule 145 (cteString -> .)
    MINUS           reduce using rule 145 (cteString -> .)
    COMMA           reduce using rule 145 (cteString -> .)
    RPAREN          reduce using rule 145 (cteString -> .)
    GTHAN           reduce using rule 145 (cteString -> .)
    LTHAN           reduce using rule 145 (cteString -> .)
    NOTEQUAL        reduce using rule 145 (cteString -> .)
    GETHAN          reduce using rule 145 (cteString -> .)
    LETHAN          reduce using rule 145 (cteString -> .)
    EQUAL           reduce using rule 145 (cteString -> .)
    AND             reduce using rule 145 (cteString -> .)
    OR              reduce using rule 145 (cteString -> .)
    RBRACKET        reduce using rule 145 (cteString -> .)
    SEMICOLON       reduce using rule 145 (cteString -> .)
    LBRACKET        reduce using rule 145 (cteString -> .)

    cteString                      shift and go to state 200

state 170

    (97) varcte -> CTEBOOL paso1 . cteBool
    (144) cteBool -> .

    MULTI           reduce using rule 144 (cteBool -> .)
    DIVIDE          reduce using rule 144 (cteBool -> .)
    PLUS            reduce using rule 144 (cteBool -> .)
    MINUS           reduce using rule 144 (cteBool -> .)
    COMMA           reduce using rule 144 (cteBool -> .)
    RPAREN          reduce using rule 144 (cteBool -> .)
    GTHAN           reduce using rule 144 (cteBool -> .)
    LTHAN           reduce using rule 144 (cteBool -> .)
    NOTEQUAL        reduce using rule 144 (cteBool -> .)
    GETHAN          reduce using rule 144 (cteBool -> .)
    LETHAN          reduce using rule 144 (cteBool -> .)
    EQUAL           reduce using rule 144 (cteBool -> .)
    AND             reduce using rule 144 (cteBool -> .)
    OR              reduce using rule 144 (cteBool -> .)
    RBRACKET        reduce using rule 144 (cteBool -> .)
    SEMICOLON       reduce using rule 144 (cteBool -> .)
    LBRACKET        reduce using rule 144 (cteBool -> .)

    cteBool                        shift and go to state 201

state 171

    (94) varcte -> CTEINT paso1 . cteInt
    (141) cteInt -> .

    MULTI           reduce using rule 141 (cteInt -> .)
    DIVIDE          reduce using rule 141 (cteInt -> .)
    PLUS            reduce using rule 141 (cteInt -> .)
    MINUS           reduce using rule 141 (cteInt -> .)
    COMMA           reduce using rule 141 (cteInt -> .)
    RPAREN          reduce using rule 141 (cteInt -> .)
    GTHAN           reduce using rule 141 (cteInt -> .)
    LTHAN           reduce using rule 141 (cteInt -> .)
    NOTEQUAL        reduce using rule 141 (cteInt -> .)
    GETHAN          reduce using rule 141 (cteInt -> .)
    LETHAN          reduce using rule 141 (cteInt -> .)
    EQUAL           reduce using rule 141 (cteInt -> .)
    AND             reduce using rule 141 (cteInt -> .)
    OR              reduce using rule 141 (cteInt -> .)
    RBRACKET        reduce using rule 141 (cteInt -> .)
    SEMICOLON       reduce using rule 141 (cteInt -> .)
    LBRACKET        reduce using rule 141 (cteInt -> .)

    cteInt                         shift and go to state 202

state 172

    (95) varcte -> CTEFLOAT paso1 . cteFloat
    (142) cteFloat -> .

    MULTI           reduce using rule 142 (cteFloat -> .)
    DIVIDE          reduce using rule 142 (cteFloat -> .)
    PLUS            reduce using rule 142 (cteFloat -> .)
    MINUS           reduce using rule 142 (cteFloat -> .)
    COMMA           reduce using rule 142 (cteFloat -> .)
    RPAREN          reduce using rule 142 (cteFloat -> .)
    GTHAN           reduce using rule 142 (cteFloat -> .)
    LTHAN           reduce using rule 142 (cteFloat -> .)
    NOTEQUAL        reduce using rule 142 (cteFloat -> .)
    GETHAN          reduce using rule 142 (cteFloat -> .)
    LETHAN          reduce using rule 142 (cteFloat -> .)
    EQUAL           reduce using rule 142 (cteFloat -> .)
    AND             reduce using rule 142 (cteFloat -> .)
    OR              reduce using rule 142 (cteFloat -> .)
    RBRACKET        reduce using rule 142 (cteFloat -> .)
    SEMICOLON       reduce using rule 142 (cteFloat -> .)
    LBRACKET        reduce using rule 142 (cteFloat -> .)

    cteFloat                       shift and go to state 203

state 173

    (96) varcte -> CTECHAR paso1 . cteChar
    (143) cteChar -> .

    MULTI           reduce using rule 143 (cteChar -> .)
    DIVIDE          reduce using rule 143 (cteChar -> .)
    PLUS            reduce using rule 143 (cteChar -> .)
    MINUS           reduce using rule 143 (cteChar -> .)
    COMMA           reduce using rule 143 (cteChar -> .)
    RPAREN          reduce using rule 143 (cteChar -> .)
    GTHAN           reduce using rule 143 (cteChar -> .)
    LTHAN           reduce using rule 143 (cteChar -> .)
    NOTEQUAL        reduce using rule 143 (cteChar -> .)
    GETHAN          reduce using rule 143 (cteChar -> .)
    LETHAN          reduce using rule 143 (cteChar -> .)
    EQUAL           reduce using rule 143 (cteChar -> .)
    AND             reduce using rule 143 (cteChar -> .)
    OR              reduce using rule 143 (cteChar -> .)
    RBRACKET        reduce using rule 143 (cteChar -> .)
    SEMICOLON       reduce using rule 143 (cteChar -> .)
    LBRACKET        reduce using rule 143 (cteChar -> .)

    cteChar                        shift and go to state 204

state 174

    (93) varcte -> ID paso1 . addType auxVarcte
    (99) addType -> .

    LPAREN          reduce using rule 99 (addType -> .)
    LBRACKET        reduce using rule 99 (addType -> .)
    MULTI           reduce using rule 99 (addType -> .)
    DIVIDE          reduce using rule 99 (addType -> .)
    PLUS            reduce using rule 99 (addType -> .)
    MINUS           reduce using rule 99 (addType -> .)
    COMMA           reduce using rule 99 (addType -> .)
    RPAREN          reduce using rule 99 (addType -> .)
    GTHAN           reduce using rule 99 (addType -> .)
    LTHAN           reduce using rule 99 (addType -> .)
    NOTEQUAL        reduce using rule 99 (addType -> .)
    GETHAN          reduce using rule 99 (addType -> .)
    LETHAN          reduce using rule 99 (addType -> .)
    EQUAL           reduce using rule 99 (addType -> .)
    AND             reduce using rule 99 (addType -> .)
    OR              reduce using rule 99 (addType -> .)
    RBRACKET        reduce using rule 99 (addType -> .)
    SEMICOLON       reduce using rule 99 (addType -> .)

    addType                        shift and go to state 205

state 175

    (114) ciclo -> WHILE LPAREN expAndOr RPAREN bloque .

    ID              reduce using rule 114 (ciclo -> WHILE LPAREN expAndOr RPAREN bloque .)
    IF              reduce using rule 114 (ciclo -> WHILE LPAREN expAndOr RPAREN bloque .)
    PRINT           reduce using rule 114 (ciclo -> WHILE LPAREN expAndOr RPAREN bloque .)
    READ            reduce using rule 114 (ciclo -> WHILE LPAREN expAndOr RPAREN bloque .)
    WHILE           reduce using rule 114 (ciclo -> WHILE LPAREN expAndOr RPAREN bloque .)
    RBRACE          reduce using rule 114 (ciclo -> WHILE LPAREN expAndOr RPAREN bloque .)
    RETURN          reduce using rule 114 (ciclo -> WHILE LPAREN expAndOr RPAREN bloque .)


state 176

    (62) auxCicloExpresion -> AND paso8_and . cicloExpresion paso9 auxCicloExpresion
    (61) cicloExpresion -> . expresion paso10
    (65) expresion -> . exp auxExpresion
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    termino                        shift and go to state 87
    cicloExpresion                 shift and go to state 206
    cicloTermino                   shift and go to state 90
    factor                         shift and go to state 91
    cicloExp                       shift and go to state 92
    auxFactor                      shift and go to state 96
    auxExp                         shift and go to state 97
    expresion                      shift and go to state 101
    exp                            shift and go to state 102

state 177

    (63) auxCicloExpresion -> OR paso8_or . cicloExpresion paso9 auxCicloExpresion
    (61) cicloExpresion -> . expresion paso10
    (65) expresion -> . exp auxExpresion
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    termino                        shift and go to state 87
    cicloExpresion                 shift and go to state 207
    cicloTermino                   shift and go to state 90
    factor                         shift and go to state 91
    cicloExp                       shift and go to state 92
    auxFactor                      shift and go to state 96
    auxExp                         shift and go to state 97
    expresion                      shift and go to state 101
    exp                            shift and go to state 102

state 178

    (68) auxExpresion -> NOTEQUAL diferente . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    termino                        shift and go to state 87
    exp                            shift and go to state 208
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 179

    (66) auxExpresion -> GTHAN mayor . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    cicloExp                       shift and go to state 92
    termino                        shift and go to state 87
    exp                            shift and go to state 209
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloTermino                   shift and go to state 90

state 180

    (71) auxExpresion -> EQUAL igual . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    termino                        shift and go to state 87
    exp                            shift and go to state 210
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 181

    (69) auxExpresion -> GETHAN mayorIg . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    termino                        shift and go to state 87
    exp                            shift and go to state 211
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 182

    (67) auxExpresion -> LTHAN menor . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    termino                        shift and go to state 87
    exp                            shift and go to state 212
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 183

    (70) auxExpresion -> LETHAN menorIg . exp
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    termino                        shift and go to state 87
    exp                            shift and go to state 213
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 184

    (74) condicion -> IF LPAREN expAndOr paso12 RPAREN . bloque auxCondicion paso14
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 214

state 185

    (115) llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .

    ID              reduce using rule 115 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    IF              reduce using rule 115 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    PRINT           reduce using rule 115 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    READ            reduce using rule 115 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    WHILE           reduce using rule 115 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    RETURN          reduce using rule 115 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    RBRACE          reduce using rule 115 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)


state 186

    (121) ambAuxArgumentos1 -> COMMA auxArgumentos1 .

    RPAREN          reduce using rule 121 (ambAuxArgumentos1 -> COMMA auxArgumentos1 .)


state 187

    (52) asignacion -> ID paso1 addType auxAsignacion1 EQUALA . asig exp paso11 SEMICOLON
    (152) asig -> .

    LPAREN          reduce using rule 152 (asig -> .)
    PLUS            reduce using rule 152 (asig -> .)
    MINUS           reduce using rule 152 (asig -> .)
    ID              reduce using rule 152 (asig -> .)
    CTEINT          reduce using rule 152 (asig -> .)
    CTEFLOAT        reduce using rule 152 (asig -> .)
    CTECHAR         reduce using rule 152 (asig -> .)
    CTEBOOL         reduce using rule 152 (asig -> .)
    CTESTRING       reduce using rule 152 (asig -> .)

    asig                           shift and go to state 215

state 188

    (53) auxAsignacion1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 216


state 189

    (34) cicloBloqueFuncion -> estatuto cicloBloqueFuncion .

    RETURN          reduce using rule 34 (cicloBloqueFuncion -> estatuto cicloBloqueFuncion .)


state 190

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN . expresion SEMICOLON RBRACE
    (65) expresion -> . exp auxExpresion
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    expresion                      shift and go to state 217
    auxExp                         shift and go to state 97
    termino                        shift and go to state 87
    exp                            shift and go to state 102
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 191

    (40) auxVar1Funcion -> idVarsFuncion . COLON tipo addTypeGlobalFuncion SEMICOLON

    COLON           shift and go to state 218


state 192

    (38) varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .

    VAR             reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    ID              reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    IF              reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    PRINT           reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    READ            reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    WHILE           reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    RETURN          reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)


state 193

    (42) idVarsFuncion -> ID . addVariableDirFuncion ambIdVarsFuncion
    (43) addVariableDirFuncion -> .

    COMMA           reduce using rule 43 (addVariableDirFuncion -> .)
    COLON           reduce using rule 43 (addVariableDirFuncion -> .)

    addVariableDirFuncion          shift and go to state 219

state 194

    (24) auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .

    VAR             reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    ID              reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    IF              reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    PRINT           reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    READ            reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    WHILE           reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    RBRACE          reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)


state 195

    (79) ambExp -> auxExp cicloExp .

    COMMA           reduce using rule 79 (ambExp -> auxExp cicloExp .)
    RPAREN          reduce using rule 79 (ambExp -> auxExp cicloExp .)
    GTHAN           reduce using rule 79 (ambExp -> auxExp cicloExp .)
    LTHAN           reduce using rule 79 (ambExp -> auxExp cicloExp .)
    NOTEQUAL        reduce using rule 79 (ambExp -> auxExp cicloExp .)
    GETHAN          reduce using rule 79 (ambExp -> auxExp cicloExp .)
    LETHAN          reduce using rule 79 (ambExp -> auxExp cicloExp .)
    EQUAL           reduce using rule 79 (ambExp -> auxExp cicloExp .)
    AND             reduce using rule 79 (ambExp -> auxExp cicloExp .)
    OR              reduce using rule 79 (ambExp -> auxExp cicloExp .)
    RBRACKET        reduce using rule 79 (ambExp -> auxExp cicloExp .)
    SEMICOLON       reduce using rule 79 (ambExp -> auxExp cicloExp .)
    LBRACKET        reduce using rule 79 (ambExp -> auxExp cicloExp .)


state 196

    (87) auxTermino -> MULTI paso2_mult .

    LPAREN          reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    PLUS            reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    MINUS           reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    ID              reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CTEINT          reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CTEFLOAT        reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CTECHAR         reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CTEBOOL         reduce using rule 87 (auxTermino -> MULTI paso2_mult .)
    CTESTRING       reduce using rule 87 (auxTermino -> MULTI paso2_mult .)


state 197

    (85) ambCicloTermino -> auxTermino cicloTermino .

    PLUS            reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    MINUS           reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    COMMA           reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    RPAREN          reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    GTHAN           reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    LTHAN           reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    NOTEQUAL        reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    GETHAN          reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    LETHAN          reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    EQUAL           reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    AND             reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    OR              reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    RBRACKET        reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    SEMICOLON       reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)
    LBRACKET        reduce using rule 85 (ambCicloTermino -> auxTermino cicloTermino .)


state 198

    (88) auxTermino -> DIVIDE paso2_div .

    LPAREN          reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    PLUS            reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    MINUS           reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    ID              reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CTEINT          reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CTEFLOAT        reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CTECHAR         reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CTEBOOL         reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)
    CTESTRING       reduce using rule 88 (auxTermino -> DIVIDE paso2_div .)


state 199

    (89) factor -> LPAREN paso6 exp RPAREN . paso7
    (132) paso7 -> .

    MULTI           reduce using rule 132 (paso7 -> .)
    DIVIDE          reduce using rule 132 (paso7 -> .)
    PLUS            reduce using rule 132 (paso7 -> .)
    MINUS           reduce using rule 132 (paso7 -> .)
    COMMA           reduce using rule 132 (paso7 -> .)
    RPAREN          reduce using rule 132 (paso7 -> .)
    GTHAN           reduce using rule 132 (paso7 -> .)
    LTHAN           reduce using rule 132 (paso7 -> .)
    NOTEQUAL        reduce using rule 132 (paso7 -> .)
    GETHAN          reduce using rule 132 (paso7 -> .)
    LETHAN          reduce using rule 132 (paso7 -> .)
    EQUAL           reduce using rule 132 (paso7 -> .)
    AND             reduce using rule 132 (paso7 -> .)
    OR              reduce using rule 132 (paso7 -> .)
    RBRACKET        reduce using rule 132 (paso7 -> .)
    SEMICOLON       reduce using rule 132 (paso7 -> .)
    LBRACKET        reduce using rule 132 (paso7 -> .)

    paso7                          shift and go to state 220

state 200

    (98) varcte -> CTESTRING paso1 cteString .

    MULTI           reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    DIVIDE          reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    PLUS            reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    MINUS           reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    COMMA           reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    RPAREN          reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    GTHAN           reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    LTHAN           reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    NOTEQUAL        reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    GETHAN          reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    LETHAN          reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    EQUAL           reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    AND             reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    OR              reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    RBRACKET        reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    SEMICOLON       reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)
    LBRACKET        reduce using rule 98 (varcte -> CTESTRING paso1 cteString .)


state 201

    (97) varcte -> CTEBOOL paso1 cteBool .

    MULTI           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    DIVIDE          reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    PLUS            reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    MINUS           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    COMMA           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    RPAREN          reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    GTHAN           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    LTHAN           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    NOTEQUAL        reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    GETHAN          reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    LETHAN          reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    EQUAL           reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    AND             reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    OR              reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    RBRACKET        reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    SEMICOLON       reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)
    LBRACKET        reduce using rule 97 (varcte -> CTEBOOL paso1 cteBool .)


state 202

    (94) varcte -> CTEINT paso1 cteInt .

    MULTI           reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    DIVIDE          reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    PLUS            reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    MINUS           reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    COMMA           reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    RPAREN          reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    GTHAN           reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    LTHAN           reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    NOTEQUAL        reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    GETHAN          reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    LETHAN          reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    EQUAL           reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    AND             reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    OR              reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    RBRACKET        reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    SEMICOLON       reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)
    LBRACKET        reduce using rule 94 (varcte -> CTEINT paso1 cteInt .)


state 203

    (95) varcte -> CTEFLOAT paso1 cteFloat .

    MULTI           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    DIVIDE          reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    PLUS            reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    MINUS           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    COMMA           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    RPAREN          reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    GTHAN           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    LTHAN           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    NOTEQUAL        reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    GETHAN          reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    LETHAN          reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    EQUAL           reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    AND             reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    OR              reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    RBRACKET        reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    SEMICOLON       reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)
    LBRACKET        reduce using rule 95 (varcte -> CTEFLOAT paso1 cteFloat .)


state 204

    (96) varcte -> CTECHAR paso1 cteChar .

    MULTI           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    DIVIDE          reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    PLUS            reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    MINUS           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    COMMA           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    RPAREN          reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    GTHAN           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    LTHAN           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    NOTEQUAL        reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    GETHAN          reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    LETHAN          reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    EQUAL           reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    AND             reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    OR              reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    RBRACKET        reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    SEMICOLON       reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)
    LBRACKET        reduce using rule 96 (varcte -> CTECHAR paso1 cteChar .)


state 205

    (93) varcte -> ID paso1 addType . auxVarcte
    (100) auxVarcte -> . LPAREN exp RPAREN
    (101) auxVarcte -> . LBRACKET exp LBRACKET
    (102) auxVarcte -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
    LPAREN          shift and go to state 221
    LBRACKET        shift and go to state 222
    MULTI           reduce using rule 102 (auxVarcte -> .)
    DIVIDE          reduce using rule 102 (auxVarcte -> .)
    PLUS            reduce using rule 102 (auxVarcte -> .)
    MINUS           reduce using rule 102 (auxVarcte -> .)
    COMMA           reduce using rule 102 (auxVarcte -> .)
    RPAREN          reduce using rule 102 (auxVarcte -> .)
    GTHAN           reduce using rule 102 (auxVarcte -> .)
    LTHAN           reduce using rule 102 (auxVarcte -> .)
    NOTEQUAL        reduce using rule 102 (auxVarcte -> .)
    GETHAN          reduce using rule 102 (auxVarcte -> .)
    LETHAN          reduce using rule 102 (auxVarcte -> .)
    EQUAL           reduce using rule 102 (auxVarcte -> .)
    AND             reduce using rule 102 (auxVarcte -> .)
    OR              reduce using rule 102 (auxVarcte -> .)
    RBRACKET        reduce using rule 102 (auxVarcte -> .)
    SEMICOLON       reduce using rule 102 (auxVarcte -> .)

  ! LBRACKET        [ reduce using rule 102 (auxVarcte -> .) ]

    auxVarcte                      shift and go to state 223

state 206

    (62) auxCicloExpresion -> AND paso8_and cicloExpresion . paso9 auxCicloExpresion
    (135) paso9 -> .

    AND             reduce using rule 135 (paso9 -> .)
    OR              reduce using rule 135 (paso9 -> .)
    RPAREN          reduce using rule 135 (paso9 -> .)

    paso9                          shift and go to state 224

state 207

    (63) auxCicloExpresion -> OR paso8_or cicloExpresion . paso9 auxCicloExpresion
    (135) paso9 -> .

    AND             reduce using rule 135 (paso9 -> .)
    OR              reduce using rule 135 (paso9 -> .)
    RPAREN          reduce using rule 135 (paso9 -> .)

    paso9                          shift and go to state 225

state 208

    (68) auxExpresion -> NOTEQUAL diferente exp .

    AND             reduce using rule 68 (auxExpresion -> NOTEQUAL diferente exp .)
    OR              reduce using rule 68 (auxExpresion -> NOTEQUAL diferente exp .)
    RPAREN          reduce using rule 68 (auxExpresion -> NOTEQUAL diferente exp .)
    SEMICOLON       reduce using rule 68 (auxExpresion -> NOTEQUAL diferente exp .)


state 209

    (66) auxExpresion -> GTHAN mayor exp .

    AND             reduce using rule 66 (auxExpresion -> GTHAN mayor exp .)
    OR              reduce using rule 66 (auxExpresion -> GTHAN mayor exp .)
    RPAREN          reduce using rule 66 (auxExpresion -> GTHAN mayor exp .)
    SEMICOLON       reduce using rule 66 (auxExpresion -> GTHAN mayor exp .)


state 210

    (71) auxExpresion -> EQUAL igual exp .

    AND             reduce using rule 71 (auxExpresion -> EQUAL igual exp .)
    OR              reduce using rule 71 (auxExpresion -> EQUAL igual exp .)
    RPAREN          reduce using rule 71 (auxExpresion -> EQUAL igual exp .)
    SEMICOLON       reduce using rule 71 (auxExpresion -> EQUAL igual exp .)


state 211

    (69) auxExpresion -> GETHAN mayorIg exp .

    AND             reduce using rule 69 (auxExpresion -> GETHAN mayorIg exp .)
    OR              reduce using rule 69 (auxExpresion -> GETHAN mayorIg exp .)
    RPAREN          reduce using rule 69 (auxExpresion -> GETHAN mayorIg exp .)
    SEMICOLON       reduce using rule 69 (auxExpresion -> GETHAN mayorIg exp .)


state 212

    (67) auxExpresion -> LTHAN menor exp .

    AND             reduce using rule 67 (auxExpresion -> LTHAN menor exp .)
    OR              reduce using rule 67 (auxExpresion -> LTHAN menor exp .)
    RPAREN          reduce using rule 67 (auxExpresion -> LTHAN menor exp .)
    SEMICOLON       reduce using rule 67 (auxExpresion -> LTHAN menor exp .)


state 213

    (70) auxExpresion -> LETHAN menorIg exp .

    AND             reduce using rule 70 (auxExpresion -> LETHAN menorIg exp .)
    OR              reduce using rule 70 (auxExpresion -> LETHAN menorIg exp .)
    RPAREN          reduce using rule 70 (auxExpresion -> LETHAN menorIg exp .)
    SEMICOLON       reduce using rule 70 (auxExpresion -> LETHAN menorIg exp .)


state 214

    (74) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque . auxCondicion paso14
    (75) auxCondicion -> . ELSE paso13 bloque
    (76) auxCondicion -> .

    ELSE            shift and go to state 227
    ID              reduce using rule 76 (auxCondicion -> .)
    IF              reduce using rule 76 (auxCondicion -> .)
    PRINT           reduce using rule 76 (auxCondicion -> .)
    READ            reduce using rule 76 (auxCondicion -> .)
    WHILE           reduce using rule 76 (auxCondicion -> .)
    RBRACE          reduce using rule 76 (auxCondicion -> .)
    RETURN          reduce using rule 76 (auxCondicion -> .)

    auxCondicion                   shift and go to state 226

state 215

    (52) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig . exp paso11 SEMICOLON
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    cicloTermino                   shift and go to state 90
    termino                        shift and go to state 87
    exp                            shift and go to state 228
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92

state 216

    (53) auxAsignacion1 -> LBRACKET exp RBRACKET .

    EQUALA          reduce using rule 53 (auxAsignacion1 -> LBRACKET exp RBRACKET .)


state 217

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 229


state 218

    (40) auxVar1Funcion -> idVarsFuncion COLON . tipo addTypeGlobalFuncion SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 230

state 219

    (42) idVarsFuncion -> ID addVariableDirFuncion . ambIdVarsFuncion
    (44) ambIdVarsFuncion -> . COMMA idVarsFuncion
    (45) ambIdVarsFuncion -> .

    COMMA           shift and go to state 232
    COLON           reduce using rule 45 (ambIdVarsFuncion -> .)

    ambIdVarsFuncion               shift and go to state 231

state 220

    (89) factor -> LPAREN paso6 exp RPAREN paso7 .

    MULTI           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    DIVIDE          reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    PLUS            reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    MINUS           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    AND             reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    OR              reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RPAREN          reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    SEMICOLON       reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    COMMA           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LBRACKET        reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    GTHAN           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LTHAN           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    NOTEQUAL        reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    GETHAN          reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LETHAN          reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    EQUAL           reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RBRACKET        reduce using rule 89 (factor -> LPAREN paso6 exp RPAREN paso7 .)


state 221

    (100) auxVarcte -> LPAREN . exp RPAREN
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    termino                        shift and go to state 87
    exp                            shift and go to state 233
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 222

    (101) auxVarcte -> LBRACKET . exp LBRACKET
    (77) exp -> . cicloExp
    (78) cicloExp -> . termino paso4 ambExp
    (83) termino -> . cicloTermino
    (84) cicloTermino -> . factor paso5 ambCicloTermino
    (89) factor -> . LPAREN paso6 exp RPAREN paso7
    (90) factor -> . auxFactor varcte
    (91) auxFactor -> . auxExp
    (92) auxFactor -> .
    (81) auxExp -> . PLUS paso3_suma
    (82) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 95
    ID              reduce using rule 92 (auxFactor -> .)
    CTEINT          reduce using rule 92 (auxFactor -> .)
    CTEFLOAT        reduce using rule 92 (auxFactor -> .)
    CTECHAR         reduce using rule 92 (auxFactor -> .)
    CTEBOOL         reduce using rule 92 (auxFactor -> .)
    CTESTRING       reduce using rule 92 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88

    auxExp                         shift and go to state 97
    termino                        shift and go to state 87
    exp                            shift and go to state 234
    factor                         shift and go to state 91
    auxFactor                      shift and go to state 96
    cicloExp                       shift and go to state 92
    cicloTermino                   shift and go to state 90

state 223

    (93) varcte -> ID paso1 addType auxVarcte .

    MULTI           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    DIVIDE          reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    PLUS            reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    MINUS           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    COMMA           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    RPAREN          reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    GTHAN           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    LTHAN           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    NOTEQUAL        reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    GETHAN          reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    LETHAN          reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    EQUAL           reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    AND             reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    OR              reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    RBRACKET        reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    SEMICOLON       reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)
    LBRACKET        reduce using rule 93 (varcte -> ID paso1 addType auxVarcte .)


state 224

    (62) auxCicloExpresion -> AND paso8_and cicloExpresion paso9 . auxCicloExpresion
    (62) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (63) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (64) auxCicloExpresion -> .

    AND             shift and go to state 135
    OR              shift and go to state 137
    RPAREN          reduce using rule 64 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 235

state 225

    (63) auxCicloExpresion -> OR paso8_or cicloExpresion paso9 . auxCicloExpresion
    (62) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (63) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (64) auxCicloExpresion -> .

    AND             shift and go to state 135
    OR              shift and go to state 137
    RPAREN          reduce using rule 64 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 236

state 226

    (74) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion . paso14
    (140) paso14 -> .

    ID              reduce using rule 140 (paso14 -> .)
    IF              reduce using rule 140 (paso14 -> .)
    PRINT           reduce using rule 140 (paso14 -> .)
    READ            reduce using rule 140 (paso14 -> .)
    WHILE           reduce using rule 140 (paso14 -> .)
    RBRACE          reduce using rule 140 (paso14 -> .)
    RETURN          reduce using rule 140 (paso14 -> .)

    paso14                         shift and go to state 237

state 227

    (75) auxCondicion -> ELSE . paso13 bloque
    (139) paso13 -> .

    LBRACE          reduce using rule 139 (paso13 -> .)

    paso13                         shift and go to state 238

state 228

    (52) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp . paso11 SEMICOLON
    (137) paso11 -> .

    SEMICOLON       reduce using rule 137 (paso11 -> .)

    paso11                         shift and go to state 239

state 229

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON . RBRACE

    RBRACE          shift and go to state 240


state 230

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo . addTypeGlobalFuncion SEMICOLON
    (41) addTypeGlobalFuncion -> .

    SEMICOLON       reduce using rule 41 (addTypeGlobalFuncion -> .)

    addTypeGlobalFuncion           shift and go to state 241

state 231

    (42) idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .

    COLON           reduce using rule 42 (idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .)


state 232

    (44) ambIdVarsFuncion -> COMMA . idVarsFuncion
    (42) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 193

    idVarsFuncion                  shift and go to state 242

state 233

    (100) auxVarcte -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 243


state 234

    (101) auxVarcte -> LBRACKET exp . LBRACKET

    LBRACKET        shift and go to state 244


state 235

    (62) auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion .

    RPAREN          reduce using rule 62 (auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion .)


state 236

    (63) auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion .

    RPAREN          reduce using rule 63 (auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion .)


state 237

    (74) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .

    ID              reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    IF              reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    PRINT           reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    READ            reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    WHILE           reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    RBRACE          reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    RETURN          reduce using rule 74 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)


state 238

    (75) auxCondicion -> ELSE paso13 . bloque
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 245

state 239

    (52) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 . SEMICOLON

    SEMICOLON       shift and go to state 246


state 240

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .

    FUNCTION        reduce using rule 33 (bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .)
    MAIN            reduce using rule 33 (bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .)


state 241

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion . SEMICOLON

    SEMICOLON       shift and go to state 247


state 242

    (44) ambIdVarsFuncion -> COMMA idVarsFuncion .

    COLON           reduce using rule 44 (ambIdVarsFuncion -> COMMA idVarsFuncion .)


state 243

    (100) auxVarcte -> LPAREN exp RPAREN .

    MULTI           reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    GTHAN           reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    LTHAN           reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    GETHAN          reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    LETHAN          reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    AND             reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    OR              reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)
    LBRACKET        reduce using rule 100 (auxVarcte -> LPAREN exp RPAREN .)


state 244

    (101) auxVarcte -> LBRACKET exp LBRACKET .

    MULTI           reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    DIVIDE          reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    PLUS            reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    MINUS           reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    COMMA           reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    RPAREN          reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    GTHAN           reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    LTHAN           reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    NOTEQUAL        reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    GETHAN          reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    LETHAN          reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    EQUAL           reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    AND             reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    OR              reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    RBRACKET        reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    SEMICOLON       reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)
    LBRACKET        reduce using rule 101 (auxVarcte -> LBRACKET exp LBRACKET .)


state 245

    (75) auxCondicion -> ELSE paso13 bloque .

    ID              reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    IF              reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    PRINT           reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    READ            reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    WHILE           reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    RBRACE          reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)
    RETURN          reduce using rule 75 (auxCondicion -> ELSE paso13 bloque .)


state 246

    (52) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .

    ID              reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    IF              reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    PRINT           reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    READ            reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    WHILE           reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    RETURN          reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    RBRACE          reduce using rule 52 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)


state 247

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .

    VAR             reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    ID              reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    IF              reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    PRINT           reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    READ            reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    WHILE           reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    RETURN          reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CTESTRING in state 72 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 124 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 205 resolved as shift
WARNING: reduce/reduce conflict in state 77 resolved using rule (auxLlamada -> <empty>)
WARNING: rejected rule (argumentos -> <empty>) in state 77
WARNING: Rule (argumentos -> <empty>) is never reduced
