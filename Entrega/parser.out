Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque
Rule 2     addProcedureDir -> <empty>
Rule 3     cicloVars -> vars cicloVars
Rule 4     cicloVars -> <empty>
Rule 5     vars -> createVariableDir VAR auxVar1
Rule 6     createVariableDir -> <empty>
Rule 7     auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON
Rule 8     addTypeGlobal -> <empty>
Rule 9     idVars -> ID addVariableDir ambIdVars
Rule 10    addVariableDir -> <empty>
Rule 11    ambIdVars -> COMMA idVars
Rule 12    ambIdVars -> <empty>
Rule 13    tipo -> INT ambAuxTipo1
Rule 14    tipo -> BOOL ambAuxTipo1
Rule 15    tipo -> STRING ambAuxTipo1
Rule 16    tipo -> FLOAT ambAuxTipo1
Rule 17    tipo -> CHAR ambAuxTipo1
Rule 18    ambAuxTipo1 -> LBRACKET CTEINT RBRACKET
Rule 19    ambAuxTipo1 -> <empty>
Rule 20    cicloVarsMain -> varsMain cicloVarsMain
Rule 21    cicloVarsMain -> <empty>
Rule 22    varsMain -> createVariableDirMain VAR auxVar1Main
Rule 23    createVariableDirMain -> <empty>
Rule 24    auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON
Rule 25    addTypeGlobalMain -> <empty>
Rule 26    idVarsMain -> ID addVariableDirMain ambIdVarsMain
Rule 27    addVariableDirMain -> <empty>
Rule 28    ambIdVarsMain -> COMMA idVarsMain
Rule 29    ambIdVarsMain -> <empty>
Rule 30    bloque -> LBRACE cicloVarsMain cicloBloque RBRACE
Rule 31    cicloBloque -> estatuto cicloBloque
Rule 32    cicloBloque -> <empty>
Rule 33    bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
Rule 34    cicloBloqueFuncion -> estatuto cicloBloqueFuncion
Rule 35    cicloBloqueFuncion -> <empty>
Rule 36    cicloVarsFuncion -> varsFuncion cicloVarsFuncion
Rule 37    cicloVarsFuncion -> <empty>
Rule 38    varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion
Rule 39    createVariableDirFuncion -> <empty>
Rule 40    auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON
Rule 41    addTypeGlobalFuncion -> <empty>
Rule 42    idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion
Rule 43    addVariableDirFuncion -> <empty>
Rule 44    ambIdVarsFuncion -> COMMA idVarsFuncion
Rule 45    ambIdVarsFuncion -> <empty>
Rule 46    estatuto -> asignacion
Rule 47    estatuto -> condicion
Rule 48    estatuto -> escritura
Rule 49    estatuto -> llamada
Rule 50    estatuto -> ciclo
Rule 51    asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
Rule 52    auxAsignacion1 -> LBRACKET exp RBRACKET
Rule 53    auxAsignacion1 -> <empty>
Rule 54    escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
Rule 55    auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1
Rule 56    ambAuxEscritura1 -> COMMA auxEscritura1
Rule 57    ambAuxEscritura1 -> <empty>
Rule 58    auxEscritura2 -> exp
Rule 59    auxEscritura2 -> CTESTRING paso1
Rule 60    cicloExpresion -> expresion paso10
Rule 61    auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion
Rule 62    auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion
Rule 63    auxCicloExpresion -> <empty>
Rule 64    expresion -> exp auxExpresion
Rule 65    auxExpresion -> GTHAN mayor exp
Rule 66    auxExpresion -> LTHAN menor exp
Rule 67    auxExpresion -> NOTEQUAL diferente exp
Rule 68    auxExpresion -> GETHAN mayorIg exp
Rule 69    auxExpresion -> LETHAN menorIg exp
Rule 70    auxExpresion -> EQUAL igual exp
Rule 71    auxExpresion -> <empty>
Rule 72    expAndOr -> cicloExpresion auxCicloExpresion
Rule 73    condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
Rule 74    auxCondicion -> ELSE paso13 bloque
Rule 75    auxCondicion -> <empty>
Rule 76    exp -> cicloExp
Rule 77    cicloExp -> termino paso4 ambExp
Rule 78    ambExp -> auxExp cicloExp
Rule 79    ambExp -> <empty>
Rule 80    auxExp -> PLUS paso3_suma
Rule 81    auxExp -> MINUS paso3_resta
Rule 82    termino -> cicloTermino
Rule 83    cicloTermino -> factor paso5 ambCicloTermino
Rule 84    ambCicloTermino -> auxTermino cicloTermino
Rule 85    ambCicloTermino -> <empty>
Rule 86    auxTermino -> MULTI paso2_mult
Rule 87    auxTermino -> DIVIDE paso2_div
Rule 88    factor -> LPAREN paso6 exp RPAREN paso7
Rule 89    factor -> auxFactor varcte
Rule 90    auxFactor -> auxExp
Rule 91    auxFactor -> <empty>
Rule 92    varcte -> ID paso1 addType auxVarcte
Rule 93    varcte -> CTEINT paso1 cteInt
Rule 94    varcte -> CTEFLOAT paso1 cteFloat
Rule 95    varcte -> CTECHAR paso1 cteChar
Rule 96    varcte -> CTEBOOL paso1 cteBool
Rule 97    varcte -> CTESTRING paso1 cteString
Rule 98    addType -> <empty>
Rule 99    auxVarcte -> LPAREN exp RPAREN
Rule 100   auxVarcte -> LBRACKET exp LBRACKET
Rule 101   auxVarcte -> <empty>
Rule 102   cicloFuncion -> funcion cicloFuncion
Rule 103   cicloFuncion -> <empty>
Rule 104   funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc
Rule 105   addProcDirectoryFunc -> <empty>
Rule 106   auxFunction -> parametros
Rule 107   auxFunction -> <empty>
Rule 108   parametros -> auxParametros
Rule 109   auxParametros -> tipo ID addParameters ambAuxParametros
Rule 110   addParameters -> <empty>
Rule 111   ambAuxParametros -> COMMA auxParametros
Rule 112   ambAuxParametros -> <empty>
Rule 113   ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17
Rule 114   llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON
Rule 115   auxLlamada -> argumentos
Rule 116   auxLlamada -> <empty>
Rule 117   argumentos -> auxArgumentos1
Rule 118   argumentos -> <empty>
Rule 119   auxArgumentos1 -> exp ambAuxArgumentos1
Rule 120   ambAuxArgumentos1 -> COMMA auxArgumentos1
Rule 121   ambAuxArgumentos1 -> <empty>
Rule 122   lectura -> READ LPAREN ID RPAREN SEMICOLON
Rule 123   paso1 -> <empty>
Rule 124   paso2_mult -> <empty>
Rule 125   paso2_div -> <empty>
Rule 126   paso3_suma -> <empty>
Rule 127   paso3_resta -> <empty>
Rule 128   paso4 -> <empty>
Rule 129   paso5 -> <empty>
Rule 130   paso6 -> <empty>
Rule 131   paso7 -> <empty>
Rule 132   paso8_and -> <empty>
Rule 133   paso8_or -> <empty>
Rule 134   paso9 -> <empty>
Rule 135   paso10 -> <empty>
Rule 136   paso11 -> <empty>
Rule 137   paso12 -> <empty>
Rule 138   paso13 -> <empty>
Rule 139   paso14 -> <empty>
Rule 140   paso15 -> <empty>
Rule 141   paso16 -> <empty>
Rule 142   paso17 -> <empty>
Rule 143   paso18 -> <empty>
Rule 144   cteInt -> <empty>
Rule 145   cteFloat -> <empty>
Rule 146   cteChar -> <empty>
Rule 147   cteBool -> <empty>
Rule 148   cteString -> <empty>
Rule 149   mayor -> <empty>
Rule 150   menor -> <empty>
Rule 151   mayorIg -> <empty>
Rule 152   menorIg -> <empty>
Rule 153   igual -> <empty>
Rule 154   diferente -> <empty>
Rule 155   asig -> <empty>

Terminals, with rules where they appear

AND                  : 61
BOOL                 : 14
CHAR                 : 17
COLON                : 7 24 40
COMMA                : 11 28 44 56 111 120
CTEBOOL              : 96
CTECHAR              : 95
CTEFLOAT             : 94
CTEINT               : 18 93
CTESTRING            : 59 97
DIVIDE               : 87
ELSE                 : 74
EQUAL                : 70
EQUALA               : 51
FLOAT                : 16
FUNCTION             : 104
GETHAN               : 68
GTHAN                : 65
ID                   : 1 9 26 42 51 92 104 109 114 122
IF                   : 73
INT                  : 13
LBRACE               : 30 33
LBRACKET             : 18 52 100 100
LETHAN               : 69
LPAREN               : 54 73 88 99 104 113 114 122
LTHAN                : 66
MAIN                 : 1
MINUS                : 81
MULTI                : 86
NOTEQUAL             : 67
OR                   : 62
PLUS                 : 80
PRINT                : 54
PROGRAM              : 1
RBRACE               : 30 33
RBRACKET             : 18 52
READ                 : 122
RETURN               : 33
RPAREN               : 54 73 88 99 104 113 114 122
SEMICOLON            : 1 7 24 33 40 51 54 114 122
STRING               : 15
VAR                  : 5 22 38
WHILE                : 113
error                : 

Nonterminals, with rules where they appear

addParameters        : 109
addProcDirectoryFunc : 104
addProcedureDir      : 1
addType              : 51 92
addTypeGlobal        : 7
addTypeGlobalFuncion : 40
addTypeGlobalMain    : 24
addVariableDir       : 9
addVariableDirFuncion : 42
addVariableDirMain   : 26
ambAuxArgumentos1    : 119
ambAuxEscritura1     : 55
ambAuxParametros     : 109
ambAuxTipo1          : 13 14 15 16 17
ambCicloTermino      : 83
ambExp               : 77
ambIdVars            : 9
ambIdVarsFuncion     : 42
ambIdVarsMain        : 26
argumentos           : 115
asig                 : 51
asignacion           : 46
auxArgumentos1       : 117 120
auxAsignacion1       : 51
auxCicloExpresion    : 61 62 72
auxCondicion         : 73
auxEscritura1        : 54 56
auxEscritura2        : 55
auxExp               : 78 90
auxExpresion         : 64
auxFactor            : 89
auxFunction          : 104
auxLlamada           : 114
auxParametros        : 108 111
auxTermino           : 84
auxVar1              : 5
auxVar1Funcion       : 38
auxVar1Main          : 22
auxVarcte            : 92
bloque               : 1 73 74 113
bloqueFuncion        : 104
ciclo                : 50
cicloBloque          : 30 31
cicloBloqueFuncion   : 33 34
cicloExp             : 76 78
cicloExpresion       : 61 62 72
cicloFuncion         : 1 102
cicloTermino         : 82 84
cicloVars            : 1 3
cicloVarsFuncion     : 33 36
cicloVarsMain        : 20 30
condicion            : 47
createVariableDir    : 5
createVariableDirFuncion : 38
createVariableDirMain : 22
cteBool              : 96
cteChar              : 95
cteFloat             : 94
cteInt               : 93
cteString            : 97
diferente            : 67
escritura            : 48
estatuto             : 31 34
exp                  : 51 52 58 64 65 66 67 68 69 70 88 99 100 119
expAndOr             : 73 113
expresion            : 33 60
factor               : 83
funcion              : 102
idVars               : 7 11
idVarsFuncion        : 40 44
idVarsMain           : 24 28
igual                : 70
lectura              : 
llamada              : 49
mayor                : 65
mayorIg              : 68
menor                : 66
menorIg              : 69
parametros           : 106
paso1                : 51 59 92 93 94 95 96 97
paso10               : 60
paso11               : 51
paso12               : 73
paso13               : 74
paso14               : 73
paso15               : 113
paso16               : 113
paso17               : 113
paso18               : 55
paso2_div            : 87
paso2_mult           : 86
paso3_resta          : 81
paso3_suma           : 80
paso4                : 77
paso5                : 83
paso6                : 88
paso7                : 88
paso8_and            : 61
paso8_or             : 62
paso9                : 61 62
programa             : 0
termino              : 77
tipo                 : 7 24 40 104 109
varcte               : 89
vars                 : 3
varsFuncion          : 36
varsMain             : 20

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque
    (2) addProcedureDir -> .

    SEMICOLON       reduce using rule 2 (addProcedureDir -> .)

    addProcedureDir                shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProcedureDir . SEMICOLON cicloVars cicloFuncion MAIN bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON . cicloVars cicloFuncion MAIN bloque
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    vars                           shift and go to state 6
    cicloVars                      shift and go to state 7
    createVariableDir              shift and go to state 8

state 6

    (3) cicloVars -> vars . cicloVars
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    createVariableDir              shift and go to state 8
    cicloVars                      shift and go to state 9
    vars                           shift and go to state 6

state 7

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars . cicloFuncion MAIN bloque
    (102) cicloFuncion -> . funcion cicloFuncion
    (103) cicloFuncion -> .
    (104) funcion -> . FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    MAIN            reduce using rule 103 (cicloFuncion -> .)
    FUNCTION        shift and go to state 10

    cicloFuncion                   shift and go to state 11
    funcion                        shift and go to state 12

state 8

    (5) vars -> createVariableDir . VAR auxVar1

    VAR             shift and go to state 13


state 9

    (3) cicloVars -> vars cicloVars .

    FUNCTION        reduce using rule 3 (cicloVars -> vars cicloVars .)
    MAIN            reduce using rule 3 (cicloVars -> vars cicloVars .)


state 10

    (104) funcion -> FUNCTION . tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 15

state 11

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion . MAIN bloque

    MAIN            shift and go to state 20


state 12

    (102) cicloFuncion -> funcion . cicloFuncion
    (102) cicloFuncion -> . funcion cicloFuncion
    (103) cicloFuncion -> .
    (104) funcion -> . FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    MAIN            reduce using rule 103 (cicloFuncion -> .)
    FUNCTION        shift and go to state 10

    cicloFuncion                   shift and go to state 21
    funcion                        shift and go to state 12

state 13

    (5) vars -> createVariableDir VAR . auxVar1
    (7) auxVar1 -> . idVars COLON tipo addTypeGlobal SEMICOLON
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 24

    idVars                         shift and go to state 22
    auxVar1                        shift and go to state 23

state 14

    (15) tipo -> STRING . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 26

state 15

    (104) funcion -> FUNCTION tipo . ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    ID              shift and go to state 27


state 16

    (13) tipo -> INT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 28

state 17

    (16) tipo -> FLOAT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 29

state 18

    (17) tipo -> CHAR . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 30

state 19

    (14) tipo -> BOOL . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 31

state 20

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN . bloque
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 33

state 21

    (102) cicloFuncion -> funcion cicloFuncion .

    MAIN            reduce using rule 102 (cicloFuncion -> funcion cicloFuncion .)


state 22

    (7) auxVar1 -> idVars . COLON tipo addTypeGlobal SEMICOLON

    COLON           shift and go to state 34


state 23

    (5) vars -> createVariableDir VAR auxVar1 .

    VAR             reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    FUNCTION        reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    MAIN            reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)


state 24

    (9) idVars -> ID . addVariableDir ambIdVars
    (10) addVariableDir -> .

    COMMA           reduce using rule 10 (addVariableDir -> .)
    COLON           reduce using rule 10 (addVariableDir -> .)

    addVariableDir                 shift and go to state 35

state 25

    (18) ambAuxTipo1 -> LBRACKET . CTEINT RBRACKET

    CTEINT          shift and go to state 36


state 26

    (15) tipo -> STRING ambAuxTipo1 .

    SEMICOLON       reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)
    ID              reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)


state 27

    (104) funcion -> FUNCTION tipo ID . LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    LPAREN          shift and go to state 37


state 28

    (13) tipo -> INT ambAuxTipo1 .

    SEMICOLON       reduce using rule 13 (tipo -> INT ambAuxTipo1 .)
    ID              reduce using rule 13 (tipo -> INT ambAuxTipo1 .)


state 29

    (16) tipo -> FLOAT ambAuxTipo1 .

    SEMICOLON       reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)
    ID              reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)


state 30

    (17) tipo -> CHAR ambAuxTipo1 .

    SEMICOLON       reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)
    ID              reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)


state 31

    (14) tipo -> BOOL ambAuxTipo1 .

    SEMICOLON       reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)
    ID              reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)


state 32

    (30) bloque -> LBRACE . cicloVarsMain cicloBloque RBRACE
    (20) cicloVarsMain -> . varsMain cicloVarsMain
    (21) cicloVarsMain -> .
    (22) varsMain -> . createVariableDirMain VAR auxVar1Main
    (23) createVariableDirMain -> .

    ID              reduce using rule 21 (cicloVarsMain -> .)
    IF              reduce using rule 21 (cicloVarsMain -> .)
    PRINT           reduce using rule 21 (cicloVarsMain -> .)
    WHILE           reduce using rule 21 (cicloVarsMain -> .)
    RBRACE          reduce using rule 21 (cicloVarsMain -> .)
    VAR             reduce using rule 23 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 39
    createVariableDirMain          shift and go to state 38
    varsMain                       shift and go to state 40

state 33

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque .)


state 34

    (7) auxVar1 -> idVars COLON . tipo addTypeGlobal SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 41

state 35

    (9) idVars -> ID addVariableDir . ambIdVars
    (11) ambIdVars -> . COMMA idVars
    (12) ambIdVars -> .

    COMMA           shift and go to state 43
    COLON           reduce using rule 12 (ambIdVars -> .)

    ambIdVars                      shift and go to state 42

state 36

    (18) ambAuxTipo1 -> LBRACKET CTEINT . RBRACKET

    RBRACKET        shift and go to state 44


state 37

    (104) funcion -> FUNCTION tipo ID LPAREN . auxFunction RPAREN bloqueFuncion addProcDirectoryFunc
    (106) auxFunction -> . parametros
    (107) auxFunction -> .
    (108) parametros -> . auxParametros
    (109) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    RPAREN          reduce using rule 107 (auxFunction -> .)
    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 45
    auxFunction                    shift and go to state 46
    auxParametros                  shift and go to state 47
    parametros                     shift and go to state 48

state 38

    (22) varsMain -> createVariableDirMain . VAR auxVar1Main

    VAR             shift and go to state 49


state 39

    (30) bloque -> LBRACE cicloVarsMain . cicloBloque RBRACE
    (31) cicloBloque -> . estatuto cicloBloque
    (32) cicloBloque -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada
    (50) estatuto -> . ciclo
    (51) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (73) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (54) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (114) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (113) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RBRACE          reduce using rule 32 (cicloBloque -> .)
    ID              shift and go to state 58
    IF              shift and go to state 56
    PRINT           shift and go to state 50
    WHILE           shift and go to state 51

    estatuto                       shift and go to state 53
    llamada                        shift and go to state 54
    condicion                      shift and go to state 55
    cicloBloque                    shift and go to state 57
    ciclo                          shift and go to state 52
    asignacion                     shift and go to state 59
    escritura                      shift and go to state 60

state 40

    (20) cicloVarsMain -> varsMain . cicloVarsMain
    (20) cicloVarsMain -> . varsMain cicloVarsMain
    (21) cicloVarsMain -> .
    (22) varsMain -> . createVariableDirMain VAR auxVar1Main
    (23) createVariableDirMain -> .

    ID              reduce using rule 21 (cicloVarsMain -> .)
    IF              reduce using rule 21 (cicloVarsMain -> .)
    PRINT           reduce using rule 21 (cicloVarsMain -> .)
    WHILE           reduce using rule 21 (cicloVarsMain -> .)
    RBRACE          reduce using rule 21 (cicloVarsMain -> .)
    VAR             reduce using rule 23 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 61
    createVariableDirMain          shift and go to state 38
    varsMain                       shift and go to state 40

state 41

    (7) auxVar1 -> idVars COLON tipo . addTypeGlobal SEMICOLON
    (8) addTypeGlobal -> .

    SEMICOLON       reduce using rule 8 (addTypeGlobal -> .)

    addTypeGlobal                  shift and go to state 62

state 42

    (9) idVars -> ID addVariableDir ambIdVars .

    COLON           reduce using rule 9 (idVars -> ID addVariableDir ambIdVars .)


state 43

    (11) ambIdVars -> COMMA . idVars
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 24

    idVars                         shift and go to state 63

state 44

    (18) ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .

    ID              reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .)
    SEMICOLON       reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .)


state 45

    (109) auxParametros -> tipo . ID addParameters ambAuxParametros

    ID              shift and go to state 64


state 46

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction . RPAREN bloqueFuncion addProcDirectoryFunc

    RPAREN          shift and go to state 65


state 47

    (108) parametros -> auxParametros .

    RPAREN          reduce using rule 108 (parametros -> auxParametros .)


state 48

    (106) auxFunction -> parametros .

    RPAREN          reduce using rule 106 (auxFunction -> parametros .)


state 49

    (22) varsMain -> createVariableDirMain VAR . auxVar1Main
    (24) auxVar1Main -> . idVarsMain COLON tipo addTypeGlobalMain SEMICOLON
    (26) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 68

    auxVar1Main                    shift and go to state 66
    idVarsMain                     shift and go to state 67

state 50

    (54) escritura -> PRINT . LPAREN auxEscritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 69


state 51

    (113) ciclo -> WHILE . paso15 LPAREN expAndOr RPAREN paso16 bloque paso17
    (140) paso15 -> .

    LPAREN          reduce using rule 140 (paso15 -> .)

    paso15                         shift and go to state 70

state 52

    (50) estatuto -> ciclo .

    ID              reduce using rule 50 (estatuto -> ciclo .)
    IF              reduce using rule 50 (estatuto -> ciclo .)
    PRINT           reduce using rule 50 (estatuto -> ciclo .)
    WHILE           reduce using rule 50 (estatuto -> ciclo .)
    RBRACE          reduce using rule 50 (estatuto -> ciclo .)
    RETURN          reduce using rule 50 (estatuto -> ciclo .)


state 53

    (31) cicloBloque -> estatuto . cicloBloque
    (31) cicloBloque -> . estatuto cicloBloque
    (32) cicloBloque -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada
    (50) estatuto -> . ciclo
    (51) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (73) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (54) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (114) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (113) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RBRACE          reduce using rule 32 (cicloBloque -> .)
    ID              shift and go to state 58
    IF              shift and go to state 56
    PRINT           shift and go to state 50
    WHILE           shift and go to state 51

    estatuto                       shift and go to state 53
    llamada                        shift and go to state 54
    condicion                      shift and go to state 55
    cicloBloque                    shift and go to state 71
    ciclo                          shift and go to state 52
    asignacion                     shift and go to state 59
    escritura                      shift and go to state 60

state 54

    (49) estatuto -> llamada .

    ID              reduce using rule 49 (estatuto -> llamada .)
    IF              reduce using rule 49 (estatuto -> llamada .)
    PRINT           reduce using rule 49 (estatuto -> llamada .)
    WHILE           reduce using rule 49 (estatuto -> llamada .)
    RBRACE          reduce using rule 49 (estatuto -> llamada .)
    RETURN          reduce using rule 49 (estatuto -> llamada .)


state 55

    (47) estatuto -> condicion .

    ID              reduce using rule 47 (estatuto -> condicion .)
    IF              reduce using rule 47 (estatuto -> condicion .)
    PRINT           reduce using rule 47 (estatuto -> condicion .)
    WHILE           reduce using rule 47 (estatuto -> condicion .)
    RBRACE          reduce using rule 47 (estatuto -> condicion .)
    RETURN          reduce using rule 47 (estatuto -> condicion .)


state 56

    (73) condicion -> IF . LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14

    LPAREN          shift and go to state 72


state 57

    (30) bloque -> LBRACE cicloVarsMain cicloBloque . RBRACE

    RBRACE          shift and go to state 73


state 58

    (51) asignacion -> ID . paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (114) llamada -> ID . LPAREN auxLlamada RPAREN SEMICOLON
    (123) paso1 -> .

    LPAREN          shift and go to state 74
    LBRACKET        reduce using rule 123 (paso1 -> .)
    EQUALA          reduce using rule 123 (paso1 -> .)

    paso1                          shift and go to state 75

state 59

    (46) estatuto -> asignacion .

    ID              reduce using rule 46 (estatuto -> asignacion .)
    IF              reduce using rule 46 (estatuto -> asignacion .)
    PRINT           reduce using rule 46 (estatuto -> asignacion .)
    WHILE           reduce using rule 46 (estatuto -> asignacion .)
    RBRACE          reduce using rule 46 (estatuto -> asignacion .)
    RETURN          reduce using rule 46 (estatuto -> asignacion .)


state 60

    (48) estatuto -> escritura .

    ID              reduce using rule 48 (estatuto -> escritura .)
    IF              reduce using rule 48 (estatuto -> escritura .)
    PRINT           reduce using rule 48 (estatuto -> escritura .)
    WHILE           reduce using rule 48 (estatuto -> escritura .)
    RBRACE          reduce using rule 48 (estatuto -> escritura .)
    RETURN          reduce using rule 48 (estatuto -> escritura .)


state 61

    (20) cicloVarsMain -> varsMain cicloVarsMain .

    ID              reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    IF              reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    PRINT           reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    WHILE           reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    RBRACE          reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)


state 62

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal . SEMICOLON

    SEMICOLON       shift and go to state 76


state 63

    (11) ambIdVars -> COMMA idVars .

    COLON           reduce using rule 11 (ambIdVars -> COMMA idVars .)


state 64

    (109) auxParametros -> tipo ID . addParameters ambAuxParametros
    (110) addParameters -> .

    COMMA           reduce using rule 110 (addParameters -> .)
    RPAREN          reduce using rule 110 (addParameters -> .)

    addParameters                  shift and go to state 77

state 65

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN . bloqueFuncion addProcDirectoryFunc
    (33) bloqueFuncion -> . LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE

    LBRACE          shift and go to state 78

    bloqueFuncion                  shift and go to state 79

state 66

    (22) varsMain -> createVariableDirMain VAR auxVar1Main .

    VAR             reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    ID              reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    IF              reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    PRINT           reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    WHILE           reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    RBRACE          reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)


state 67

    (24) auxVar1Main -> idVarsMain . COLON tipo addTypeGlobalMain SEMICOLON

    COLON           shift and go to state 80


state 68

    (26) idVarsMain -> ID . addVariableDirMain ambIdVarsMain
    (27) addVariableDirMain -> .

    COMMA           reduce using rule 27 (addVariableDirMain -> .)
    COLON           reduce using rule 27 (addVariableDirMain -> .)

    addVariableDirMain             shift and go to state 81

state 69

    (54) escritura -> PRINT LPAREN . auxEscritura1 RPAREN SEMICOLON
    (55) auxEscritura1 -> . auxEscritura2 paso18 ambAuxEscritura1
    (58) auxEscritura2 -> . exp
    (59) auxEscritura2 -> . CTESTRING paso1
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 82
    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

  ! CTESTRING       [ reduce using rule 91 (auxFactor -> .) ]

    auxExp                         shift and go to state 85
    auxEscritura1                  shift and go to state 90
    auxEscritura2                  shift and go to state 91
    termino                        shift and go to state 83
    exp                            shift and go to state 94
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 70

    (113) ciclo -> WHILE paso15 . LPAREN expAndOr RPAREN paso16 bloque paso17

    LPAREN          shift and go to state 95


state 71

    (31) cicloBloque -> estatuto cicloBloque .

    RBRACE          reduce using rule 31 (cicloBloque -> estatuto cicloBloque .)


state 72

    (73) condicion -> IF LPAREN . expAndOr paso12 RPAREN bloque auxCondicion paso14
    (72) expAndOr -> . cicloExpresion auxCicloExpresion
    (60) cicloExpresion -> . expresion paso10
    (64) expresion -> . exp auxExpresion
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    expAndOr                       shift and go to state 96
    termino                        shift and go to state 83
    cicloExpresion                 shift and go to state 97
    auxExp                         shift and go to state 85
    cicloTermino                   shift and go to state 87
    factor                         shift and go to state 88
    cicloExp                       shift and go to state 89
    auxFactor                      shift and go to state 93
    expresion                      shift and go to state 98
    exp                            shift and go to state 99

state 73

    (30) bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .

    $end            reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    ID              reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    IF              reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    PRINT           reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    WHILE           reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RBRACE          reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RETURN          reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    ELSE            reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)


state 74

    (114) llamada -> ID LPAREN . auxLlamada RPAREN SEMICOLON
    (115) auxLlamada -> . argumentos
    (116) auxLlamada -> .
    (117) argumentos -> . auxArgumentos1
    (118) argumentos -> .
    (119) auxArgumentos1 -> . exp ambAuxArgumentos1
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

  ! reduce/reduce conflict for RPAREN resolved using rule 116 (auxLlamada -> .)
    RPAREN          reduce using rule 116 (auxLlamada -> .)
    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

  ! RPAREN          [ reduce using rule 118 (argumentos -> .) ]

    auxExp                         shift and go to state 85
    auxLlamada                     shift and go to state 101
    termino                        shift and go to state 83
    exp                            shift and go to state 103
    factor                         shift and go to state 88
    argumentos                     shift and go to state 100
    auxFactor                      shift and go to state 93
    auxArgumentos1                 shift and go to state 102
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 75

    (51) asignacion -> ID paso1 . addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (98) addType -> .

    LBRACKET        reduce using rule 98 (addType -> .)
    EQUALA          reduce using rule 98 (addType -> .)

    addType                        shift and go to state 104

state 76

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .

    VAR             reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    FUNCTION        reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    MAIN            reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)


state 77

    (109) auxParametros -> tipo ID addParameters . ambAuxParametros
    (111) ambAuxParametros -> . COMMA auxParametros
    (112) ambAuxParametros -> .

    COMMA           shift and go to state 105
    RPAREN          reduce using rule 112 (ambAuxParametros -> .)

    ambAuxParametros               shift and go to state 106

state 78

    (33) bloqueFuncion -> LBRACE . cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
    (36) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (37) cicloVarsFuncion -> .
    (38) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (39) createVariableDirFuncion -> .

    ID              reduce using rule 37 (cicloVarsFuncion -> .)
    IF              reduce using rule 37 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 37 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 37 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 37 (cicloVarsFuncion -> .)
    VAR             reduce using rule 39 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 107
    cicloVarsFuncion               shift and go to state 108
    createVariableDirFuncion       shift and go to state 109

state 79

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion . addProcDirectoryFunc
    (105) addProcDirectoryFunc -> .

    FUNCTION        reduce using rule 105 (addProcDirectoryFunc -> .)
    MAIN            reduce using rule 105 (addProcDirectoryFunc -> .)

    addProcDirectoryFunc           shift and go to state 110

state 80

    (24) auxVar1Main -> idVarsMain COLON . tipo addTypeGlobalMain SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 111

state 81

    (26) idVarsMain -> ID addVariableDirMain . ambIdVarsMain
    (28) ambIdVarsMain -> . COMMA idVarsMain
    (29) ambIdVarsMain -> .

    COMMA           shift and go to state 113
    COLON           reduce using rule 29 (ambIdVarsMain -> .)

    ambIdVarsMain                  shift and go to state 112

state 82

    (59) auxEscritura2 -> CTESTRING . paso1
    (123) paso1 -> .

    COMMA           reduce using rule 123 (paso1 -> .)
    RPAREN          reduce using rule 123 (paso1 -> .)

    paso1                          shift and go to state 114

state 83

    (77) cicloExp -> termino . paso4 ambExp
    (128) paso4 -> .

    PLUS            reduce using rule 128 (paso4 -> .)
    MINUS           reduce using rule 128 (paso4 -> .)
    COMMA           reduce using rule 128 (paso4 -> .)
    RPAREN          reduce using rule 128 (paso4 -> .)
    GTHAN           reduce using rule 128 (paso4 -> .)
    LTHAN           reduce using rule 128 (paso4 -> .)
    NOTEQUAL        reduce using rule 128 (paso4 -> .)
    GETHAN          reduce using rule 128 (paso4 -> .)
    LETHAN          reduce using rule 128 (paso4 -> .)
    EQUAL           reduce using rule 128 (paso4 -> .)
    AND             reduce using rule 128 (paso4 -> .)
    OR              reduce using rule 128 (paso4 -> .)
    RBRACKET        reduce using rule 128 (paso4 -> .)
    SEMICOLON       reduce using rule 128 (paso4 -> .)
    LBRACKET        reduce using rule 128 (paso4 -> .)

    paso4                          shift and go to state 115

state 84

    (81) auxExp -> MINUS . paso3_resta
    (127) paso3_resta -> .

    ID              reduce using rule 127 (paso3_resta -> .)
    CTEINT          reduce using rule 127 (paso3_resta -> .)
    CTEFLOAT        reduce using rule 127 (paso3_resta -> .)
    CTECHAR         reduce using rule 127 (paso3_resta -> .)
    CTEBOOL         reduce using rule 127 (paso3_resta -> .)
    CTESTRING       reduce using rule 127 (paso3_resta -> .)
    LPAREN          reduce using rule 127 (paso3_resta -> .)
    PLUS            reduce using rule 127 (paso3_resta -> .)
    MINUS           reduce using rule 127 (paso3_resta -> .)

    paso3_resta                    shift and go to state 116

state 85

    (90) auxFactor -> auxExp .

    ID              reduce using rule 90 (auxFactor -> auxExp .)
    CTEINT          reduce using rule 90 (auxFactor -> auxExp .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> auxExp .)
    CTECHAR         reduce using rule 90 (auxFactor -> auxExp .)
    CTEBOOL         reduce using rule 90 (auxFactor -> auxExp .)
    CTESTRING       reduce using rule 90 (auxFactor -> auxExp .)


state 86

    (80) auxExp -> PLUS . paso3_suma
    (126) paso3_suma -> .

    ID              reduce using rule 126 (paso3_suma -> .)
    CTEINT          reduce using rule 126 (paso3_suma -> .)
    CTEFLOAT        reduce using rule 126 (paso3_suma -> .)
    CTECHAR         reduce using rule 126 (paso3_suma -> .)
    CTEBOOL         reduce using rule 126 (paso3_suma -> .)
    CTESTRING       reduce using rule 126 (paso3_suma -> .)
    LPAREN          reduce using rule 126 (paso3_suma -> .)
    PLUS            reduce using rule 126 (paso3_suma -> .)
    MINUS           reduce using rule 126 (paso3_suma -> .)

    paso3_suma                     shift and go to state 117

state 87

    (82) termino -> cicloTermino .

    PLUS            reduce using rule 82 (termino -> cicloTermino .)
    MINUS           reduce using rule 82 (termino -> cicloTermino .)
    AND             reduce using rule 82 (termino -> cicloTermino .)
    OR              reduce using rule 82 (termino -> cicloTermino .)
    RPAREN          reduce using rule 82 (termino -> cicloTermino .)
    SEMICOLON       reduce using rule 82 (termino -> cicloTermino .)
    COMMA           reduce using rule 82 (termino -> cicloTermino .)
    LBRACKET        reduce using rule 82 (termino -> cicloTermino .)
    GTHAN           reduce using rule 82 (termino -> cicloTermino .)
    LTHAN           reduce using rule 82 (termino -> cicloTermino .)
    NOTEQUAL        reduce using rule 82 (termino -> cicloTermino .)
    GETHAN          reduce using rule 82 (termino -> cicloTermino .)
    LETHAN          reduce using rule 82 (termino -> cicloTermino .)
    EQUAL           reduce using rule 82 (termino -> cicloTermino .)
    RBRACKET        reduce using rule 82 (termino -> cicloTermino .)


state 88

    (83) cicloTermino -> factor . paso5 ambCicloTermino
    (129) paso5 -> .

    MULTI           reduce using rule 129 (paso5 -> .)
    DIVIDE          reduce using rule 129 (paso5 -> .)
    PLUS            reduce using rule 129 (paso5 -> .)
    MINUS           reduce using rule 129 (paso5 -> .)
    COMMA           reduce using rule 129 (paso5 -> .)
    RPAREN          reduce using rule 129 (paso5 -> .)
    GTHAN           reduce using rule 129 (paso5 -> .)
    LTHAN           reduce using rule 129 (paso5 -> .)
    NOTEQUAL        reduce using rule 129 (paso5 -> .)
    GETHAN          reduce using rule 129 (paso5 -> .)
    LETHAN          reduce using rule 129 (paso5 -> .)
    EQUAL           reduce using rule 129 (paso5 -> .)
    AND             reduce using rule 129 (paso5 -> .)
    OR              reduce using rule 129 (paso5 -> .)
    RBRACKET        reduce using rule 129 (paso5 -> .)
    SEMICOLON       reduce using rule 129 (paso5 -> .)
    LBRACKET        reduce using rule 129 (paso5 -> .)

    paso5                          shift and go to state 118

state 89

    (76) exp -> cicloExp .

    AND             reduce using rule 76 (exp -> cicloExp .)
    OR              reduce using rule 76 (exp -> cicloExp .)
    RPAREN          reduce using rule 76 (exp -> cicloExp .)
    SEMICOLON       reduce using rule 76 (exp -> cicloExp .)
    LBRACKET        reduce using rule 76 (exp -> cicloExp .)
    COMMA           reduce using rule 76 (exp -> cicloExp .)
    GTHAN           reduce using rule 76 (exp -> cicloExp .)
    LTHAN           reduce using rule 76 (exp -> cicloExp .)
    NOTEQUAL        reduce using rule 76 (exp -> cicloExp .)
    GETHAN          reduce using rule 76 (exp -> cicloExp .)
    LETHAN          reduce using rule 76 (exp -> cicloExp .)
    EQUAL           reduce using rule 76 (exp -> cicloExp .)
    RBRACKET        reduce using rule 76 (exp -> cicloExp .)


state 90

    (54) escritura -> PRINT LPAREN auxEscritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 119


state 91

    (55) auxEscritura1 -> auxEscritura2 . paso18 ambAuxEscritura1
    (143) paso18 -> .

    COMMA           reduce using rule 143 (paso18 -> .)
    RPAREN          reduce using rule 143 (paso18 -> .)

    paso18                         shift and go to state 120

state 92

    (88) factor -> LPAREN . paso6 exp RPAREN paso7
    (130) paso6 -> .

    LPAREN          reduce using rule 130 (paso6 -> .)
    PLUS            reduce using rule 130 (paso6 -> .)
    MINUS           reduce using rule 130 (paso6 -> .)
    ID              reduce using rule 130 (paso6 -> .)
    CTEINT          reduce using rule 130 (paso6 -> .)
    CTEFLOAT        reduce using rule 130 (paso6 -> .)
    CTECHAR         reduce using rule 130 (paso6 -> .)
    CTEBOOL         reduce using rule 130 (paso6 -> .)
    CTESTRING       reduce using rule 130 (paso6 -> .)

    paso6                          shift and go to state 121

state 93

    (89) factor -> auxFactor . varcte
    (92) varcte -> . ID paso1 addType auxVarcte
    (93) varcte -> . CTEINT paso1 cteInt
    (94) varcte -> . CTEFLOAT paso1 cteFloat
    (95) varcte -> . CTECHAR paso1 cteChar
    (96) varcte -> . CTEBOOL paso1 cteBool
    (97) varcte -> . CTESTRING paso1 cteString

    ID              shift and go to state 128
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126
    CTECHAR         shift and go to state 127
    CTEBOOL         shift and go to state 124
    CTESTRING       shift and go to state 122

    varcte                         shift and go to state 123

state 94

    (58) auxEscritura2 -> exp .

    COMMA           reduce using rule 58 (auxEscritura2 -> exp .)
    RPAREN          reduce using rule 58 (auxEscritura2 -> exp .)


state 95

    (113) ciclo -> WHILE paso15 LPAREN . expAndOr RPAREN paso16 bloque paso17
    (72) expAndOr -> . cicloExpresion auxCicloExpresion
    (60) cicloExpresion -> . expresion paso10
    (64) expresion -> . exp auxExpresion
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    expAndOr                       shift and go to state 129
    termino                        shift and go to state 83
    cicloExpresion                 shift and go to state 97
    auxExp                         shift and go to state 85
    cicloTermino                   shift and go to state 87
    factor                         shift and go to state 88
    cicloExp                       shift and go to state 89
    auxFactor                      shift and go to state 93
    expresion                      shift and go to state 98
    exp                            shift and go to state 99

state 96

    (73) condicion -> IF LPAREN expAndOr . paso12 RPAREN bloque auxCondicion paso14
    (137) paso12 -> .

    RPAREN          reduce using rule 137 (paso12 -> .)

    paso12                         shift and go to state 130

state 97

    (72) expAndOr -> cicloExpresion . auxCicloExpresion
    (61) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (62) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (63) auxCicloExpresion -> .

    AND             shift and go to state 131
    OR              shift and go to state 133
    RPAREN          reduce using rule 63 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 132

state 98

    (60) cicloExpresion -> expresion . paso10
    (135) paso10 -> .

    AND             reduce using rule 135 (paso10 -> .)
    OR              reduce using rule 135 (paso10 -> .)
    RPAREN          reduce using rule 135 (paso10 -> .)

    paso10                         shift and go to state 134

state 99

    (64) expresion -> exp . auxExpresion
    (65) auxExpresion -> . GTHAN mayor exp
    (66) auxExpresion -> . LTHAN menor exp
    (67) auxExpresion -> . NOTEQUAL diferente exp
    (68) auxExpresion -> . GETHAN mayorIg exp
    (69) auxExpresion -> . LETHAN menorIg exp
    (70) auxExpresion -> . EQUAL igual exp
    (71) auxExpresion -> .

    GTHAN           shift and go to state 137
    LTHAN           shift and go to state 140
    NOTEQUAL        shift and go to state 135
    GETHAN          shift and go to state 139
    LETHAN          shift and go to state 141
    EQUAL           shift and go to state 138
    AND             reduce using rule 71 (auxExpresion -> .)
    OR              reduce using rule 71 (auxExpresion -> .)
    RPAREN          reduce using rule 71 (auxExpresion -> .)
    SEMICOLON       reduce using rule 71 (auxExpresion -> .)

    auxExpresion                   shift and go to state 136

state 100

    (115) auxLlamada -> argumentos .

    RPAREN          reduce using rule 115 (auxLlamada -> argumentos .)


state 101

    (114) llamada -> ID LPAREN auxLlamada . RPAREN SEMICOLON

    RPAREN          shift and go to state 142


state 102

    (117) argumentos -> auxArgumentos1 .

    RPAREN          reduce using rule 117 (argumentos -> auxArgumentos1 .)


state 103

    (119) auxArgumentos1 -> exp . ambAuxArgumentos1
    (120) ambAuxArgumentos1 -> . COMMA auxArgumentos1
    (121) ambAuxArgumentos1 -> .

    COMMA           shift and go to state 144
    RPAREN          reduce using rule 121 (ambAuxArgumentos1 -> .)

    ambAuxArgumentos1              shift and go to state 143

state 104

    (51) asignacion -> ID paso1 addType . auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (52) auxAsignacion1 -> . LBRACKET exp RBRACKET
    (53) auxAsignacion1 -> .

    LBRACKET        shift and go to state 146
    EQUALA          reduce using rule 53 (auxAsignacion1 -> .)

    auxAsignacion1                 shift and go to state 145

state 105

    (111) ambAuxParametros -> COMMA . auxParametros
    (109) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 45
    auxParametros                  shift and go to state 147

state 106

    (109) auxParametros -> tipo ID addParameters ambAuxParametros .

    RPAREN          reduce using rule 109 (auxParametros -> tipo ID addParameters ambAuxParametros .)


state 107

    (36) cicloVarsFuncion -> varsFuncion . cicloVarsFuncion
    (36) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (37) cicloVarsFuncion -> .
    (38) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (39) createVariableDirFuncion -> .

    ID              reduce using rule 37 (cicloVarsFuncion -> .)
    IF              reduce using rule 37 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 37 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 37 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 37 (cicloVarsFuncion -> .)
    VAR             reduce using rule 39 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 107
    cicloVarsFuncion               shift and go to state 148
    createVariableDirFuncion       shift and go to state 109

state 108

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion . cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE
    (34) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (35) cicloBloqueFuncion -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada
    (50) estatuto -> . ciclo
    (51) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (73) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (54) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (114) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (113) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RETURN          reduce using rule 35 (cicloBloqueFuncion -> .)
    ID              shift and go to state 58
    IF              shift and go to state 56
    PRINT           shift and go to state 50
    WHILE           shift and go to state 51

    estatuto                       shift and go to state 149
    llamada                        shift and go to state 54
    condicion                      shift and go to state 55
    cicloBloqueFuncion             shift and go to state 150
    ciclo                          shift and go to state 52
    asignacion                     shift and go to state 59
    escritura                      shift and go to state 60

state 109

    (38) varsFuncion -> createVariableDirFuncion . VAR auxVar1Funcion

    VAR             shift and go to state 151


state 110

    (104) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc .

    FUNCTION        reduce using rule 104 (funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc .)
    MAIN            reduce using rule 104 (funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc .)


state 111

    (24) auxVar1Main -> idVarsMain COLON tipo . addTypeGlobalMain SEMICOLON
    (25) addTypeGlobalMain -> .

    SEMICOLON       reduce using rule 25 (addTypeGlobalMain -> .)

    addTypeGlobalMain              shift and go to state 152

state 112

    (26) idVarsMain -> ID addVariableDirMain ambIdVarsMain .

    COLON           reduce using rule 26 (idVarsMain -> ID addVariableDirMain ambIdVarsMain .)


state 113

    (28) ambIdVarsMain -> COMMA . idVarsMain
    (26) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 68

    idVarsMain                     shift and go to state 153

state 114

    (59) auxEscritura2 -> CTESTRING paso1 .

    COMMA           reduce using rule 59 (auxEscritura2 -> CTESTRING paso1 .)
    RPAREN          reduce using rule 59 (auxEscritura2 -> CTESTRING paso1 .)


state 115

    (77) cicloExp -> termino paso4 . ambExp
    (78) ambExp -> . auxExp cicloExp
    (79) ambExp -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    COMMA           reduce using rule 79 (ambExp -> .)
    RPAREN          reduce using rule 79 (ambExp -> .)
    GTHAN           reduce using rule 79 (ambExp -> .)
    LTHAN           reduce using rule 79 (ambExp -> .)
    NOTEQUAL        reduce using rule 79 (ambExp -> .)
    GETHAN          reduce using rule 79 (ambExp -> .)
    LETHAN          reduce using rule 79 (ambExp -> .)
    EQUAL           reduce using rule 79 (ambExp -> .)
    AND             reduce using rule 79 (ambExp -> .)
    OR              reduce using rule 79 (ambExp -> .)
    RBRACKET        reduce using rule 79 (ambExp -> .)
    SEMICOLON       reduce using rule 79 (ambExp -> .)
    LBRACKET        reduce using rule 79 (ambExp -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 154
    ambExp                         shift and go to state 155

state 116

    (81) auxExp -> MINUS paso3_resta .

    ID              reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    CTEINT          reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    CTEFLOAT        reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    CTECHAR         reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    CTEBOOL         reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    CTESTRING       reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    LPAREN          reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    PLUS            reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    MINUS           reduce using rule 81 (auxExp -> MINUS paso3_resta .)


state 117

    (80) auxExp -> PLUS paso3_suma .

    ID              reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    CTEINT          reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    CTEFLOAT        reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    CTECHAR         reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    CTEBOOL         reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    CTESTRING       reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    LPAREN          reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    PLUS            reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    MINUS           reduce using rule 80 (auxExp -> PLUS paso3_suma .)


state 118

    (83) cicloTermino -> factor paso5 . ambCicloTermino
    (84) ambCicloTermino -> . auxTermino cicloTermino
    (85) ambCicloTermino -> .
    (86) auxTermino -> . MULTI paso2_mult
    (87) auxTermino -> . DIVIDE paso2_div

    PLUS            reduce using rule 85 (ambCicloTermino -> .)
    MINUS           reduce using rule 85 (ambCicloTermino -> .)
    COMMA           reduce using rule 85 (ambCicloTermino -> .)
    RPAREN          reduce using rule 85 (ambCicloTermino -> .)
    GTHAN           reduce using rule 85 (ambCicloTermino -> .)
    LTHAN           reduce using rule 85 (ambCicloTermino -> .)
    NOTEQUAL        reduce using rule 85 (ambCicloTermino -> .)
    GETHAN          reduce using rule 85 (ambCicloTermino -> .)
    LETHAN          reduce using rule 85 (ambCicloTermino -> .)
    EQUAL           reduce using rule 85 (ambCicloTermino -> .)
    AND             reduce using rule 85 (ambCicloTermino -> .)
    OR              reduce using rule 85 (ambCicloTermino -> .)
    RBRACKET        reduce using rule 85 (ambCicloTermino -> .)
    SEMICOLON       reduce using rule 85 (ambCicloTermino -> .)
    LBRACKET        reduce using rule 85 (ambCicloTermino -> .)
    MULTI           shift and go to state 156
    DIVIDE          shift and go to state 159

    ambCicloTermino                shift and go to state 157
    auxTermino                     shift and go to state 158

state 119

    (54) escritura -> PRINT LPAREN auxEscritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 160


state 120

    (55) auxEscritura1 -> auxEscritura2 paso18 . ambAuxEscritura1
    (56) ambAuxEscritura1 -> . COMMA auxEscritura1
    (57) ambAuxEscritura1 -> .

    COMMA           shift and go to state 161
    RPAREN          reduce using rule 57 (ambAuxEscritura1 -> .)

    ambAuxEscritura1               shift and go to state 162

state 121

    (88) factor -> LPAREN paso6 . exp RPAREN paso7
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    termino                        shift and go to state 83
    exp                            shift and go to state 163
    factor                         shift and go to state 88
    cicloTermino                   shift and go to state 87
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89

state 122

    (97) varcte -> CTESTRING . paso1 cteString
    (123) paso1 -> .

    MULTI           reduce using rule 123 (paso1 -> .)
    DIVIDE          reduce using rule 123 (paso1 -> .)
    PLUS            reduce using rule 123 (paso1 -> .)
    MINUS           reduce using rule 123 (paso1 -> .)
    COMMA           reduce using rule 123 (paso1 -> .)
    RPAREN          reduce using rule 123 (paso1 -> .)
    GTHAN           reduce using rule 123 (paso1 -> .)
    LTHAN           reduce using rule 123 (paso1 -> .)
    NOTEQUAL        reduce using rule 123 (paso1 -> .)
    GETHAN          reduce using rule 123 (paso1 -> .)
    LETHAN          reduce using rule 123 (paso1 -> .)
    EQUAL           reduce using rule 123 (paso1 -> .)
    AND             reduce using rule 123 (paso1 -> .)
    OR              reduce using rule 123 (paso1 -> .)
    RBRACKET        reduce using rule 123 (paso1 -> .)
    SEMICOLON       reduce using rule 123 (paso1 -> .)
    LBRACKET        reduce using rule 123 (paso1 -> .)

    paso1                          shift and go to state 164

state 123

    (89) factor -> auxFactor varcte .

    MULTI           reduce using rule 89 (factor -> auxFactor varcte .)
    DIVIDE          reduce using rule 89 (factor -> auxFactor varcte .)
    PLUS            reduce using rule 89 (factor -> auxFactor varcte .)
    MINUS           reduce using rule 89 (factor -> auxFactor varcte .)
    GTHAN           reduce using rule 89 (factor -> auxFactor varcte .)
    LTHAN           reduce using rule 89 (factor -> auxFactor varcte .)
    NOTEQUAL        reduce using rule 89 (factor -> auxFactor varcte .)
    GETHAN          reduce using rule 89 (factor -> auxFactor varcte .)
    LETHAN          reduce using rule 89 (factor -> auxFactor varcte .)
    EQUAL           reduce using rule 89 (factor -> auxFactor varcte .)
    AND             reduce using rule 89 (factor -> auxFactor varcte .)
    OR              reduce using rule 89 (factor -> auxFactor varcte .)
    RPAREN          reduce using rule 89 (factor -> auxFactor varcte .)
    COMMA           reduce using rule 89 (factor -> auxFactor varcte .)
    SEMICOLON       reduce using rule 89 (factor -> auxFactor varcte .)
    RBRACKET        reduce using rule 89 (factor -> auxFactor varcte .)
    LBRACKET        reduce using rule 89 (factor -> auxFactor varcte .)


state 124

    (96) varcte -> CTEBOOL . paso1 cteBool
    (123) paso1 -> .

    MULTI           reduce using rule 123 (paso1 -> .)
    DIVIDE          reduce using rule 123 (paso1 -> .)
    PLUS            reduce using rule 123 (paso1 -> .)
    MINUS           reduce using rule 123 (paso1 -> .)
    COMMA           reduce using rule 123 (paso1 -> .)
    RPAREN          reduce using rule 123 (paso1 -> .)
    GTHAN           reduce using rule 123 (paso1 -> .)
    LTHAN           reduce using rule 123 (paso1 -> .)
    NOTEQUAL        reduce using rule 123 (paso1 -> .)
    GETHAN          reduce using rule 123 (paso1 -> .)
    LETHAN          reduce using rule 123 (paso1 -> .)
    EQUAL           reduce using rule 123 (paso1 -> .)
    AND             reduce using rule 123 (paso1 -> .)
    OR              reduce using rule 123 (paso1 -> .)
    RBRACKET        reduce using rule 123 (paso1 -> .)
    SEMICOLON       reduce using rule 123 (paso1 -> .)
    LBRACKET        reduce using rule 123 (paso1 -> .)

    paso1                          shift and go to state 165

state 125

    (93) varcte -> CTEINT . paso1 cteInt
    (123) paso1 -> .

    MULTI           reduce using rule 123 (paso1 -> .)
    DIVIDE          reduce using rule 123 (paso1 -> .)
    PLUS            reduce using rule 123 (paso1 -> .)
    MINUS           reduce using rule 123 (paso1 -> .)
    COMMA           reduce using rule 123 (paso1 -> .)
    RPAREN          reduce using rule 123 (paso1 -> .)
    GTHAN           reduce using rule 123 (paso1 -> .)
    LTHAN           reduce using rule 123 (paso1 -> .)
    NOTEQUAL        reduce using rule 123 (paso1 -> .)
    GETHAN          reduce using rule 123 (paso1 -> .)
    LETHAN          reduce using rule 123 (paso1 -> .)
    EQUAL           reduce using rule 123 (paso1 -> .)
    AND             reduce using rule 123 (paso1 -> .)
    OR              reduce using rule 123 (paso1 -> .)
    RBRACKET        reduce using rule 123 (paso1 -> .)
    SEMICOLON       reduce using rule 123 (paso1 -> .)
    LBRACKET        reduce using rule 123 (paso1 -> .)

    paso1                          shift and go to state 166

state 126

    (94) varcte -> CTEFLOAT . paso1 cteFloat
    (123) paso1 -> .

    MULTI           reduce using rule 123 (paso1 -> .)
    DIVIDE          reduce using rule 123 (paso1 -> .)
    PLUS            reduce using rule 123 (paso1 -> .)
    MINUS           reduce using rule 123 (paso1 -> .)
    COMMA           reduce using rule 123 (paso1 -> .)
    RPAREN          reduce using rule 123 (paso1 -> .)
    GTHAN           reduce using rule 123 (paso1 -> .)
    LTHAN           reduce using rule 123 (paso1 -> .)
    NOTEQUAL        reduce using rule 123 (paso1 -> .)
    GETHAN          reduce using rule 123 (paso1 -> .)
    LETHAN          reduce using rule 123 (paso1 -> .)
    EQUAL           reduce using rule 123 (paso1 -> .)
    AND             reduce using rule 123 (paso1 -> .)
    OR              reduce using rule 123 (paso1 -> .)
    RBRACKET        reduce using rule 123 (paso1 -> .)
    SEMICOLON       reduce using rule 123 (paso1 -> .)
    LBRACKET        reduce using rule 123 (paso1 -> .)

    paso1                          shift and go to state 167

state 127

    (95) varcte -> CTECHAR . paso1 cteChar
    (123) paso1 -> .

    MULTI           reduce using rule 123 (paso1 -> .)
    DIVIDE          reduce using rule 123 (paso1 -> .)
    PLUS            reduce using rule 123 (paso1 -> .)
    MINUS           reduce using rule 123 (paso1 -> .)
    COMMA           reduce using rule 123 (paso1 -> .)
    RPAREN          reduce using rule 123 (paso1 -> .)
    GTHAN           reduce using rule 123 (paso1 -> .)
    LTHAN           reduce using rule 123 (paso1 -> .)
    NOTEQUAL        reduce using rule 123 (paso1 -> .)
    GETHAN          reduce using rule 123 (paso1 -> .)
    LETHAN          reduce using rule 123 (paso1 -> .)
    EQUAL           reduce using rule 123 (paso1 -> .)
    AND             reduce using rule 123 (paso1 -> .)
    OR              reduce using rule 123 (paso1 -> .)
    RBRACKET        reduce using rule 123 (paso1 -> .)
    SEMICOLON       reduce using rule 123 (paso1 -> .)
    LBRACKET        reduce using rule 123 (paso1 -> .)

    paso1                          shift and go to state 168

state 128

    (92) varcte -> ID . paso1 addType auxVarcte
    (123) paso1 -> .

    LPAREN          reduce using rule 123 (paso1 -> .)
    LBRACKET        reduce using rule 123 (paso1 -> .)
    MULTI           reduce using rule 123 (paso1 -> .)
    DIVIDE          reduce using rule 123 (paso1 -> .)
    PLUS            reduce using rule 123 (paso1 -> .)
    MINUS           reduce using rule 123 (paso1 -> .)
    COMMA           reduce using rule 123 (paso1 -> .)
    RPAREN          reduce using rule 123 (paso1 -> .)
    GTHAN           reduce using rule 123 (paso1 -> .)
    LTHAN           reduce using rule 123 (paso1 -> .)
    NOTEQUAL        reduce using rule 123 (paso1 -> .)
    GETHAN          reduce using rule 123 (paso1 -> .)
    LETHAN          reduce using rule 123 (paso1 -> .)
    EQUAL           reduce using rule 123 (paso1 -> .)
    AND             reduce using rule 123 (paso1 -> .)
    OR              reduce using rule 123 (paso1 -> .)
    RBRACKET        reduce using rule 123 (paso1 -> .)
    SEMICOLON       reduce using rule 123 (paso1 -> .)

    paso1                          shift and go to state 169

state 129

    (113) ciclo -> WHILE paso15 LPAREN expAndOr . RPAREN paso16 bloque paso17

    RPAREN          shift and go to state 170


state 130

    (73) condicion -> IF LPAREN expAndOr paso12 . RPAREN bloque auxCondicion paso14

    RPAREN          shift and go to state 171


state 131

    (61) auxCicloExpresion -> AND . paso8_and cicloExpresion paso9 auxCicloExpresion
    (132) paso8_and -> .

    LPAREN          reduce using rule 132 (paso8_and -> .)
    PLUS            reduce using rule 132 (paso8_and -> .)
    MINUS           reduce using rule 132 (paso8_and -> .)
    ID              reduce using rule 132 (paso8_and -> .)
    CTEINT          reduce using rule 132 (paso8_and -> .)
    CTEFLOAT        reduce using rule 132 (paso8_and -> .)
    CTECHAR         reduce using rule 132 (paso8_and -> .)
    CTEBOOL         reduce using rule 132 (paso8_and -> .)
    CTESTRING       reduce using rule 132 (paso8_and -> .)

    paso8_and                      shift and go to state 172

state 132

    (72) expAndOr -> cicloExpresion auxCicloExpresion .

    RPAREN          reduce using rule 72 (expAndOr -> cicloExpresion auxCicloExpresion .)


state 133

    (62) auxCicloExpresion -> OR . paso8_or cicloExpresion paso9 auxCicloExpresion
    (133) paso8_or -> .

    LPAREN          reduce using rule 133 (paso8_or -> .)
    PLUS            reduce using rule 133 (paso8_or -> .)
    MINUS           reduce using rule 133 (paso8_or -> .)
    ID              reduce using rule 133 (paso8_or -> .)
    CTEINT          reduce using rule 133 (paso8_or -> .)
    CTEFLOAT        reduce using rule 133 (paso8_or -> .)
    CTECHAR         reduce using rule 133 (paso8_or -> .)
    CTEBOOL         reduce using rule 133 (paso8_or -> .)
    CTESTRING       reduce using rule 133 (paso8_or -> .)

    paso8_or                       shift and go to state 173

state 134

    (60) cicloExpresion -> expresion paso10 .

    AND             reduce using rule 60 (cicloExpresion -> expresion paso10 .)
    OR              reduce using rule 60 (cicloExpresion -> expresion paso10 .)
    RPAREN          reduce using rule 60 (cicloExpresion -> expresion paso10 .)


state 135

    (67) auxExpresion -> NOTEQUAL . diferente exp
    (154) diferente -> .

    LPAREN          reduce using rule 154 (diferente -> .)
    PLUS            reduce using rule 154 (diferente -> .)
    MINUS           reduce using rule 154 (diferente -> .)
    ID              reduce using rule 154 (diferente -> .)
    CTEINT          reduce using rule 154 (diferente -> .)
    CTEFLOAT        reduce using rule 154 (diferente -> .)
    CTECHAR         reduce using rule 154 (diferente -> .)
    CTEBOOL         reduce using rule 154 (diferente -> .)
    CTESTRING       reduce using rule 154 (diferente -> .)

    diferente                      shift and go to state 174

state 136

    (64) expresion -> exp auxExpresion .

    AND             reduce using rule 64 (expresion -> exp auxExpresion .)
    OR              reduce using rule 64 (expresion -> exp auxExpresion .)
    RPAREN          reduce using rule 64 (expresion -> exp auxExpresion .)
    SEMICOLON       reduce using rule 64 (expresion -> exp auxExpresion .)


state 137

    (65) auxExpresion -> GTHAN . mayor exp
    (149) mayor -> .

    LPAREN          reduce using rule 149 (mayor -> .)
    PLUS            reduce using rule 149 (mayor -> .)
    MINUS           reduce using rule 149 (mayor -> .)
    ID              reduce using rule 149 (mayor -> .)
    CTEINT          reduce using rule 149 (mayor -> .)
    CTEFLOAT        reduce using rule 149 (mayor -> .)
    CTECHAR         reduce using rule 149 (mayor -> .)
    CTEBOOL         reduce using rule 149 (mayor -> .)
    CTESTRING       reduce using rule 149 (mayor -> .)

    mayor                          shift and go to state 175

state 138

    (70) auxExpresion -> EQUAL . igual exp
    (153) igual -> .

    LPAREN          reduce using rule 153 (igual -> .)
    PLUS            reduce using rule 153 (igual -> .)
    MINUS           reduce using rule 153 (igual -> .)
    ID              reduce using rule 153 (igual -> .)
    CTEINT          reduce using rule 153 (igual -> .)
    CTEFLOAT        reduce using rule 153 (igual -> .)
    CTECHAR         reduce using rule 153 (igual -> .)
    CTEBOOL         reduce using rule 153 (igual -> .)
    CTESTRING       reduce using rule 153 (igual -> .)

    igual                          shift and go to state 176

state 139

    (68) auxExpresion -> GETHAN . mayorIg exp
    (151) mayorIg -> .

    LPAREN          reduce using rule 151 (mayorIg -> .)
    PLUS            reduce using rule 151 (mayorIg -> .)
    MINUS           reduce using rule 151 (mayorIg -> .)
    ID              reduce using rule 151 (mayorIg -> .)
    CTEINT          reduce using rule 151 (mayorIg -> .)
    CTEFLOAT        reduce using rule 151 (mayorIg -> .)
    CTECHAR         reduce using rule 151 (mayorIg -> .)
    CTEBOOL         reduce using rule 151 (mayorIg -> .)
    CTESTRING       reduce using rule 151 (mayorIg -> .)

    mayorIg                        shift and go to state 177

state 140

    (66) auxExpresion -> LTHAN . menor exp
    (150) menor -> .

    LPAREN          reduce using rule 150 (menor -> .)
    PLUS            reduce using rule 150 (menor -> .)
    MINUS           reduce using rule 150 (menor -> .)
    ID              reduce using rule 150 (menor -> .)
    CTEINT          reduce using rule 150 (menor -> .)
    CTEFLOAT        reduce using rule 150 (menor -> .)
    CTECHAR         reduce using rule 150 (menor -> .)
    CTEBOOL         reduce using rule 150 (menor -> .)
    CTESTRING       reduce using rule 150 (menor -> .)

    menor                          shift and go to state 178

state 141

    (69) auxExpresion -> LETHAN . menorIg exp
    (152) menorIg -> .

    LPAREN          reduce using rule 152 (menorIg -> .)
    PLUS            reduce using rule 152 (menorIg -> .)
    MINUS           reduce using rule 152 (menorIg -> .)
    ID              reduce using rule 152 (menorIg -> .)
    CTEINT          reduce using rule 152 (menorIg -> .)
    CTEFLOAT        reduce using rule 152 (menorIg -> .)
    CTECHAR         reduce using rule 152 (menorIg -> .)
    CTEBOOL         reduce using rule 152 (menorIg -> .)
    CTESTRING       reduce using rule 152 (menorIg -> .)

    menorIg                        shift and go to state 179

state 142

    (114) llamada -> ID LPAREN auxLlamada RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 180


state 143

    (119) auxArgumentos1 -> exp ambAuxArgumentos1 .

    RPAREN          reduce using rule 119 (auxArgumentos1 -> exp ambAuxArgumentos1 .)


state 144

    (120) ambAuxArgumentos1 -> COMMA . auxArgumentos1
    (119) auxArgumentos1 -> . exp ambAuxArgumentos1
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    auxArgumentos1                 shift and go to state 181
    termino                        shift and go to state 83
    exp                            shift and go to state 103
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 145

    (51) asignacion -> ID paso1 addType auxAsignacion1 . EQUALA asig exp paso11 SEMICOLON

    EQUALA          shift and go to state 182


state 146

    (52) auxAsignacion1 -> LBRACKET . exp RBRACKET
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    termino                        shift and go to state 83
    exp                            shift and go to state 183
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 147

    (111) ambAuxParametros -> COMMA auxParametros .

    RPAREN          reduce using rule 111 (ambAuxParametros -> COMMA auxParametros .)


state 148

    (36) cicloVarsFuncion -> varsFuncion cicloVarsFuncion .

    ID              reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    IF              reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    PRINT           reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    WHILE           reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    RETURN          reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)


state 149

    (34) cicloBloqueFuncion -> estatuto . cicloBloqueFuncion
    (34) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (35) cicloBloqueFuncion -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada
    (50) estatuto -> . ciclo
    (51) asignacion -> . ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON
    (73) condicion -> . IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14
    (54) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (114) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (113) ciclo -> . WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17

    RETURN          reduce using rule 35 (cicloBloqueFuncion -> .)
    ID              shift and go to state 58
    IF              shift and go to state 56
    PRINT           shift and go to state 50
    WHILE           shift and go to state 51

    estatuto                       shift and go to state 149
    llamada                        shift and go to state 54
    condicion                      shift and go to state 55
    cicloBloqueFuncion             shift and go to state 184
    ciclo                          shift and go to state 52
    asignacion                     shift and go to state 59
    escritura                      shift and go to state 60

state 150

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion . RETURN expresion SEMICOLON RBRACE

    RETURN          shift and go to state 185


state 151

    (38) varsFuncion -> createVariableDirFuncion VAR . auxVar1Funcion
    (40) auxVar1Funcion -> . idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON
    (42) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 188

    idVarsFuncion                  shift and go to state 186
    auxVar1Funcion                 shift and go to state 187

state 152

    (24) auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain . SEMICOLON

    SEMICOLON       shift and go to state 189


state 153

    (28) ambIdVarsMain -> COMMA idVarsMain .

    COLON           reduce using rule 28 (ambIdVarsMain -> COMMA idVarsMain .)


state 154

    (78) ambExp -> auxExp . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    cicloExp                       shift and go to state 190
    termino                        shift and go to state 83
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    auxExp                         shift and go to state 85
    cicloTermino                   shift and go to state 87

state 155

    (77) cicloExp -> termino paso4 ambExp .

    COMMA           reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    RPAREN          reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    GTHAN           reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    LTHAN           reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    NOTEQUAL        reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    GETHAN          reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    LETHAN          reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    EQUAL           reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    AND             reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    OR              reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    SEMICOLON       reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    RBRACKET        reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    LBRACKET        reduce using rule 77 (cicloExp -> termino paso4 ambExp .)


state 156

    (86) auxTermino -> MULTI . paso2_mult
    (124) paso2_mult -> .

    LPAREN          reduce using rule 124 (paso2_mult -> .)
    PLUS            reduce using rule 124 (paso2_mult -> .)
    MINUS           reduce using rule 124 (paso2_mult -> .)
    ID              reduce using rule 124 (paso2_mult -> .)
    CTEINT          reduce using rule 124 (paso2_mult -> .)
    CTEFLOAT        reduce using rule 124 (paso2_mult -> .)
    CTECHAR         reduce using rule 124 (paso2_mult -> .)
    CTEBOOL         reduce using rule 124 (paso2_mult -> .)
    CTESTRING       reduce using rule 124 (paso2_mult -> .)

    paso2_mult                     shift and go to state 191

state 157

    (83) cicloTermino -> factor paso5 ambCicloTermino .

    PLUS            reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    MINUS           reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    COMMA           reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    RPAREN          reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    AND             reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    OR              reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    SEMICOLON       reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    LBRACKET        reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    GTHAN           reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    LTHAN           reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    NOTEQUAL        reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    GETHAN          reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    LETHAN          reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    EQUAL           reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    RBRACKET        reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)


state 158

    (84) ambCicloTermino -> auxTermino . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    cicloTermino                   shift and go to state 192
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93

state 159

    (87) auxTermino -> DIVIDE . paso2_div
    (125) paso2_div -> .

    LPAREN          reduce using rule 125 (paso2_div -> .)
    PLUS            reduce using rule 125 (paso2_div -> .)
    MINUS           reduce using rule 125 (paso2_div -> .)
    ID              reduce using rule 125 (paso2_div -> .)
    CTEINT          reduce using rule 125 (paso2_div -> .)
    CTEFLOAT        reduce using rule 125 (paso2_div -> .)
    CTECHAR         reduce using rule 125 (paso2_div -> .)
    CTEBOOL         reduce using rule 125 (paso2_div -> .)
    CTESTRING       reduce using rule 125 (paso2_div -> .)

    paso2_div                      shift and go to state 193

state 160

    (54) escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .

    ID              reduce using rule 54 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 54 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 54 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 54 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 54 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 54 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)


state 161

    (56) ambAuxEscritura1 -> COMMA . auxEscritura1
    (55) auxEscritura1 -> . auxEscritura2 paso18 ambAuxEscritura1
    (58) auxEscritura2 -> . exp
    (59) auxEscritura2 -> . CTESTRING paso1
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 82
    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

  ! CTESTRING       [ reduce using rule 91 (auxFactor -> .) ]

    auxExp                         shift and go to state 85
    auxEscritura1                  shift and go to state 194
    auxEscritura2                  shift and go to state 91
    termino                        shift and go to state 83
    exp                            shift and go to state 94
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 162

    (55) auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1 .

    RPAREN          reduce using rule 55 (auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1 .)


state 163

    (88) factor -> LPAREN paso6 exp . RPAREN paso7

    RPAREN          shift and go to state 195


state 164

    (97) varcte -> CTESTRING paso1 . cteString
    (148) cteString -> .

    MULTI           reduce using rule 148 (cteString -> .)
    DIVIDE          reduce using rule 148 (cteString -> .)
    PLUS            reduce using rule 148 (cteString -> .)
    MINUS           reduce using rule 148 (cteString -> .)
    COMMA           reduce using rule 148 (cteString -> .)
    RPAREN          reduce using rule 148 (cteString -> .)
    GTHAN           reduce using rule 148 (cteString -> .)
    LTHAN           reduce using rule 148 (cteString -> .)
    NOTEQUAL        reduce using rule 148 (cteString -> .)
    GETHAN          reduce using rule 148 (cteString -> .)
    LETHAN          reduce using rule 148 (cteString -> .)
    EQUAL           reduce using rule 148 (cteString -> .)
    AND             reduce using rule 148 (cteString -> .)
    OR              reduce using rule 148 (cteString -> .)
    RBRACKET        reduce using rule 148 (cteString -> .)
    SEMICOLON       reduce using rule 148 (cteString -> .)
    LBRACKET        reduce using rule 148 (cteString -> .)

    cteString                      shift and go to state 196

state 165

    (96) varcte -> CTEBOOL paso1 . cteBool
    (147) cteBool -> .

    MULTI           reduce using rule 147 (cteBool -> .)
    DIVIDE          reduce using rule 147 (cteBool -> .)
    PLUS            reduce using rule 147 (cteBool -> .)
    MINUS           reduce using rule 147 (cteBool -> .)
    COMMA           reduce using rule 147 (cteBool -> .)
    RPAREN          reduce using rule 147 (cteBool -> .)
    GTHAN           reduce using rule 147 (cteBool -> .)
    LTHAN           reduce using rule 147 (cteBool -> .)
    NOTEQUAL        reduce using rule 147 (cteBool -> .)
    GETHAN          reduce using rule 147 (cteBool -> .)
    LETHAN          reduce using rule 147 (cteBool -> .)
    EQUAL           reduce using rule 147 (cteBool -> .)
    AND             reduce using rule 147 (cteBool -> .)
    OR              reduce using rule 147 (cteBool -> .)
    RBRACKET        reduce using rule 147 (cteBool -> .)
    SEMICOLON       reduce using rule 147 (cteBool -> .)
    LBRACKET        reduce using rule 147 (cteBool -> .)

    cteBool                        shift and go to state 197

state 166

    (93) varcte -> CTEINT paso1 . cteInt
    (144) cteInt -> .

    MULTI           reduce using rule 144 (cteInt -> .)
    DIVIDE          reduce using rule 144 (cteInt -> .)
    PLUS            reduce using rule 144 (cteInt -> .)
    MINUS           reduce using rule 144 (cteInt -> .)
    COMMA           reduce using rule 144 (cteInt -> .)
    RPAREN          reduce using rule 144 (cteInt -> .)
    GTHAN           reduce using rule 144 (cteInt -> .)
    LTHAN           reduce using rule 144 (cteInt -> .)
    NOTEQUAL        reduce using rule 144 (cteInt -> .)
    GETHAN          reduce using rule 144 (cteInt -> .)
    LETHAN          reduce using rule 144 (cteInt -> .)
    EQUAL           reduce using rule 144 (cteInt -> .)
    AND             reduce using rule 144 (cteInt -> .)
    OR              reduce using rule 144 (cteInt -> .)
    RBRACKET        reduce using rule 144 (cteInt -> .)
    SEMICOLON       reduce using rule 144 (cteInt -> .)
    LBRACKET        reduce using rule 144 (cteInt -> .)

    cteInt                         shift and go to state 198

state 167

    (94) varcte -> CTEFLOAT paso1 . cteFloat
    (145) cteFloat -> .

    MULTI           reduce using rule 145 (cteFloat -> .)
    DIVIDE          reduce using rule 145 (cteFloat -> .)
    PLUS            reduce using rule 145 (cteFloat -> .)
    MINUS           reduce using rule 145 (cteFloat -> .)
    COMMA           reduce using rule 145 (cteFloat -> .)
    RPAREN          reduce using rule 145 (cteFloat -> .)
    GTHAN           reduce using rule 145 (cteFloat -> .)
    LTHAN           reduce using rule 145 (cteFloat -> .)
    NOTEQUAL        reduce using rule 145 (cteFloat -> .)
    GETHAN          reduce using rule 145 (cteFloat -> .)
    LETHAN          reduce using rule 145 (cteFloat -> .)
    EQUAL           reduce using rule 145 (cteFloat -> .)
    AND             reduce using rule 145 (cteFloat -> .)
    OR              reduce using rule 145 (cteFloat -> .)
    RBRACKET        reduce using rule 145 (cteFloat -> .)
    SEMICOLON       reduce using rule 145 (cteFloat -> .)
    LBRACKET        reduce using rule 145 (cteFloat -> .)

    cteFloat                       shift and go to state 199

state 168

    (95) varcte -> CTECHAR paso1 . cteChar
    (146) cteChar -> .

    MULTI           reduce using rule 146 (cteChar -> .)
    DIVIDE          reduce using rule 146 (cteChar -> .)
    PLUS            reduce using rule 146 (cteChar -> .)
    MINUS           reduce using rule 146 (cteChar -> .)
    COMMA           reduce using rule 146 (cteChar -> .)
    RPAREN          reduce using rule 146 (cteChar -> .)
    GTHAN           reduce using rule 146 (cteChar -> .)
    LTHAN           reduce using rule 146 (cteChar -> .)
    NOTEQUAL        reduce using rule 146 (cteChar -> .)
    GETHAN          reduce using rule 146 (cteChar -> .)
    LETHAN          reduce using rule 146 (cteChar -> .)
    EQUAL           reduce using rule 146 (cteChar -> .)
    AND             reduce using rule 146 (cteChar -> .)
    OR              reduce using rule 146 (cteChar -> .)
    RBRACKET        reduce using rule 146 (cteChar -> .)
    SEMICOLON       reduce using rule 146 (cteChar -> .)
    LBRACKET        reduce using rule 146 (cteChar -> .)

    cteChar                        shift and go to state 200

state 169

    (92) varcte -> ID paso1 . addType auxVarcte
    (98) addType -> .

    LPAREN          reduce using rule 98 (addType -> .)
    LBRACKET        reduce using rule 98 (addType -> .)
    MULTI           reduce using rule 98 (addType -> .)
    DIVIDE          reduce using rule 98 (addType -> .)
    PLUS            reduce using rule 98 (addType -> .)
    MINUS           reduce using rule 98 (addType -> .)
    COMMA           reduce using rule 98 (addType -> .)
    RPAREN          reduce using rule 98 (addType -> .)
    GTHAN           reduce using rule 98 (addType -> .)
    LTHAN           reduce using rule 98 (addType -> .)
    NOTEQUAL        reduce using rule 98 (addType -> .)
    GETHAN          reduce using rule 98 (addType -> .)
    LETHAN          reduce using rule 98 (addType -> .)
    EQUAL           reduce using rule 98 (addType -> .)
    AND             reduce using rule 98 (addType -> .)
    OR              reduce using rule 98 (addType -> .)
    RBRACKET        reduce using rule 98 (addType -> .)
    SEMICOLON       reduce using rule 98 (addType -> .)

    addType                        shift and go to state 201

state 170

    (113) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN . paso16 bloque paso17
    (141) paso16 -> .

    LBRACE          reduce using rule 141 (paso16 -> .)

    paso16                         shift and go to state 202

state 171

    (73) condicion -> IF LPAREN expAndOr paso12 RPAREN . bloque auxCondicion paso14
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 203

state 172

    (61) auxCicloExpresion -> AND paso8_and . cicloExpresion paso9 auxCicloExpresion
    (60) cicloExpresion -> . expresion paso10
    (64) expresion -> . exp auxExpresion
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    termino                        shift and go to state 83
    cicloExpresion                 shift and go to state 204
    cicloTermino                   shift and go to state 87
    factor                         shift and go to state 88
    cicloExp                       shift and go to state 89
    auxFactor                      shift and go to state 93
    auxExp                         shift and go to state 85
    expresion                      shift and go to state 98
    exp                            shift and go to state 99

state 173

    (62) auxCicloExpresion -> OR paso8_or . cicloExpresion paso9 auxCicloExpresion
    (60) cicloExpresion -> . expresion paso10
    (64) expresion -> . exp auxExpresion
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    termino                        shift and go to state 83
    cicloExpresion                 shift and go to state 205
    cicloTermino                   shift and go to state 87
    factor                         shift and go to state 88
    cicloExp                       shift and go to state 89
    auxFactor                      shift and go to state 93
    auxExp                         shift and go to state 85
    expresion                      shift and go to state 98
    exp                            shift and go to state 99

state 174

    (67) auxExpresion -> NOTEQUAL diferente . exp
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    termino                        shift and go to state 83
    exp                            shift and go to state 206
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 175

    (65) auxExpresion -> GTHAN mayor . exp
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    cicloExp                       shift and go to state 89
    termino                        shift and go to state 83
    exp                            shift and go to state 207
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloTermino                   shift and go to state 87

state 176

    (70) auxExpresion -> EQUAL igual . exp
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    termino                        shift and go to state 83
    exp                            shift and go to state 208
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 177

    (68) auxExpresion -> GETHAN mayorIg . exp
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    termino                        shift and go to state 83
    exp                            shift and go to state 209
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 178

    (66) auxExpresion -> LTHAN menor . exp
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    termino                        shift and go to state 83
    exp                            shift and go to state 210
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 179

    (69) auxExpresion -> LETHAN menorIg . exp
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    termino                        shift and go to state 83
    exp                            shift and go to state 211
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 180

    (114) llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .

    ID              reduce using rule 114 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    IF              reduce using rule 114 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    PRINT           reduce using rule 114 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    WHILE           reduce using rule 114 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    RETURN          reduce using rule 114 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    RBRACE          reduce using rule 114 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)


state 181

    (120) ambAuxArgumentos1 -> COMMA auxArgumentos1 .

    RPAREN          reduce using rule 120 (ambAuxArgumentos1 -> COMMA auxArgumentos1 .)


state 182

    (51) asignacion -> ID paso1 addType auxAsignacion1 EQUALA . asig exp paso11 SEMICOLON
    (155) asig -> .

    LPAREN          reduce using rule 155 (asig -> .)
    PLUS            reduce using rule 155 (asig -> .)
    MINUS           reduce using rule 155 (asig -> .)
    ID              reduce using rule 155 (asig -> .)
    CTEINT          reduce using rule 155 (asig -> .)
    CTEFLOAT        reduce using rule 155 (asig -> .)
    CTECHAR         reduce using rule 155 (asig -> .)
    CTEBOOL         reduce using rule 155 (asig -> .)
    CTESTRING       reduce using rule 155 (asig -> .)

    asig                           shift and go to state 212

state 183

    (52) auxAsignacion1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 213


state 184

    (34) cicloBloqueFuncion -> estatuto cicloBloqueFuncion .

    RETURN          reduce using rule 34 (cicloBloqueFuncion -> estatuto cicloBloqueFuncion .)


state 185

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN . expresion SEMICOLON RBRACE
    (64) expresion -> . exp auxExpresion
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    expresion                      shift and go to state 214
    auxExp                         shift and go to state 85
    termino                        shift and go to state 83
    exp                            shift and go to state 99
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 186

    (40) auxVar1Funcion -> idVarsFuncion . COLON tipo addTypeGlobalFuncion SEMICOLON

    COLON           shift and go to state 215


state 187

    (38) varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .

    VAR             reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    ID              reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    IF              reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    PRINT           reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    WHILE           reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    RETURN          reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)


state 188

    (42) idVarsFuncion -> ID . addVariableDirFuncion ambIdVarsFuncion
    (43) addVariableDirFuncion -> .

    COMMA           reduce using rule 43 (addVariableDirFuncion -> .)
    COLON           reduce using rule 43 (addVariableDirFuncion -> .)

    addVariableDirFuncion          shift and go to state 216

state 189

    (24) auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .

    VAR             reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    ID              reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    IF              reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    PRINT           reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    WHILE           reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    RBRACE          reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)


state 190

    (78) ambExp -> auxExp cicloExp .

    COMMA           reduce using rule 78 (ambExp -> auxExp cicloExp .)
    RPAREN          reduce using rule 78 (ambExp -> auxExp cicloExp .)
    GTHAN           reduce using rule 78 (ambExp -> auxExp cicloExp .)
    LTHAN           reduce using rule 78 (ambExp -> auxExp cicloExp .)
    NOTEQUAL        reduce using rule 78 (ambExp -> auxExp cicloExp .)
    GETHAN          reduce using rule 78 (ambExp -> auxExp cicloExp .)
    LETHAN          reduce using rule 78 (ambExp -> auxExp cicloExp .)
    EQUAL           reduce using rule 78 (ambExp -> auxExp cicloExp .)
    AND             reduce using rule 78 (ambExp -> auxExp cicloExp .)
    OR              reduce using rule 78 (ambExp -> auxExp cicloExp .)
    RBRACKET        reduce using rule 78 (ambExp -> auxExp cicloExp .)
    SEMICOLON       reduce using rule 78 (ambExp -> auxExp cicloExp .)
    LBRACKET        reduce using rule 78 (ambExp -> auxExp cicloExp .)


state 191

    (86) auxTermino -> MULTI paso2_mult .

    LPAREN          reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    PLUS            reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    MINUS           reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    ID              reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    CTEINT          reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    CTEFLOAT        reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    CTECHAR         reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    CTEBOOL         reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    CTESTRING       reduce using rule 86 (auxTermino -> MULTI paso2_mult .)


state 192

    (84) ambCicloTermino -> auxTermino cicloTermino .

    PLUS            reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    MINUS           reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    COMMA           reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    RPAREN          reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    GTHAN           reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    LTHAN           reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    NOTEQUAL        reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    GETHAN          reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    LETHAN          reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    EQUAL           reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    AND             reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    OR              reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    RBRACKET        reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    SEMICOLON       reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    LBRACKET        reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)


state 193

    (87) auxTermino -> DIVIDE paso2_div .

    LPAREN          reduce using rule 87 (auxTermino -> DIVIDE paso2_div .)
    PLUS            reduce using rule 87 (auxTermino -> DIVIDE paso2_div .)
    MINUS           reduce using rule 87 (auxTermino -> DIVIDE paso2_div .)
    ID              reduce using rule 87 (auxTermino -> DIVIDE paso2_div .)
    CTEINT          reduce using rule 87 (auxTermino -> DIVIDE paso2_div .)
    CTEFLOAT        reduce using rule 87 (auxTermino -> DIVIDE paso2_div .)
    CTECHAR         reduce using rule 87 (auxTermino -> DIVIDE paso2_div .)
    CTEBOOL         reduce using rule 87 (auxTermino -> DIVIDE paso2_div .)
    CTESTRING       reduce using rule 87 (auxTermino -> DIVIDE paso2_div .)


state 194

    (56) ambAuxEscritura1 -> COMMA auxEscritura1 .

    RPAREN          reduce using rule 56 (ambAuxEscritura1 -> COMMA auxEscritura1 .)


state 195

    (88) factor -> LPAREN paso6 exp RPAREN . paso7
    (131) paso7 -> .

    MULTI           reduce using rule 131 (paso7 -> .)
    DIVIDE          reduce using rule 131 (paso7 -> .)
    PLUS            reduce using rule 131 (paso7 -> .)
    MINUS           reduce using rule 131 (paso7 -> .)
    COMMA           reduce using rule 131 (paso7 -> .)
    RPAREN          reduce using rule 131 (paso7 -> .)
    GTHAN           reduce using rule 131 (paso7 -> .)
    LTHAN           reduce using rule 131 (paso7 -> .)
    NOTEQUAL        reduce using rule 131 (paso7 -> .)
    GETHAN          reduce using rule 131 (paso7 -> .)
    LETHAN          reduce using rule 131 (paso7 -> .)
    EQUAL           reduce using rule 131 (paso7 -> .)
    AND             reduce using rule 131 (paso7 -> .)
    OR              reduce using rule 131 (paso7 -> .)
    RBRACKET        reduce using rule 131 (paso7 -> .)
    SEMICOLON       reduce using rule 131 (paso7 -> .)
    LBRACKET        reduce using rule 131 (paso7 -> .)

    paso7                          shift and go to state 217

state 196

    (97) varcte -> CTESTRING paso1 cteString .

    MULTI           reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    DIVIDE          reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    PLUS            reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    MINUS           reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    COMMA           reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    RPAREN          reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    GTHAN           reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    LTHAN           reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    NOTEQUAL        reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    GETHAN          reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    LETHAN          reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    EQUAL           reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    AND             reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    OR              reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    RBRACKET        reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    SEMICOLON       reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)
    LBRACKET        reduce using rule 97 (varcte -> CTESTRING paso1 cteString .)


state 197

    (96) varcte -> CTEBOOL paso1 cteBool .

    MULTI           reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    DIVIDE          reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    PLUS            reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    MINUS           reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    COMMA           reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    RPAREN          reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    GTHAN           reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    LTHAN           reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    NOTEQUAL        reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    GETHAN          reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    LETHAN          reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    EQUAL           reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    AND             reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    OR              reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    RBRACKET        reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    SEMICOLON       reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)
    LBRACKET        reduce using rule 96 (varcte -> CTEBOOL paso1 cteBool .)


state 198

    (93) varcte -> CTEINT paso1 cteInt .

    MULTI           reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    DIVIDE          reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    PLUS            reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    MINUS           reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    COMMA           reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    RPAREN          reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    GTHAN           reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    LTHAN           reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    NOTEQUAL        reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    GETHAN          reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    LETHAN          reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    EQUAL           reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    AND             reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    OR              reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    RBRACKET        reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    SEMICOLON       reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)
    LBRACKET        reduce using rule 93 (varcte -> CTEINT paso1 cteInt .)


state 199

    (94) varcte -> CTEFLOAT paso1 cteFloat .

    MULTI           reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    DIVIDE          reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    PLUS            reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    MINUS           reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    COMMA           reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    RPAREN          reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    GTHAN           reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    LTHAN           reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    NOTEQUAL        reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    GETHAN          reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    LETHAN          reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    EQUAL           reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    AND             reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    OR              reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    RBRACKET        reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    SEMICOLON       reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)
    LBRACKET        reduce using rule 94 (varcte -> CTEFLOAT paso1 cteFloat .)


state 200

    (95) varcte -> CTECHAR paso1 cteChar .

    MULTI           reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    DIVIDE          reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    PLUS            reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    MINUS           reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    COMMA           reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    RPAREN          reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    GTHAN           reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    LTHAN           reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    NOTEQUAL        reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    GETHAN          reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    LETHAN          reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    EQUAL           reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    AND             reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    OR              reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    RBRACKET        reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    SEMICOLON       reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)
    LBRACKET        reduce using rule 95 (varcte -> CTECHAR paso1 cteChar .)


state 201

    (92) varcte -> ID paso1 addType . auxVarcte
    (99) auxVarcte -> . LPAREN exp RPAREN
    (100) auxVarcte -> . LBRACKET exp LBRACKET
    (101) auxVarcte -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
    LPAREN          shift and go to state 218
    LBRACKET        shift and go to state 219
    MULTI           reduce using rule 101 (auxVarcte -> .)
    DIVIDE          reduce using rule 101 (auxVarcte -> .)
    PLUS            reduce using rule 101 (auxVarcte -> .)
    MINUS           reduce using rule 101 (auxVarcte -> .)
    COMMA           reduce using rule 101 (auxVarcte -> .)
    RPAREN          reduce using rule 101 (auxVarcte -> .)
    GTHAN           reduce using rule 101 (auxVarcte -> .)
    LTHAN           reduce using rule 101 (auxVarcte -> .)
    NOTEQUAL        reduce using rule 101 (auxVarcte -> .)
    GETHAN          reduce using rule 101 (auxVarcte -> .)
    LETHAN          reduce using rule 101 (auxVarcte -> .)
    EQUAL           reduce using rule 101 (auxVarcte -> .)
    AND             reduce using rule 101 (auxVarcte -> .)
    OR              reduce using rule 101 (auxVarcte -> .)
    RBRACKET        reduce using rule 101 (auxVarcte -> .)
    SEMICOLON       reduce using rule 101 (auxVarcte -> .)

  ! LBRACKET        [ reduce using rule 101 (auxVarcte -> .) ]

    auxVarcte                      shift and go to state 220

state 202

    (113) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 . bloque paso17
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 221

state 203

    (73) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque . auxCondicion paso14
    (74) auxCondicion -> . ELSE paso13 bloque
    (75) auxCondicion -> .

    ELSE            shift and go to state 223
    ID              reduce using rule 75 (auxCondicion -> .)
    IF              reduce using rule 75 (auxCondicion -> .)
    PRINT           reduce using rule 75 (auxCondicion -> .)
    WHILE           reduce using rule 75 (auxCondicion -> .)
    RBRACE          reduce using rule 75 (auxCondicion -> .)
    RETURN          reduce using rule 75 (auxCondicion -> .)

    auxCondicion                   shift and go to state 222

state 204

    (61) auxCicloExpresion -> AND paso8_and cicloExpresion . paso9 auxCicloExpresion
    (134) paso9 -> .

    AND             reduce using rule 134 (paso9 -> .)
    OR              reduce using rule 134 (paso9 -> .)
    RPAREN          reduce using rule 134 (paso9 -> .)

    paso9                          shift and go to state 224

state 205

    (62) auxCicloExpresion -> OR paso8_or cicloExpresion . paso9 auxCicloExpresion
    (134) paso9 -> .

    AND             reduce using rule 134 (paso9 -> .)
    OR              reduce using rule 134 (paso9 -> .)
    RPAREN          reduce using rule 134 (paso9 -> .)

    paso9                          shift and go to state 225

state 206

    (67) auxExpresion -> NOTEQUAL diferente exp .

    AND             reduce using rule 67 (auxExpresion -> NOTEQUAL diferente exp .)
    OR              reduce using rule 67 (auxExpresion -> NOTEQUAL diferente exp .)
    RPAREN          reduce using rule 67 (auxExpresion -> NOTEQUAL diferente exp .)
    SEMICOLON       reduce using rule 67 (auxExpresion -> NOTEQUAL diferente exp .)


state 207

    (65) auxExpresion -> GTHAN mayor exp .

    AND             reduce using rule 65 (auxExpresion -> GTHAN mayor exp .)
    OR              reduce using rule 65 (auxExpresion -> GTHAN mayor exp .)
    RPAREN          reduce using rule 65 (auxExpresion -> GTHAN mayor exp .)
    SEMICOLON       reduce using rule 65 (auxExpresion -> GTHAN mayor exp .)


state 208

    (70) auxExpresion -> EQUAL igual exp .

    AND             reduce using rule 70 (auxExpresion -> EQUAL igual exp .)
    OR              reduce using rule 70 (auxExpresion -> EQUAL igual exp .)
    RPAREN          reduce using rule 70 (auxExpresion -> EQUAL igual exp .)
    SEMICOLON       reduce using rule 70 (auxExpresion -> EQUAL igual exp .)


state 209

    (68) auxExpresion -> GETHAN mayorIg exp .

    AND             reduce using rule 68 (auxExpresion -> GETHAN mayorIg exp .)
    OR              reduce using rule 68 (auxExpresion -> GETHAN mayorIg exp .)
    RPAREN          reduce using rule 68 (auxExpresion -> GETHAN mayorIg exp .)
    SEMICOLON       reduce using rule 68 (auxExpresion -> GETHAN mayorIg exp .)


state 210

    (66) auxExpresion -> LTHAN menor exp .

    AND             reduce using rule 66 (auxExpresion -> LTHAN menor exp .)
    OR              reduce using rule 66 (auxExpresion -> LTHAN menor exp .)
    RPAREN          reduce using rule 66 (auxExpresion -> LTHAN menor exp .)
    SEMICOLON       reduce using rule 66 (auxExpresion -> LTHAN menor exp .)


state 211

    (69) auxExpresion -> LETHAN menorIg exp .

    AND             reduce using rule 69 (auxExpresion -> LETHAN menorIg exp .)
    OR              reduce using rule 69 (auxExpresion -> LETHAN menorIg exp .)
    RPAREN          reduce using rule 69 (auxExpresion -> LETHAN menorIg exp .)
    SEMICOLON       reduce using rule 69 (auxExpresion -> LETHAN menorIg exp .)


state 212

    (51) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig . exp paso11 SEMICOLON
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    cicloTermino                   shift and go to state 87
    termino                        shift and go to state 83
    exp                            shift and go to state 226
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89

state 213

    (52) auxAsignacion1 -> LBRACKET exp RBRACKET .

    EQUALA          reduce using rule 52 (auxAsignacion1 -> LBRACKET exp RBRACKET .)


state 214

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 227


state 215

    (40) auxVar1Funcion -> idVarsFuncion COLON . tipo addTypeGlobalFuncion SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 228

state 216

    (42) idVarsFuncion -> ID addVariableDirFuncion . ambIdVarsFuncion
    (44) ambIdVarsFuncion -> . COMMA idVarsFuncion
    (45) ambIdVarsFuncion -> .

    COMMA           shift and go to state 230
    COLON           reduce using rule 45 (ambIdVarsFuncion -> .)

    ambIdVarsFuncion               shift and go to state 229

state 217

    (88) factor -> LPAREN paso6 exp RPAREN paso7 .

    MULTI           reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    DIVIDE          reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    PLUS            reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    MINUS           reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    GTHAN           reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LTHAN           reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    NOTEQUAL        reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    GETHAN          reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LETHAN          reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    EQUAL           reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    AND             reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    OR              reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RPAREN          reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    COMMA           reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    SEMICOLON       reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RBRACKET        reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LBRACKET        reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)


state 218

    (99) auxVarcte -> LPAREN . exp RPAREN
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    termino                        shift and go to state 83
    exp                            shift and go to state 231
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 219

    (100) auxVarcte -> LBRACKET . exp LBRACKET
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 92
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84

    auxExp                         shift and go to state 85
    termino                        shift and go to state 83
    exp                            shift and go to state 232
    factor                         shift and go to state 88
    auxFactor                      shift and go to state 93
    cicloExp                       shift and go to state 89
    cicloTermino                   shift and go to state 87

state 220

    (92) varcte -> ID paso1 addType auxVarcte .

    MULTI           reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    DIVIDE          reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    PLUS            reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    MINUS           reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    COMMA           reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    RPAREN          reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    GTHAN           reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    LTHAN           reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    NOTEQUAL        reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    GETHAN          reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    LETHAN          reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    EQUAL           reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    AND             reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    OR              reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    RBRACKET        reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    SEMICOLON       reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)
    LBRACKET        reduce using rule 92 (varcte -> ID paso1 addType auxVarcte .)


state 221

    (113) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque . paso17
    (142) paso17 -> .

    ID              reduce using rule 142 (paso17 -> .)
    IF              reduce using rule 142 (paso17 -> .)
    PRINT           reduce using rule 142 (paso17 -> .)
    WHILE           reduce using rule 142 (paso17 -> .)
    RBRACE          reduce using rule 142 (paso17 -> .)
    RETURN          reduce using rule 142 (paso17 -> .)

    paso17                         shift and go to state 233

state 222

    (73) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion . paso14
    (139) paso14 -> .

    ID              reduce using rule 139 (paso14 -> .)
    IF              reduce using rule 139 (paso14 -> .)
    PRINT           reduce using rule 139 (paso14 -> .)
    WHILE           reduce using rule 139 (paso14 -> .)
    RBRACE          reduce using rule 139 (paso14 -> .)
    RETURN          reduce using rule 139 (paso14 -> .)

    paso14                         shift and go to state 234

state 223

    (74) auxCondicion -> ELSE . paso13 bloque
    (138) paso13 -> .

    LBRACE          reduce using rule 138 (paso13 -> .)

    paso13                         shift and go to state 235

state 224

    (61) auxCicloExpresion -> AND paso8_and cicloExpresion paso9 . auxCicloExpresion
    (61) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (62) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (63) auxCicloExpresion -> .

    AND             shift and go to state 131
    OR              shift and go to state 133
    RPAREN          reduce using rule 63 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 236

state 225

    (62) auxCicloExpresion -> OR paso8_or cicloExpresion paso9 . auxCicloExpresion
    (61) auxCicloExpresion -> . AND paso8_and cicloExpresion paso9 auxCicloExpresion
    (62) auxCicloExpresion -> . OR paso8_or cicloExpresion paso9 auxCicloExpresion
    (63) auxCicloExpresion -> .

    AND             shift and go to state 131
    OR              shift and go to state 133
    RPAREN          reduce using rule 63 (auxCicloExpresion -> .)

    auxCicloExpresion              shift and go to state 237

state 226

    (51) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp . paso11 SEMICOLON
    (136) paso11 -> .

    SEMICOLON       reduce using rule 136 (paso11 -> .)

    paso11                         shift and go to state 238

state 227

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON . RBRACE

    RBRACE          shift and go to state 239


state 228

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo . addTypeGlobalFuncion SEMICOLON
    (41) addTypeGlobalFuncion -> .

    SEMICOLON       reduce using rule 41 (addTypeGlobalFuncion -> .)

    addTypeGlobalFuncion           shift and go to state 240

state 229

    (42) idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .

    COLON           reduce using rule 42 (idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .)


state 230

    (44) ambIdVarsFuncion -> COMMA . idVarsFuncion
    (42) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 188

    idVarsFuncion                  shift and go to state 241

state 231

    (99) auxVarcte -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 242


state 232

    (100) auxVarcte -> LBRACKET exp . LBRACKET

    LBRACKET        shift and go to state 243


state 233

    (113) ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .

    ID              reduce using rule 113 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    IF              reduce using rule 113 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    PRINT           reduce using rule 113 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    WHILE           reduce using rule 113 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    RBRACE          reduce using rule 113 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)
    RETURN          reduce using rule 113 (ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17 .)


state 234

    (73) condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .

    ID              reduce using rule 73 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    IF              reduce using rule 73 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    PRINT           reduce using rule 73 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    WHILE           reduce using rule 73 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    RETURN          reduce using rule 73 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)
    RBRACE          reduce using rule 73 (condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14 .)


state 235

    (74) auxCondicion -> ELSE paso13 . bloque
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 244

state 236

    (61) auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion .

    RPAREN          reduce using rule 61 (auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion .)


state 237

    (62) auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion .

    RPAREN          reduce using rule 62 (auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion .)


state 238

    (51) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 . SEMICOLON

    SEMICOLON       shift and go to state 245


state 239

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .

    FUNCTION        reduce using rule 33 (bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .)
    MAIN            reduce using rule 33 (bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE .)


state 240

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion . SEMICOLON

    SEMICOLON       shift and go to state 246


state 241

    (44) ambIdVarsFuncion -> COMMA idVarsFuncion .

    COLON           reduce using rule 44 (ambIdVarsFuncion -> COMMA idVarsFuncion .)


state 242

    (99) auxVarcte -> LPAREN exp RPAREN .

    MULTI           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    GTHAN           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    LTHAN           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    GETHAN          reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    LETHAN          reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    AND             reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    OR              reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)
    LBRACKET        reduce using rule 99 (auxVarcte -> LPAREN exp RPAREN .)


state 243

    (100) auxVarcte -> LBRACKET exp LBRACKET .

    MULTI           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    DIVIDE          reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    PLUS            reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    MINUS           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    COMMA           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    RPAREN          reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    GTHAN           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    LTHAN           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    NOTEQUAL        reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    GETHAN          reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    LETHAN          reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    EQUAL           reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    AND             reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    OR              reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    RBRACKET        reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    SEMICOLON       reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)
    LBRACKET        reduce using rule 100 (auxVarcte -> LBRACKET exp LBRACKET .)


state 244

    (74) auxCondicion -> ELSE paso13 bloque .

    ID              reduce using rule 74 (auxCondicion -> ELSE paso13 bloque .)
    IF              reduce using rule 74 (auxCondicion -> ELSE paso13 bloque .)
    PRINT           reduce using rule 74 (auxCondicion -> ELSE paso13 bloque .)
    WHILE           reduce using rule 74 (auxCondicion -> ELSE paso13 bloque .)
    RBRACE          reduce using rule 74 (auxCondicion -> ELSE paso13 bloque .)
    RETURN          reduce using rule 74 (auxCondicion -> ELSE paso13 bloque .)


state 245

    (51) asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .

    ID              reduce using rule 51 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    IF              reduce using rule 51 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    PRINT           reduce using rule 51 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    WHILE           reduce using rule 51 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    RBRACE          reduce using rule 51 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)
    RETURN          reduce using rule 51 (asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON .)


state 246

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .

    VAR             reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    ID              reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    IF              reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    PRINT           reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    WHILE           reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    RETURN          reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CTESTRING in state 69 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 161 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 201 resolved as shift
WARNING: reduce/reduce conflict in state 74 resolved using rule (auxLlamada -> <empty>)
WARNING: rejected rule (argumentos -> <empty>) in state 74
WARNING: Rule (argumentos -> <empty>) is never reduced
