Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque
Rule 2     addProcedureDir -> <empty>
Rule 3     cicloVars -> vars cicloVars
Rule 4     cicloVars -> <empty>
Rule 5     vars -> createVariableDir VAR auxVar1
Rule 6     createVariableDir -> <empty>
Rule 7     auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON
Rule 8     addTypeGlobal -> <empty>
Rule 9     idVars -> ID addVariableDir ambIdVars
Rule 10    addVariableDir -> <empty>
Rule 11    ambIdVars -> COMMA idVars
Rule 12    ambIdVars -> <empty>
Rule 13    tipo -> INT ambAuxTipo1
Rule 14    tipo -> BOOL ambAuxTipo1
Rule 15    tipo -> STRING ambAuxTipo1
Rule 16    tipo -> FLOAT ambAuxTipo1
Rule 17    tipo -> CHAR ambAuxTipo1
Rule 18    ambAuxTipo1 -> LBRACKET CTEINT RBRACKET
Rule 19    ambAuxTipo1 -> <empty>
Rule 20    cicloVarsMain -> varsMain cicloVarsMain
Rule 21    cicloVarsMain -> <empty>
Rule 22    varsMain -> createVariableDirMain VAR auxVar1Main
Rule 23    createVariableDirMain -> <empty>
Rule 24    auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON
Rule 25    addTypeGlobalMain -> <empty>
Rule 26    idVarsMain -> ID addVariableDirMain ambIdVarsMain
Rule 27    addVariableDirMain -> <empty>
Rule 28    ambIdVarsMain -> COMMA idVarsMain
Rule 29    ambIdVarsMain -> <empty>
Rule 30    bloque -> LBRACE cicloVarsMain cicloBloque RBRACE
Rule 31    cicloBloque -> estatuto cicloBloque
Rule 32    cicloBloque -> <empty>
Rule 33    bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN ID SEMICOLON RBRACE
Rule 34    cicloBloqueFuncion -> estatuto cicloBloqueFuncion
Rule 35    cicloBloqueFuncion -> <empty>
Rule 36    cicloVarsFuncion -> varsFuncion cicloVarsFuncion
Rule 37    cicloVarsFuncion -> <empty>
Rule 38    varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion
Rule 39    createVariableDirFuncion -> <empty>
Rule 40    auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON
Rule 41    addTypeGlobalFuncion -> <empty>
Rule 42    idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion
Rule 43    addVariableDirFuncion -> <empty>
Rule 44    ambIdVarsFuncion -> COMMA idVarsFuncion
Rule 45    ambIdVarsFuncion -> <empty>
Rule 46    estatuto -> asignacion
Rule 47    estatuto -> condicion
Rule 48    estatuto -> escritura
Rule 49    estatuto -> lectura
Rule 50    estatuto -> llamada
Rule 51    estatuto -> ciclo
Rule 52    asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON
Rule 53    auxAsignacion1 -> LBRACKET exp RBRACKET
Rule 54    auxAsignacion1 -> <empty>
Rule 55    escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
Rule 56    auxEscritura1 -> auxEscritura2 ambAuxEscritura1
Rule 57    ambAuxEscritura1 -> COMMA auxEscritura1
Rule 58    ambAuxEscritura1 -> <empty>
Rule 59    auxEscritura2 -> exp
Rule 60    auxEscritura2 -> CTESTRING
Rule 61    cicloExpresion -> expresion ambCicloExpresion
Rule 62    ambCicloExpresion -> auxCicloExpresion expresion cicloExpresion
Rule 63    ambCicloExpresion -> <empty>
Rule 64    auxCicloExpresion -> AND paso8_and
Rule 65    auxCicloExpresion -> OR paso8_or
Rule 66    expresion -> exp ambExp
Rule 67    auxExpresion -> GTHAN
Rule 68    auxExpresion -> LTHAN
Rule 69    auxExpresion -> NOTEQUAL
Rule 70    auxExpresion -> GETHAN
Rule 71    auxExpresion -> LETHAN
Rule 72    auxExpresion -> EQUAL
Rule 73    condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion
Rule 74    auxCondicion -> ELSE bloque
Rule 75    auxCondicion -> <empty>
Rule 76    exp -> cicloExp
Rule 77    cicloExp -> termino paso4 ambExp
Rule 78    ambExp -> auxExp cicloExp
Rule 79    ambExp -> <empty>
Rule 80    auxExp -> PLUS paso3_suma
Rule 81    auxExp -> MINUS paso3_resta
Rule 82    termino -> cicloTermino
Rule 83    cicloTermino -> factor paso5 ambCicloTermino
Rule 84    ambCicloTermino -> auxTermino cicloTermino
Rule 85    ambCicloTermino -> <empty>
Rule 86    auxTermino -> MULTI paso2_mult
Rule 87    auxTermino -> DIVIDE paso2_mult
Rule 88    factor -> LPAREN paso6 exp RPAREN paso7
Rule 89    factor -> auxFactor varcte paso1
Rule 90    auxFactor -> auxExp
Rule 91    auxFactor -> <empty>
Rule 92    varcte -> ID auxVarcte
Rule 93    varcte -> CTEINT cteInt
Rule 94    varcte -> CTEFLOAT cteFloat
Rule 95    varcte -> CTECHAR cteChar
Rule 96    varcte -> CTEBOOL cteBool
Rule 97    varcte -> CTESTRING cteString
Rule 98    auxVarcte -> LPAREN exp RPAREN
Rule 99    auxVarcte -> LBRACKET exp LBRACKET
Rule 100   auxVarcte -> <empty>
Rule 101   cicloFuncion -> funcion cicloFuncion
Rule 102   cicloFuncion -> <empty>
Rule 103   funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc
Rule 104   addProcDirectoryFunc -> <empty>
Rule 105   auxFunction -> parametros
Rule 106   auxFunction -> <empty>
Rule 107   parametros -> auxParametros
Rule 108   auxParametros -> tipo ID addParameters ambAuxParametros
Rule 109   addParameters -> <empty>
Rule 110   ambAuxParametros -> COMMA auxParametros
Rule 111   ambAuxParametros -> <empty>
Rule 112   ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque
Rule 113   llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON
Rule 114   auxLlamada -> argumentos
Rule 115   auxLlamada -> <empty>
Rule 116   argumentos -> auxArgumentos1
Rule 117   argumentos -> <empty>
Rule 118   auxArgumentos1 -> exp ambAuxArgumentos1
Rule 119   ambAuxArgumentos1 -> COMMA auxArgumentos1
Rule 120   ambAuxArgumentos1 -> <empty>
Rule 121   lectura -> READ LPAREN ID RPAREN SEMICOLON
Rule 122   paso1 -> <empty>
Rule 123   paso2_mult -> <empty>
Rule 124   paso2_div -> <empty>
Rule 125   paso3_suma -> <empty>
Rule 126   paso3_resta -> <empty>
Rule 127   paso4 -> <empty>
Rule 128   paso5 -> <empty>
Rule 129   paso6 -> <empty>
Rule 130   paso7 -> <empty>
Rule 131   paso8_and -> <empty>
Rule 132   paso8_or -> <empty>
Rule 133   cteInt -> <empty>
Rule 134   cteFloat -> <empty>
Rule 135   cteChar -> <empty>
Rule 136   cteBool -> <empty>
Rule 137   cteString -> <empty>

Terminals, with rules where they appear

AND                  : 64
BOOL                 : 14
CHAR                 : 17
COLON                : 7 24 40
COMMA                : 11 28 44 57 110 119
CTEBOOL              : 96
CTECHAR              : 95
CTEFLOAT             : 94
CTEINT               : 18 93
CTESTRING            : 60 97
DIVIDE               : 87
ELSE                 : 74
EQUAL                : 72
EQUALA               : 52
FLOAT                : 16
FUNCTION             : 103
GETHAN               : 70
GTHAN                : 67
ID                   : 1 9 26 33 42 52 92 103 108 113 121
IF                   : 73
INT                  : 13
LBRACE               : 30 33
LBRACKET             : 18 53 99 99
LETHAN               : 71
LPAREN               : 55 73 88 98 103 112 113 121
LTHAN                : 68
MAIN                 : 1
MINUS                : 81
MULTI                : 86
NOTEQUAL             : 69
OR                   : 65
PLUS                 : 80
PRINT                : 55
PROGRAM              : 1
RBRACE               : 30 33
RBRACKET             : 18 53
READ                 : 121
RETURN               : 33
RPAREN               : 55 73 88 98 103 112 113 121
SEMICOLON            : 1 7 24 33 40 52 55 113 121
STRING               : 15
VAR                  : 5 22 38
WHILE                : 112
error                : 

Nonterminals, with rules where they appear

addParameters        : 108
addProcDirectoryFunc : 103
addProcedureDir      : 1
addTypeGlobal        : 7
addTypeGlobalFuncion : 40
addTypeGlobalMain    : 24
addVariableDir       : 9
addVariableDirFuncion : 42
addVariableDirMain   : 26
ambAuxArgumentos1    : 118
ambAuxEscritura1     : 56
ambAuxParametros     : 108
ambAuxTipo1          : 13 14 15 16 17
ambCicloExpresion    : 61
ambCicloTermino      : 83
ambExp               : 66 77
ambIdVars            : 9
ambIdVarsFuncion     : 42
ambIdVarsMain        : 26
argumentos           : 114
asignacion           : 46
auxArgumentos1       : 116 119
auxAsignacion1       : 52
auxCicloExpresion    : 62
auxCondicion         : 73
auxEscritura1        : 55 57
auxEscritura2        : 56
auxExp               : 78 90
auxExpresion         : 
auxFactor            : 89
auxFunction          : 103
auxLlamada           : 113
auxParametros        : 107 110
auxTermino           : 84
auxVar1              : 5
auxVar1Funcion       : 38
auxVar1Main          : 22
auxVarcte            : 92
bloque               : 1 73 74 112
bloqueFuncion        : 103
ciclo                : 51
cicloBloque          : 30 31
cicloBloqueFuncion   : 33 34
cicloExp             : 76 78
cicloExpresion       : 62 73 112
cicloFuncion         : 1 101
cicloTermino         : 82 84
cicloVars            : 1 3
cicloVarsFuncion     : 33 36
cicloVarsMain        : 20 30
condicion            : 47
createVariableDir    : 5
createVariableDirFuncion : 38
createVariableDirMain : 22
cteBool              : 96
cteChar              : 95
cteFloat             : 94
cteInt               : 93
cteString            : 97
escritura            : 48
estatuto             : 31 34
exp                  : 52 53 59 66 88 98 99 118
expresion            : 61 62
factor               : 83
funcion              : 101
idVars               : 7 11
idVarsFuncion        : 40 44
idVarsMain           : 24 28
lectura              : 49
llamada              : 50
parametros           : 105
paso1                : 89
paso2_div            : 
paso2_mult           : 86 87
paso3_resta          : 81
paso3_suma           : 80
paso4                : 77
paso5                : 83
paso6                : 88
paso7                : 88
paso8_and            : 64
paso8_or             : 65
programa             : 0
termino              : 77
tipo                 : 7 24 40 103 108
varcte               : 89
vars                 : 3
varsFuncion          : 36
varsMain             : 20

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque
    (2) addProcedureDir -> .

    SEMICOLON       reduce using rule 2 (addProcedureDir -> .)

    addProcedureDir                shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProcedureDir . SEMICOLON cicloVars cicloFuncion MAIN bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON . cicloVars cicloFuncion MAIN bloque
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    vars                           shift and go to state 6
    cicloVars                      shift and go to state 7
    createVariableDir              shift and go to state 8

state 6

    (3) cicloVars -> vars . cicloVars
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    createVariableDir              shift and go to state 8
    cicloVars                      shift and go to state 9
    vars                           shift and go to state 6

state 7

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars . cicloFuncion MAIN bloque
    (101) cicloFuncion -> . funcion cicloFuncion
    (102) cicloFuncion -> .
    (103) funcion -> . FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    MAIN            reduce using rule 102 (cicloFuncion -> .)
    FUNCTION        shift and go to state 10

    cicloFuncion                   shift and go to state 11
    funcion                        shift and go to state 12

state 8

    (5) vars -> createVariableDir . VAR auxVar1

    VAR             shift and go to state 13


state 9

    (3) cicloVars -> vars cicloVars .

    FUNCTION        reduce using rule 3 (cicloVars -> vars cicloVars .)
    MAIN            reduce using rule 3 (cicloVars -> vars cicloVars .)


state 10

    (103) funcion -> FUNCTION . tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 15

state 11

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion . MAIN bloque

    MAIN            shift and go to state 20


state 12

    (101) cicloFuncion -> funcion . cicloFuncion
    (101) cicloFuncion -> . funcion cicloFuncion
    (102) cicloFuncion -> .
    (103) funcion -> . FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    MAIN            reduce using rule 102 (cicloFuncion -> .)
    FUNCTION        shift and go to state 10

    cicloFuncion                   shift and go to state 21
    funcion                        shift and go to state 12

state 13

    (5) vars -> createVariableDir VAR . auxVar1
    (7) auxVar1 -> . idVars COLON tipo addTypeGlobal SEMICOLON
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 24

    idVars                         shift and go to state 22
    auxVar1                        shift and go to state 23

state 14

    (15) tipo -> STRING . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 26

state 15

    (103) funcion -> FUNCTION tipo . ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    ID              shift and go to state 27


state 16

    (13) tipo -> INT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 28

state 17

    (16) tipo -> FLOAT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 29

state 18

    (17) tipo -> CHAR . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 30

state 19

    (14) tipo -> BOOL . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 31

state 20

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN . bloque
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 33

state 21

    (101) cicloFuncion -> funcion cicloFuncion .

    MAIN            reduce using rule 101 (cicloFuncion -> funcion cicloFuncion .)


state 22

    (7) auxVar1 -> idVars . COLON tipo addTypeGlobal SEMICOLON

    COLON           shift and go to state 34


state 23

    (5) vars -> createVariableDir VAR auxVar1 .

    VAR             reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    FUNCTION        reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    MAIN            reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)


state 24

    (9) idVars -> ID . addVariableDir ambIdVars
    (10) addVariableDir -> .

    COMMA           reduce using rule 10 (addVariableDir -> .)
    COLON           reduce using rule 10 (addVariableDir -> .)

    addVariableDir                 shift and go to state 35

state 25

    (18) ambAuxTipo1 -> LBRACKET . CTEINT RBRACKET

    CTEINT          shift and go to state 36


state 26

    (15) tipo -> STRING ambAuxTipo1 .

    SEMICOLON       reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)
    ID              reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)


state 27

    (103) funcion -> FUNCTION tipo ID . LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc

    LPAREN          shift and go to state 37


state 28

    (13) tipo -> INT ambAuxTipo1 .

    SEMICOLON       reduce using rule 13 (tipo -> INT ambAuxTipo1 .)
    ID              reduce using rule 13 (tipo -> INT ambAuxTipo1 .)


state 29

    (16) tipo -> FLOAT ambAuxTipo1 .

    SEMICOLON       reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)
    ID              reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)


state 30

    (17) tipo -> CHAR ambAuxTipo1 .

    SEMICOLON       reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)
    ID              reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)


state 31

    (14) tipo -> BOOL ambAuxTipo1 .

    SEMICOLON       reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)
    ID              reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)


state 32

    (30) bloque -> LBRACE . cicloVarsMain cicloBloque RBRACE
    (20) cicloVarsMain -> . varsMain cicloVarsMain
    (21) cicloVarsMain -> .
    (22) varsMain -> . createVariableDirMain VAR auxVar1Main
    (23) createVariableDirMain -> .

    ID              reduce using rule 21 (cicloVarsMain -> .)
    IF              reduce using rule 21 (cicloVarsMain -> .)
    PRINT           reduce using rule 21 (cicloVarsMain -> .)
    READ            reduce using rule 21 (cicloVarsMain -> .)
    WHILE           reduce using rule 21 (cicloVarsMain -> .)
    RBRACE          reduce using rule 21 (cicloVarsMain -> .)
    VAR             reduce using rule 23 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 39
    createVariableDirMain          shift and go to state 38
    varsMain                       shift and go to state 40

state 33

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque .)


state 34

    (7) auxVar1 -> idVars COLON . tipo addTypeGlobal SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 41

state 35

    (9) idVars -> ID addVariableDir . ambIdVars
    (11) ambIdVars -> . COMMA idVars
    (12) ambIdVars -> .

    COMMA           shift and go to state 43
    COLON           reduce using rule 12 (ambIdVars -> .)

    ambIdVars                      shift and go to state 42

state 36

    (18) ambAuxTipo1 -> LBRACKET CTEINT . RBRACKET

    RBRACKET        shift and go to state 44


state 37

    (103) funcion -> FUNCTION tipo ID LPAREN . auxFunction RPAREN bloqueFuncion addProcDirectoryFunc
    (105) auxFunction -> . parametros
    (106) auxFunction -> .
    (107) parametros -> . auxParametros
    (108) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    RPAREN          reduce using rule 106 (auxFunction -> .)
    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 45
    auxFunction                    shift and go to state 46
    auxParametros                  shift and go to state 47
    parametros                     shift and go to state 48

state 38

    (22) varsMain -> createVariableDirMain . VAR auxVar1Main

    VAR             shift and go to state 49


state 39

    (30) bloque -> LBRACE cicloVarsMain . cicloBloque RBRACE
    (31) cicloBloque -> . estatuto cicloBloque
    (32) cicloBloque -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . lectura
    (50) estatuto -> . llamada
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID auxAsignacion1 EQUALA exp SEMICOLON
    (73) condicion -> . IF LPAREN cicloExpresion RPAREN bloque auxCondicion
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (121) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (113) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (112) ciclo -> . WHILE LPAREN cicloExpresion RPAREN bloque

    RBRACE          reduce using rule 32 (cicloBloque -> .)
    ID              shift and go to state 60
    IF              shift and go to state 57
    PRINT           shift and go to state 51
    READ            shift and go to state 50
    WHILE           shift and go to state 52

    ciclo                          shift and go to state 53
    asignacion                     shift and go to state 61
    estatuto                       shift and go to state 54
    llamada                        shift and go to state 55
    condicion                      shift and go to state 56
    cicloBloque                    shift and go to state 59
    lectura                        shift and go to state 58
    escritura                      shift and go to state 62

state 40

    (20) cicloVarsMain -> varsMain . cicloVarsMain
    (20) cicloVarsMain -> . varsMain cicloVarsMain
    (21) cicloVarsMain -> .
    (22) varsMain -> . createVariableDirMain VAR auxVar1Main
    (23) createVariableDirMain -> .

    ID              reduce using rule 21 (cicloVarsMain -> .)
    IF              reduce using rule 21 (cicloVarsMain -> .)
    PRINT           reduce using rule 21 (cicloVarsMain -> .)
    READ            reduce using rule 21 (cicloVarsMain -> .)
    WHILE           reduce using rule 21 (cicloVarsMain -> .)
    RBRACE          reduce using rule 21 (cicloVarsMain -> .)
    VAR             reduce using rule 23 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 63
    createVariableDirMain          shift and go to state 38
    varsMain                       shift and go to state 40

state 41

    (7) auxVar1 -> idVars COLON tipo . addTypeGlobal SEMICOLON
    (8) addTypeGlobal -> .

    SEMICOLON       reduce using rule 8 (addTypeGlobal -> .)

    addTypeGlobal                  shift and go to state 64

state 42

    (9) idVars -> ID addVariableDir ambIdVars .

    COLON           reduce using rule 9 (idVars -> ID addVariableDir ambIdVars .)


state 43

    (11) ambIdVars -> COMMA . idVars
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 24

    idVars                         shift and go to state 65

state 44

    (18) ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .

    ID              reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .)
    SEMICOLON       reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .)


state 45

    (108) auxParametros -> tipo . ID addParameters ambAuxParametros

    ID              shift and go to state 66


state 46

    (103) funcion -> FUNCTION tipo ID LPAREN auxFunction . RPAREN bloqueFuncion addProcDirectoryFunc

    RPAREN          shift and go to state 67


state 47

    (107) parametros -> auxParametros .

    RPAREN          reduce using rule 107 (parametros -> auxParametros .)


state 48

    (105) auxFunction -> parametros .

    RPAREN          reduce using rule 105 (auxFunction -> parametros .)


state 49

    (22) varsMain -> createVariableDirMain VAR . auxVar1Main
    (24) auxVar1Main -> . idVarsMain COLON tipo addTypeGlobalMain SEMICOLON
    (26) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 70

    auxVar1Main                    shift and go to state 68
    idVarsMain                     shift and go to state 69

state 50

    (121) lectura -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 71


state 51

    (55) escritura -> PRINT . LPAREN auxEscritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 72


state 52

    (112) ciclo -> WHILE . LPAREN cicloExpresion RPAREN bloque

    LPAREN          shift and go to state 73


state 53

    (51) estatuto -> ciclo .

    ID              reduce using rule 51 (estatuto -> ciclo .)
    IF              reduce using rule 51 (estatuto -> ciclo .)
    PRINT           reduce using rule 51 (estatuto -> ciclo .)
    READ            reduce using rule 51 (estatuto -> ciclo .)
    WHILE           reduce using rule 51 (estatuto -> ciclo .)
    RBRACE          reduce using rule 51 (estatuto -> ciclo .)
    RETURN          reduce using rule 51 (estatuto -> ciclo .)


state 54

    (31) cicloBloque -> estatuto . cicloBloque
    (31) cicloBloque -> . estatuto cicloBloque
    (32) cicloBloque -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . lectura
    (50) estatuto -> . llamada
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID auxAsignacion1 EQUALA exp SEMICOLON
    (73) condicion -> . IF LPAREN cicloExpresion RPAREN bloque auxCondicion
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (121) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (113) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (112) ciclo -> . WHILE LPAREN cicloExpresion RPAREN bloque

    RBRACE          reduce using rule 32 (cicloBloque -> .)
    ID              shift and go to state 60
    IF              shift and go to state 57
    PRINT           shift and go to state 51
    READ            shift and go to state 50
    WHILE           shift and go to state 52

    ciclo                          shift and go to state 53
    asignacion                     shift and go to state 61
    estatuto                       shift and go to state 54
    llamada                        shift and go to state 55
    condicion                      shift and go to state 56
    cicloBloque                    shift and go to state 74
    lectura                        shift and go to state 58
    escritura                      shift and go to state 62

state 55

    (50) estatuto -> llamada .

    ID              reduce using rule 50 (estatuto -> llamada .)
    IF              reduce using rule 50 (estatuto -> llamada .)
    PRINT           reduce using rule 50 (estatuto -> llamada .)
    READ            reduce using rule 50 (estatuto -> llamada .)
    WHILE           reduce using rule 50 (estatuto -> llamada .)
    RBRACE          reduce using rule 50 (estatuto -> llamada .)
    RETURN          reduce using rule 50 (estatuto -> llamada .)


state 56

    (47) estatuto -> condicion .

    ID              reduce using rule 47 (estatuto -> condicion .)
    IF              reduce using rule 47 (estatuto -> condicion .)
    PRINT           reduce using rule 47 (estatuto -> condicion .)
    READ            reduce using rule 47 (estatuto -> condicion .)
    WHILE           reduce using rule 47 (estatuto -> condicion .)
    RBRACE          reduce using rule 47 (estatuto -> condicion .)
    RETURN          reduce using rule 47 (estatuto -> condicion .)


state 57

    (73) condicion -> IF . LPAREN cicloExpresion RPAREN bloque auxCondicion

    LPAREN          shift and go to state 75


state 58

    (49) estatuto -> lectura .

    ID              reduce using rule 49 (estatuto -> lectura .)
    IF              reduce using rule 49 (estatuto -> lectura .)
    PRINT           reduce using rule 49 (estatuto -> lectura .)
    READ            reduce using rule 49 (estatuto -> lectura .)
    WHILE           reduce using rule 49 (estatuto -> lectura .)
    RBRACE          reduce using rule 49 (estatuto -> lectura .)
    RETURN          reduce using rule 49 (estatuto -> lectura .)


state 59

    (30) bloque -> LBRACE cicloVarsMain cicloBloque . RBRACE

    RBRACE          shift and go to state 76


state 60

    (52) asignacion -> ID . auxAsignacion1 EQUALA exp SEMICOLON
    (113) llamada -> ID . LPAREN auxLlamada RPAREN SEMICOLON
    (53) auxAsignacion1 -> . LBRACKET exp RBRACKET
    (54) auxAsignacion1 -> .

    LPAREN          shift and go to state 79
    LBRACKET        shift and go to state 77
    EQUALA          reduce using rule 54 (auxAsignacion1 -> .)

    auxAsignacion1                 shift and go to state 78

state 61

    (46) estatuto -> asignacion .

    ID              reduce using rule 46 (estatuto -> asignacion .)
    IF              reduce using rule 46 (estatuto -> asignacion .)
    PRINT           reduce using rule 46 (estatuto -> asignacion .)
    READ            reduce using rule 46 (estatuto -> asignacion .)
    WHILE           reduce using rule 46 (estatuto -> asignacion .)
    RBRACE          reduce using rule 46 (estatuto -> asignacion .)
    RETURN          reduce using rule 46 (estatuto -> asignacion .)


state 62

    (48) estatuto -> escritura .

    ID              reduce using rule 48 (estatuto -> escritura .)
    IF              reduce using rule 48 (estatuto -> escritura .)
    PRINT           reduce using rule 48 (estatuto -> escritura .)
    READ            reduce using rule 48 (estatuto -> escritura .)
    WHILE           reduce using rule 48 (estatuto -> escritura .)
    RBRACE          reduce using rule 48 (estatuto -> escritura .)
    RETURN          reduce using rule 48 (estatuto -> escritura .)


state 63

    (20) cicloVarsMain -> varsMain cicloVarsMain .

    ID              reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    IF              reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    PRINT           reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    READ            reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    WHILE           reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)
    RBRACE          reduce using rule 20 (cicloVarsMain -> varsMain cicloVarsMain .)


state 64

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal . SEMICOLON

    SEMICOLON       shift and go to state 80


state 65

    (11) ambIdVars -> COMMA idVars .

    COLON           reduce using rule 11 (ambIdVars -> COMMA idVars .)


state 66

    (108) auxParametros -> tipo ID . addParameters ambAuxParametros
    (109) addParameters -> .

    COMMA           reduce using rule 109 (addParameters -> .)
    RPAREN          reduce using rule 109 (addParameters -> .)

    addParameters                  shift and go to state 81

state 67

    (103) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN . bloqueFuncion addProcDirectoryFunc
    (33) bloqueFuncion -> . LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 82

    bloqueFuncion                  shift and go to state 83

state 68

    (22) varsMain -> createVariableDirMain VAR auxVar1Main .

    VAR             reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    ID              reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    IF              reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    PRINT           reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    READ            reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    WHILE           reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    RBRACE          reduce using rule 22 (varsMain -> createVariableDirMain VAR auxVar1Main .)


state 69

    (24) auxVar1Main -> idVarsMain . COLON tipo addTypeGlobalMain SEMICOLON

    COLON           shift and go to state 84


state 70

    (26) idVarsMain -> ID . addVariableDirMain ambIdVarsMain
    (27) addVariableDirMain -> .

    COMMA           reduce using rule 27 (addVariableDirMain -> .)
    COLON           reduce using rule 27 (addVariableDirMain -> .)

    addVariableDirMain             shift and go to state 85

state 71

    (121) lectura -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 86


state 72

    (55) escritura -> PRINT LPAREN . auxEscritura1 RPAREN SEMICOLON
    (56) auxEscritura1 -> . auxEscritura2 ambAuxEscritura1
    (59) auxEscritura2 -> . exp
    (60) auxEscritura2 -> . CTESTRING
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 87
    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

  ! CTESTRING       [ reduce using rule 91 (auxFactor -> .) ]

    auxExp                         shift and go to state 90
    auxEscritura1                  shift and go to state 95
    auxEscritura2                  shift and go to state 96
    termino                        shift and go to state 88
    exp                            shift and go to state 99
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 73

    (112) ciclo -> WHILE LPAREN . cicloExpresion RPAREN bloque
    (61) cicloExpresion -> . expresion ambCicloExpresion
    (66) expresion -> . exp ambExp
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    expresion                      shift and go to state 101
    auxExp                         shift and go to state 90
    cicloExpresion                 shift and go to state 100
    auxFactor                      shift and go to state 98
    termino                        shift and go to state 88
    exp                            shift and go to state 102
    factor                         shift and go to state 93
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 74

    (31) cicloBloque -> estatuto cicloBloque .

    RBRACE          reduce using rule 31 (cicloBloque -> estatuto cicloBloque .)


state 75

    (73) condicion -> IF LPAREN . cicloExpresion RPAREN bloque auxCondicion
    (61) cicloExpresion -> . expresion ambCicloExpresion
    (66) expresion -> . exp ambExp
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    termino                        shift and go to state 88
    cicloExpresion                 shift and go to state 103
    cicloTermino                   shift and go to state 92
    factor                         shift and go to state 93
    cicloExp                       shift and go to state 94
    auxFactor                      shift and go to state 98
    auxExp                         shift and go to state 90
    expresion                      shift and go to state 101
    exp                            shift and go to state 102

state 76

    (30) bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .

    $end            reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    ID              reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    IF              reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    PRINT           reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    READ            reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    WHILE           reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RBRACE          reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RETURN          reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    ELSE            reduce using rule 30 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)


state 77

    (53) auxAsignacion1 -> LBRACKET . exp RBRACKET
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    auxExp                         shift and go to state 90
    termino                        shift and go to state 88
    exp                            shift and go to state 104
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 78

    (52) asignacion -> ID auxAsignacion1 . EQUALA exp SEMICOLON

    EQUALA          shift and go to state 105


state 79

    (113) llamada -> ID LPAREN . auxLlamada RPAREN SEMICOLON
    (114) auxLlamada -> . argumentos
    (115) auxLlamada -> .
    (116) argumentos -> . auxArgumentos1
    (117) argumentos -> .
    (118) auxArgumentos1 -> . exp ambAuxArgumentos1
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

  ! reduce/reduce conflict for RPAREN resolved using rule 115 (auxLlamada -> .)
    RPAREN          reduce using rule 115 (auxLlamada -> .)
    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

  ! RPAREN          [ reduce using rule 117 (argumentos -> .) ]

    auxExp                         shift and go to state 90
    auxLlamada                     shift and go to state 107
    termino                        shift and go to state 88
    exp                            shift and go to state 109
    factor                         shift and go to state 93
    argumentos                     shift and go to state 106
    auxFactor                      shift and go to state 98
    auxArgumentos1                 shift and go to state 108
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 80

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .

    VAR             reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    FUNCTION        reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    MAIN            reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)


state 81

    (108) auxParametros -> tipo ID addParameters . ambAuxParametros
    (110) ambAuxParametros -> . COMMA auxParametros
    (111) ambAuxParametros -> .

    COMMA           shift and go to state 110
    RPAREN          reduce using rule 111 (ambAuxParametros -> .)

    ambAuxParametros               shift and go to state 111

state 82

    (33) bloqueFuncion -> LBRACE . cicloVarsFuncion cicloBloqueFuncion RETURN ID SEMICOLON RBRACE
    (36) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (37) cicloVarsFuncion -> .
    (38) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (39) createVariableDirFuncion -> .

    ID              reduce using rule 37 (cicloVarsFuncion -> .)
    IF              reduce using rule 37 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 37 (cicloVarsFuncion -> .)
    READ            reduce using rule 37 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 37 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 37 (cicloVarsFuncion -> .)
    VAR             reduce using rule 39 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 112
    cicloVarsFuncion               shift and go to state 113
    createVariableDirFuncion       shift and go to state 114

state 83

    (103) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion . addProcDirectoryFunc
    (104) addProcDirectoryFunc -> .

    FUNCTION        reduce using rule 104 (addProcDirectoryFunc -> .)
    MAIN            reduce using rule 104 (addProcDirectoryFunc -> .)

    addProcDirectoryFunc           shift and go to state 115

state 84

    (24) auxVar1Main -> idVarsMain COLON . tipo addTypeGlobalMain SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 116

state 85

    (26) idVarsMain -> ID addVariableDirMain . ambIdVarsMain
    (28) ambIdVarsMain -> . COMMA idVarsMain
    (29) ambIdVarsMain -> .

    COMMA           shift and go to state 118
    COLON           reduce using rule 29 (ambIdVarsMain -> .)

    ambIdVarsMain                  shift and go to state 117

state 86

    (121) lectura -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 119


state 87

    (60) auxEscritura2 -> CTESTRING .

    COMMA           reduce using rule 60 (auxEscritura2 -> CTESTRING .)
    RPAREN          reduce using rule 60 (auxEscritura2 -> CTESTRING .)


state 88

    (77) cicloExp -> termino . paso4 ambExp
    (127) paso4 -> .

    PLUS            reduce using rule 127 (paso4 -> .)
    MINUS           reduce using rule 127 (paso4 -> .)
    COMMA           reduce using rule 127 (paso4 -> .)
    RPAREN          reduce using rule 127 (paso4 -> .)
    AND             reduce using rule 127 (paso4 -> .)
    OR              reduce using rule 127 (paso4 -> .)
    RBRACKET        reduce using rule 127 (paso4 -> .)
    SEMICOLON       reduce using rule 127 (paso4 -> .)
    LPAREN          reduce using rule 127 (paso4 -> .)
    ID              reduce using rule 127 (paso4 -> .)
    CTEINT          reduce using rule 127 (paso4 -> .)
    CTEFLOAT        reduce using rule 127 (paso4 -> .)
    CTECHAR         reduce using rule 127 (paso4 -> .)
    CTEBOOL         reduce using rule 127 (paso4 -> .)
    CTESTRING       reduce using rule 127 (paso4 -> .)
    LBRACKET        reduce using rule 127 (paso4 -> .)

    paso4                          shift and go to state 120

state 89

    (81) auxExp -> MINUS . paso3_resta
    (126) paso3_resta -> .

    ID              reduce using rule 126 (paso3_resta -> .)
    CTEINT          reduce using rule 126 (paso3_resta -> .)
    CTEFLOAT        reduce using rule 126 (paso3_resta -> .)
    CTECHAR         reduce using rule 126 (paso3_resta -> .)
    CTEBOOL         reduce using rule 126 (paso3_resta -> .)
    CTESTRING       reduce using rule 126 (paso3_resta -> .)
    LPAREN          reduce using rule 126 (paso3_resta -> .)
    PLUS            reduce using rule 126 (paso3_resta -> .)
    MINUS           reduce using rule 126 (paso3_resta -> .)

    paso3_resta                    shift and go to state 121

state 90

    (90) auxFactor -> auxExp .

    ID              reduce using rule 90 (auxFactor -> auxExp .)
    CTEINT          reduce using rule 90 (auxFactor -> auxExp .)
    CTEFLOAT        reduce using rule 90 (auxFactor -> auxExp .)
    CTECHAR         reduce using rule 90 (auxFactor -> auxExp .)
    CTEBOOL         reduce using rule 90 (auxFactor -> auxExp .)
    CTESTRING       reduce using rule 90 (auxFactor -> auxExp .)


state 91

    (80) auxExp -> PLUS . paso3_suma
    (125) paso3_suma -> .

    ID              reduce using rule 125 (paso3_suma -> .)
    CTEINT          reduce using rule 125 (paso3_suma -> .)
    CTEFLOAT        reduce using rule 125 (paso3_suma -> .)
    CTECHAR         reduce using rule 125 (paso3_suma -> .)
    CTEBOOL         reduce using rule 125 (paso3_suma -> .)
    CTESTRING       reduce using rule 125 (paso3_suma -> .)
    LPAREN          reduce using rule 125 (paso3_suma -> .)
    PLUS            reduce using rule 125 (paso3_suma -> .)
    MINUS           reduce using rule 125 (paso3_suma -> .)

    paso3_suma                     shift and go to state 122

state 92

    (82) termino -> cicloTermino .

    PLUS            reduce using rule 82 (termino -> cicloTermino .)
    MINUS           reduce using rule 82 (termino -> cicloTermino .)
    COMMA           reduce using rule 82 (termino -> cicloTermino .)
    RPAREN          reduce using rule 82 (termino -> cicloTermino .)
    AND             reduce using rule 82 (termino -> cicloTermino .)
    OR              reduce using rule 82 (termino -> cicloTermino .)
    LPAREN          reduce using rule 82 (termino -> cicloTermino .)
    ID              reduce using rule 82 (termino -> cicloTermino .)
    CTEINT          reduce using rule 82 (termino -> cicloTermino .)
    CTEFLOAT        reduce using rule 82 (termino -> cicloTermino .)
    CTECHAR         reduce using rule 82 (termino -> cicloTermino .)
    CTEBOOL         reduce using rule 82 (termino -> cicloTermino .)
    CTESTRING       reduce using rule 82 (termino -> cicloTermino .)
    RBRACKET        reduce using rule 82 (termino -> cicloTermino .)
    SEMICOLON       reduce using rule 82 (termino -> cicloTermino .)
    LBRACKET        reduce using rule 82 (termino -> cicloTermino .)


state 93

    (83) cicloTermino -> factor . paso5 ambCicloTermino
    (128) paso5 -> .

    MULTI           reduce using rule 128 (paso5 -> .)
    DIVIDE          reduce using rule 128 (paso5 -> .)
    PLUS            reduce using rule 128 (paso5 -> .)
    MINUS           reduce using rule 128 (paso5 -> .)
    COMMA           reduce using rule 128 (paso5 -> .)
    RPAREN          reduce using rule 128 (paso5 -> .)
    AND             reduce using rule 128 (paso5 -> .)
    OR              reduce using rule 128 (paso5 -> .)
    RBRACKET        reduce using rule 128 (paso5 -> .)
    SEMICOLON       reduce using rule 128 (paso5 -> .)
    LPAREN          reduce using rule 128 (paso5 -> .)
    ID              reduce using rule 128 (paso5 -> .)
    CTEINT          reduce using rule 128 (paso5 -> .)
    CTEFLOAT        reduce using rule 128 (paso5 -> .)
    CTECHAR         reduce using rule 128 (paso5 -> .)
    CTEBOOL         reduce using rule 128 (paso5 -> .)
    CTESTRING       reduce using rule 128 (paso5 -> .)
    LBRACKET        reduce using rule 128 (paso5 -> .)

    paso5                          shift and go to state 123

state 94

    (76) exp -> cicloExp .

    RBRACKET        reduce using rule 76 (exp -> cicloExp .)
    COMMA           reduce using rule 76 (exp -> cicloExp .)
    RPAREN          reduce using rule 76 (exp -> cicloExp .)
    PLUS            reduce using rule 76 (exp -> cicloExp .)
    MINUS           reduce using rule 76 (exp -> cicloExp .)
    AND             reduce using rule 76 (exp -> cicloExp .)
    OR              reduce using rule 76 (exp -> cicloExp .)
    SEMICOLON       reduce using rule 76 (exp -> cicloExp .)
    LPAREN          reduce using rule 76 (exp -> cicloExp .)
    ID              reduce using rule 76 (exp -> cicloExp .)
    CTEINT          reduce using rule 76 (exp -> cicloExp .)
    CTEFLOAT        reduce using rule 76 (exp -> cicloExp .)
    CTECHAR         reduce using rule 76 (exp -> cicloExp .)
    CTEBOOL         reduce using rule 76 (exp -> cicloExp .)
    CTESTRING       reduce using rule 76 (exp -> cicloExp .)
    LBRACKET        reduce using rule 76 (exp -> cicloExp .)


state 95

    (55) escritura -> PRINT LPAREN auxEscritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 124


state 96

    (56) auxEscritura1 -> auxEscritura2 . ambAuxEscritura1
    (57) ambAuxEscritura1 -> . COMMA auxEscritura1
    (58) ambAuxEscritura1 -> .

    COMMA           shift and go to state 125
    RPAREN          reduce using rule 58 (ambAuxEscritura1 -> .)

    ambAuxEscritura1               shift and go to state 126

state 97

    (88) factor -> LPAREN . paso6 exp RPAREN paso7
    (129) paso6 -> .

    LPAREN          reduce using rule 129 (paso6 -> .)
    PLUS            reduce using rule 129 (paso6 -> .)
    MINUS           reduce using rule 129 (paso6 -> .)
    ID              reduce using rule 129 (paso6 -> .)
    CTEINT          reduce using rule 129 (paso6 -> .)
    CTEFLOAT        reduce using rule 129 (paso6 -> .)
    CTECHAR         reduce using rule 129 (paso6 -> .)
    CTEBOOL         reduce using rule 129 (paso6 -> .)
    CTESTRING       reduce using rule 129 (paso6 -> .)

    paso6                          shift and go to state 127

state 98

    (89) factor -> auxFactor . varcte paso1
    (92) varcte -> . ID auxVarcte
    (93) varcte -> . CTEINT cteInt
    (94) varcte -> . CTEFLOAT cteFloat
    (95) varcte -> . CTECHAR cteChar
    (96) varcte -> . CTEBOOL cteBool
    (97) varcte -> . CTESTRING cteString

    ID              shift and go to state 134
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    CTECHAR         shift and go to state 133
    CTEBOOL         shift and go to state 130
    CTESTRING       shift and go to state 128

    varcte                         shift and go to state 129

state 99

    (59) auxEscritura2 -> exp .

    COMMA           reduce using rule 59 (auxEscritura2 -> exp .)
    RPAREN          reduce using rule 59 (auxEscritura2 -> exp .)


state 100

    (112) ciclo -> WHILE LPAREN cicloExpresion . RPAREN bloque

    RPAREN          shift and go to state 135


state 101

    (61) cicloExpresion -> expresion . ambCicloExpresion
    (62) ambCicloExpresion -> . auxCicloExpresion expresion cicloExpresion
    (63) ambCicloExpresion -> .
    (64) auxCicloExpresion -> . AND paso8_and
    (65) auxCicloExpresion -> . OR paso8_or

    RPAREN          reduce using rule 63 (ambCicloExpresion -> .)
    AND             shift and go to state 136
    OR              shift and go to state 139

    auxCicloExpresion              shift and go to state 137
    ambCicloExpresion              shift and go to state 138

state 102

    (66) expresion -> exp . ambExp
    (78) ambExp -> . auxExp cicloExp
    (79) ambExp -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    AND             reduce using rule 79 (ambExp -> .)
    OR              reduce using rule 79 (ambExp -> .)
    RPAREN          reduce using rule 79 (ambExp -> .)
    LPAREN          reduce using rule 79 (ambExp -> .)
    ID              reduce using rule 79 (ambExp -> .)
    CTEINT          reduce using rule 79 (ambExp -> .)
    CTEFLOAT        reduce using rule 79 (ambExp -> .)
    CTECHAR         reduce using rule 79 (ambExp -> .)
    CTEBOOL         reduce using rule 79 (ambExp -> .)
    CTESTRING       reduce using rule 79 (ambExp -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

  ! PLUS            [ reduce using rule 79 (ambExp -> .) ]
  ! MINUS           [ reduce using rule 79 (ambExp -> .) ]

    ambExp                         shift and go to state 140
    auxExp                         shift and go to state 141

state 103

    (73) condicion -> IF LPAREN cicloExpresion . RPAREN bloque auxCondicion

    RPAREN          shift and go to state 142


state 104

    (53) auxAsignacion1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 143


state 105

    (52) asignacion -> ID auxAsignacion1 EQUALA . exp SEMICOLON
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    auxExp                         shift and go to state 90
    termino                        shift and go to state 88
    exp                            shift and go to state 144
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 106

    (114) auxLlamada -> argumentos .

    RPAREN          reduce using rule 114 (auxLlamada -> argumentos .)


state 107

    (113) llamada -> ID LPAREN auxLlamada . RPAREN SEMICOLON

    RPAREN          shift and go to state 145


state 108

    (116) argumentos -> auxArgumentos1 .

    RPAREN          reduce using rule 116 (argumentos -> auxArgumentos1 .)


state 109

    (118) auxArgumentos1 -> exp . ambAuxArgumentos1
    (119) ambAuxArgumentos1 -> . COMMA auxArgumentos1
    (120) ambAuxArgumentos1 -> .

    COMMA           shift and go to state 147
    RPAREN          reduce using rule 120 (ambAuxArgumentos1 -> .)

    ambAuxArgumentos1              shift and go to state 146

state 110

    (110) ambAuxParametros -> COMMA . auxParametros
    (108) auxParametros -> . tipo ID addParameters ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 45
    auxParametros                  shift and go to state 148

state 111

    (108) auxParametros -> tipo ID addParameters ambAuxParametros .

    RPAREN          reduce using rule 108 (auxParametros -> tipo ID addParameters ambAuxParametros .)


state 112

    (36) cicloVarsFuncion -> varsFuncion . cicloVarsFuncion
    (36) cicloVarsFuncion -> . varsFuncion cicloVarsFuncion
    (37) cicloVarsFuncion -> .
    (38) varsFuncion -> . createVariableDirFuncion VAR auxVar1Funcion
    (39) createVariableDirFuncion -> .

    ID              reduce using rule 37 (cicloVarsFuncion -> .)
    IF              reduce using rule 37 (cicloVarsFuncion -> .)
    PRINT           reduce using rule 37 (cicloVarsFuncion -> .)
    READ            reduce using rule 37 (cicloVarsFuncion -> .)
    WHILE           reduce using rule 37 (cicloVarsFuncion -> .)
    RETURN          reduce using rule 37 (cicloVarsFuncion -> .)
    VAR             reduce using rule 39 (createVariableDirFuncion -> .)

    varsFuncion                    shift and go to state 112
    cicloVarsFuncion               shift and go to state 149
    createVariableDirFuncion       shift and go to state 114

state 113

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion . cicloBloqueFuncion RETURN ID SEMICOLON RBRACE
    (34) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (35) cicloBloqueFuncion -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . lectura
    (50) estatuto -> . llamada
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID auxAsignacion1 EQUALA exp SEMICOLON
    (73) condicion -> . IF LPAREN cicloExpresion RPAREN bloque auxCondicion
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (121) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (113) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (112) ciclo -> . WHILE LPAREN cicloExpresion RPAREN bloque

    RETURN          reduce using rule 35 (cicloBloqueFuncion -> .)
    ID              shift and go to state 60
    IF              shift and go to state 57
    PRINT           shift and go to state 51
    READ            shift and go to state 50
    WHILE           shift and go to state 52

    ciclo                          shift and go to state 53
    asignacion                     shift and go to state 61
    estatuto                       shift and go to state 150
    llamada                        shift and go to state 55
    condicion                      shift and go to state 56
    cicloBloqueFuncion             shift and go to state 151
    lectura                        shift and go to state 58
    escritura                      shift and go to state 62

state 114

    (38) varsFuncion -> createVariableDirFuncion . VAR auxVar1Funcion

    VAR             shift and go to state 152


state 115

    (103) funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc .

    FUNCTION        reduce using rule 103 (funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc .)
    MAIN            reduce using rule 103 (funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc .)


state 116

    (24) auxVar1Main -> idVarsMain COLON tipo . addTypeGlobalMain SEMICOLON
    (25) addTypeGlobalMain -> .

    SEMICOLON       reduce using rule 25 (addTypeGlobalMain -> .)

    addTypeGlobalMain              shift and go to state 153

state 117

    (26) idVarsMain -> ID addVariableDirMain ambIdVarsMain .

    COLON           reduce using rule 26 (idVarsMain -> ID addVariableDirMain ambIdVarsMain .)


state 118

    (28) ambIdVarsMain -> COMMA . idVarsMain
    (26) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 70

    idVarsMain                     shift and go to state 154

state 119

    (121) lectura -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 155


state 120

    (77) cicloExp -> termino paso4 . ambExp
    (78) ambExp -> . auxExp cicloExp
    (79) ambExp -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    AND             reduce using rule 79 (ambExp -> .)
    OR              reduce using rule 79 (ambExp -> .)
    RPAREN          reduce using rule 79 (ambExp -> .)
    LPAREN          reduce using rule 79 (ambExp -> .)
    ID              reduce using rule 79 (ambExp -> .)
    CTEINT          reduce using rule 79 (ambExp -> .)
    CTEFLOAT        reduce using rule 79 (ambExp -> .)
    CTECHAR         reduce using rule 79 (ambExp -> .)
    CTEBOOL         reduce using rule 79 (ambExp -> .)
    CTESTRING       reduce using rule 79 (ambExp -> .)
    COMMA           reduce using rule 79 (ambExp -> .)
    RBRACKET        reduce using rule 79 (ambExp -> .)
    SEMICOLON       reduce using rule 79 (ambExp -> .)
    LBRACKET        reduce using rule 79 (ambExp -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

  ! PLUS            [ reduce using rule 79 (ambExp -> .) ]
  ! MINUS           [ reduce using rule 79 (ambExp -> .) ]

    auxExp                         shift and go to state 141
    ambExp                         shift and go to state 156

state 121

    (81) auxExp -> MINUS paso3_resta .

    ID              reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    CTEINT          reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    CTEFLOAT        reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    CTECHAR         reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    CTEBOOL         reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    CTESTRING       reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    LPAREN          reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    PLUS            reduce using rule 81 (auxExp -> MINUS paso3_resta .)
    MINUS           reduce using rule 81 (auxExp -> MINUS paso3_resta .)


state 122

    (80) auxExp -> PLUS paso3_suma .

    ID              reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    CTEINT          reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    CTEFLOAT        reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    CTECHAR         reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    CTEBOOL         reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    CTESTRING       reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    LPAREN          reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    PLUS            reduce using rule 80 (auxExp -> PLUS paso3_suma .)
    MINUS           reduce using rule 80 (auxExp -> PLUS paso3_suma .)


state 123

    (83) cicloTermino -> factor paso5 . ambCicloTermino
    (84) ambCicloTermino -> . auxTermino cicloTermino
    (85) ambCicloTermino -> .
    (86) auxTermino -> . MULTI paso2_mult
    (87) auxTermino -> . DIVIDE paso2_mult

    PLUS            reduce using rule 85 (ambCicloTermino -> .)
    MINUS           reduce using rule 85 (ambCicloTermino -> .)
    COMMA           reduce using rule 85 (ambCicloTermino -> .)
    RPAREN          reduce using rule 85 (ambCicloTermino -> .)
    AND             reduce using rule 85 (ambCicloTermino -> .)
    OR              reduce using rule 85 (ambCicloTermino -> .)
    RBRACKET        reduce using rule 85 (ambCicloTermino -> .)
    SEMICOLON       reduce using rule 85 (ambCicloTermino -> .)
    LPAREN          reduce using rule 85 (ambCicloTermino -> .)
    ID              reduce using rule 85 (ambCicloTermino -> .)
    CTEINT          reduce using rule 85 (ambCicloTermino -> .)
    CTEFLOAT        reduce using rule 85 (ambCicloTermino -> .)
    CTECHAR         reduce using rule 85 (ambCicloTermino -> .)
    CTEBOOL         reduce using rule 85 (ambCicloTermino -> .)
    CTESTRING       reduce using rule 85 (ambCicloTermino -> .)
    LBRACKET        reduce using rule 85 (ambCicloTermino -> .)
    MULTI           shift and go to state 157
    DIVIDE          shift and go to state 160

    ambCicloTermino                shift and go to state 158
    auxTermino                     shift and go to state 159

state 124

    (55) escritura -> PRINT LPAREN auxEscritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 161


state 125

    (57) ambAuxEscritura1 -> COMMA . auxEscritura1
    (56) auxEscritura1 -> . auxEscritura2 ambAuxEscritura1
    (59) auxEscritura2 -> . exp
    (60) auxEscritura2 -> . CTESTRING
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 87
    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

  ! CTESTRING       [ reduce using rule 91 (auxFactor -> .) ]

    auxExp                         shift and go to state 90
    auxEscritura1                  shift and go to state 162
    auxEscritura2                  shift and go to state 96
    termino                        shift and go to state 88
    exp                            shift and go to state 99
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 126

    (56) auxEscritura1 -> auxEscritura2 ambAuxEscritura1 .

    RPAREN          reduce using rule 56 (auxEscritura1 -> auxEscritura2 ambAuxEscritura1 .)


state 127

    (88) factor -> LPAREN paso6 . exp RPAREN paso7
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    auxExp                         shift and go to state 90
    termino                        shift and go to state 88
    exp                            shift and go to state 163
    factor                         shift and go to state 93
    cicloTermino                   shift and go to state 92
    auxFactor                      shift and go to state 98
    cicloExp                       shift and go to state 94

state 128

    (97) varcte -> CTESTRING . cteString
    (137) cteString -> .

    MULTI           reduce using rule 137 (cteString -> .)
    DIVIDE          reduce using rule 137 (cteString -> .)
    PLUS            reduce using rule 137 (cteString -> .)
    MINUS           reduce using rule 137 (cteString -> .)
    COMMA           reduce using rule 137 (cteString -> .)
    RPAREN          reduce using rule 137 (cteString -> .)
    AND             reduce using rule 137 (cteString -> .)
    OR              reduce using rule 137 (cteString -> .)
    RBRACKET        reduce using rule 137 (cteString -> .)
    SEMICOLON       reduce using rule 137 (cteString -> .)
    LPAREN          reduce using rule 137 (cteString -> .)
    ID              reduce using rule 137 (cteString -> .)
    CTEINT          reduce using rule 137 (cteString -> .)
    CTEFLOAT        reduce using rule 137 (cteString -> .)
    CTECHAR         reduce using rule 137 (cteString -> .)
    CTEBOOL         reduce using rule 137 (cteString -> .)
    CTESTRING       reduce using rule 137 (cteString -> .)
    LBRACKET        reduce using rule 137 (cteString -> .)

    cteString                      shift and go to state 164

state 129

    (89) factor -> auxFactor varcte . paso1
    (122) paso1 -> .

    MULTI           reduce using rule 122 (paso1 -> .)
    DIVIDE          reduce using rule 122 (paso1 -> .)
    PLUS            reduce using rule 122 (paso1 -> .)
    MINUS           reduce using rule 122 (paso1 -> .)
    COMMA           reduce using rule 122 (paso1 -> .)
    RPAREN          reduce using rule 122 (paso1 -> .)
    AND             reduce using rule 122 (paso1 -> .)
    OR              reduce using rule 122 (paso1 -> .)
    RBRACKET        reduce using rule 122 (paso1 -> .)
    SEMICOLON       reduce using rule 122 (paso1 -> .)
    LPAREN          reduce using rule 122 (paso1 -> .)
    ID              reduce using rule 122 (paso1 -> .)
    CTEINT          reduce using rule 122 (paso1 -> .)
    CTEFLOAT        reduce using rule 122 (paso1 -> .)
    CTECHAR         reduce using rule 122 (paso1 -> .)
    CTEBOOL         reduce using rule 122 (paso1 -> .)
    CTESTRING       reduce using rule 122 (paso1 -> .)
    LBRACKET        reduce using rule 122 (paso1 -> .)

    paso1                          shift and go to state 165

state 130

    (96) varcte -> CTEBOOL . cteBool
    (136) cteBool -> .

    MULTI           reduce using rule 136 (cteBool -> .)
    DIVIDE          reduce using rule 136 (cteBool -> .)
    PLUS            reduce using rule 136 (cteBool -> .)
    MINUS           reduce using rule 136 (cteBool -> .)
    COMMA           reduce using rule 136 (cteBool -> .)
    RPAREN          reduce using rule 136 (cteBool -> .)
    AND             reduce using rule 136 (cteBool -> .)
    OR              reduce using rule 136 (cteBool -> .)
    RBRACKET        reduce using rule 136 (cteBool -> .)
    SEMICOLON       reduce using rule 136 (cteBool -> .)
    LPAREN          reduce using rule 136 (cteBool -> .)
    ID              reduce using rule 136 (cteBool -> .)
    CTEINT          reduce using rule 136 (cteBool -> .)
    CTEFLOAT        reduce using rule 136 (cteBool -> .)
    CTECHAR         reduce using rule 136 (cteBool -> .)
    CTEBOOL         reduce using rule 136 (cteBool -> .)
    CTESTRING       reduce using rule 136 (cteBool -> .)
    LBRACKET        reduce using rule 136 (cteBool -> .)

    cteBool                        shift and go to state 166

state 131

    (93) varcte -> CTEINT . cteInt
    (133) cteInt -> .

    MULTI           reduce using rule 133 (cteInt -> .)
    DIVIDE          reduce using rule 133 (cteInt -> .)
    PLUS            reduce using rule 133 (cteInt -> .)
    MINUS           reduce using rule 133 (cteInt -> .)
    COMMA           reduce using rule 133 (cteInt -> .)
    RPAREN          reduce using rule 133 (cteInt -> .)
    AND             reduce using rule 133 (cteInt -> .)
    OR              reduce using rule 133 (cteInt -> .)
    RBRACKET        reduce using rule 133 (cteInt -> .)
    SEMICOLON       reduce using rule 133 (cteInt -> .)
    LPAREN          reduce using rule 133 (cteInt -> .)
    ID              reduce using rule 133 (cteInt -> .)
    CTEINT          reduce using rule 133 (cteInt -> .)
    CTEFLOAT        reduce using rule 133 (cteInt -> .)
    CTECHAR         reduce using rule 133 (cteInt -> .)
    CTEBOOL         reduce using rule 133 (cteInt -> .)
    CTESTRING       reduce using rule 133 (cteInt -> .)
    LBRACKET        reduce using rule 133 (cteInt -> .)

    cteInt                         shift and go to state 167

state 132

    (94) varcte -> CTEFLOAT . cteFloat
    (134) cteFloat -> .

    MULTI           reduce using rule 134 (cteFloat -> .)
    DIVIDE          reduce using rule 134 (cteFloat -> .)
    PLUS            reduce using rule 134 (cteFloat -> .)
    MINUS           reduce using rule 134 (cteFloat -> .)
    COMMA           reduce using rule 134 (cteFloat -> .)
    RPAREN          reduce using rule 134 (cteFloat -> .)
    AND             reduce using rule 134 (cteFloat -> .)
    OR              reduce using rule 134 (cteFloat -> .)
    RBRACKET        reduce using rule 134 (cteFloat -> .)
    SEMICOLON       reduce using rule 134 (cteFloat -> .)
    LPAREN          reduce using rule 134 (cteFloat -> .)
    ID              reduce using rule 134 (cteFloat -> .)
    CTEINT          reduce using rule 134 (cteFloat -> .)
    CTEFLOAT        reduce using rule 134 (cteFloat -> .)
    CTECHAR         reduce using rule 134 (cteFloat -> .)
    CTEBOOL         reduce using rule 134 (cteFloat -> .)
    CTESTRING       reduce using rule 134 (cteFloat -> .)
    LBRACKET        reduce using rule 134 (cteFloat -> .)

    cteFloat                       shift and go to state 168

state 133

    (95) varcte -> CTECHAR . cteChar
    (135) cteChar -> .

    MULTI           reduce using rule 135 (cteChar -> .)
    DIVIDE          reduce using rule 135 (cteChar -> .)
    PLUS            reduce using rule 135 (cteChar -> .)
    MINUS           reduce using rule 135 (cteChar -> .)
    COMMA           reduce using rule 135 (cteChar -> .)
    RPAREN          reduce using rule 135 (cteChar -> .)
    AND             reduce using rule 135 (cteChar -> .)
    OR              reduce using rule 135 (cteChar -> .)
    RBRACKET        reduce using rule 135 (cteChar -> .)
    SEMICOLON       reduce using rule 135 (cteChar -> .)
    LPAREN          reduce using rule 135 (cteChar -> .)
    ID              reduce using rule 135 (cteChar -> .)
    CTEINT          reduce using rule 135 (cteChar -> .)
    CTEFLOAT        reduce using rule 135 (cteChar -> .)
    CTECHAR         reduce using rule 135 (cteChar -> .)
    CTEBOOL         reduce using rule 135 (cteChar -> .)
    CTESTRING       reduce using rule 135 (cteChar -> .)
    LBRACKET        reduce using rule 135 (cteChar -> .)

    cteChar                        shift and go to state 169

state 134

    (92) varcte -> ID . auxVarcte
    (98) auxVarcte -> . LPAREN exp RPAREN
    (99) auxVarcte -> . LBRACKET exp LBRACKET
    (100) auxVarcte -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    LPAREN          shift and go to state 170
    LBRACKET        shift and go to state 171
    MULTI           reduce using rule 100 (auxVarcte -> .)
    DIVIDE          reduce using rule 100 (auxVarcte -> .)
    PLUS            reduce using rule 100 (auxVarcte -> .)
    MINUS           reduce using rule 100 (auxVarcte -> .)
    COMMA           reduce using rule 100 (auxVarcte -> .)
    RPAREN          reduce using rule 100 (auxVarcte -> .)
    AND             reduce using rule 100 (auxVarcte -> .)
    OR              reduce using rule 100 (auxVarcte -> .)
    RBRACKET        reduce using rule 100 (auxVarcte -> .)
    SEMICOLON       reduce using rule 100 (auxVarcte -> .)
    ID              reduce using rule 100 (auxVarcte -> .)
    CTEINT          reduce using rule 100 (auxVarcte -> .)
    CTEFLOAT        reduce using rule 100 (auxVarcte -> .)
    CTECHAR         reduce using rule 100 (auxVarcte -> .)
    CTEBOOL         reduce using rule 100 (auxVarcte -> .)
    CTESTRING       reduce using rule 100 (auxVarcte -> .)

  ! LPAREN          [ reduce using rule 100 (auxVarcte -> .) ]
  ! LBRACKET        [ reduce using rule 100 (auxVarcte -> .) ]

    auxVarcte                      shift and go to state 172

state 135

    (112) ciclo -> WHILE LPAREN cicloExpresion RPAREN . bloque
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 173

state 136

    (64) auxCicloExpresion -> AND . paso8_and
    (131) paso8_and -> .

    LPAREN          reduce using rule 131 (paso8_and -> .)
    PLUS            reduce using rule 131 (paso8_and -> .)
    MINUS           reduce using rule 131 (paso8_and -> .)
    ID              reduce using rule 131 (paso8_and -> .)
    CTEINT          reduce using rule 131 (paso8_and -> .)
    CTEFLOAT        reduce using rule 131 (paso8_and -> .)
    CTECHAR         reduce using rule 131 (paso8_and -> .)
    CTEBOOL         reduce using rule 131 (paso8_and -> .)
    CTESTRING       reduce using rule 131 (paso8_and -> .)

    paso8_and                      shift and go to state 174

state 137

    (62) ambCicloExpresion -> auxCicloExpresion . expresion cicloExpresion
    (66) expresion -> . exp ambExp
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    expresion                      shift and go to state 175
    auxExp                         shift and go to state 90
    termino                        shift and go to state 88
    exp                            shift and go to state 102
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 138

    (61) cicloExpresion -> expresion ambCicloExpresion .

    RPAREN          reduce using rule 61 (cicloExpresion -> expresion ambCicloExpresion .)


state 139

    (65) auxCicloExpresion -> OR . paso8_or
    (132) paso8_or -> .

    LPAREN          reduce using rule 132 (paso8_or -> .)
    PLUS            reduce using rule 132 (paso8_or -> .)
    MINUS           reduce using rule 132 (paso8_or -> .)
    ID              reduce using rule 132 (paso8_or -> .)
    CTEINT          reduce using rule 132 (paso8_or -> .)
    CTEFLOAT        reduce using rule 132 (paso8_or -> .)
    CTECHAR         reduce using rule 132 (paso8_or -> .)
    CTEBOOL         reduce using rule 132 (paso8_or -> .)
    CTESTRING       reduce using rule 132 (paso8_or -> .)

    paso8_or                       shift and go to state 176

state 140

    (66) expresion -> exp ambExp .

    LPAREN          reduce using rule 66 (expresion -> exp ambExp .)
    PLUS            reduce using rule 66 (expresion -> exp ambExp .)
    MINUS           reduce using rule 66 (expresion -> exp ambExp .)
    ID              reduce using rule 66 (expresion -> exp ambExp .)
    CTEINT          reduce using rule 66 (expresion -> exp ambExp .)
    CTEFLOAT        reduce using rule 66 (expresion -> exp ambExp .)
    CTECHAR         reduce using rule 66 (expresion -> exp ambExp .)
    CTEBOOL         reduce using rule 66 (expresion -> exp ambExp .)
    CTESTRING       reduce using rule 66 (expresion -> exp ambExp .)
    AND             reduce using rule 66 (expresion -> exp ambExp .)
    OR              reduce using rule 66 (expresion -> exp ambExp .)
    RPAREN          reduce using rule 66 (expresion -> exp ambExp .)


state 141

    (78) ambExp -> auxExp . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    cicloExp                       shift and go to state 177
    termino                        shift and go to state 88
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98
    auxExp                         shift and go to state 90
    cicloTermino                   shift and go to state 92

state 142

    (73) condicion -> IF LPAREN cicloExpresion RPAREN . bloque auxCondicion
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 178

state 143

    (53) auxAsignacion1 -> LBRACKET exp RBRACKET .

    EQUALA          reduce using rule 53 (auxAsignacion1 -> LBRACKET exp RBRACKET .)


state 144

    (52) asignacion -> ID auxAsignacion1 EQUALA exp . SEMICOLON

    SEMICOLON       shift and go to state 179


state 145

    (113) llamada -> ID LPAREN auxLlamada RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 180


state 146

    (118) auxArgumentos1 -> exp ambAuxArgumentos1 .

    RPAREN          reduce using rule 118 (auxArgumentos1 -> exp ambAuxArgumentos1 .)


state 147

    (119) ambAuxArgumentos1 -> COMMA . auxArgumentos1
    (118) auxArgumentos1 -> . exp ambAuxArgumentos1
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    auxExp                         shift and go to state 90
    auxArgumentos1                 shift and go to state 181
    termino                        shift and go to state 88
    exp                            shift and go to state 109
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 148

    (110) ambAuxParametros -> COMMA auxParametros .

    RPAREN          reduce using rule 110 (ambAuxParametros -> COMMA auxParametros .)


state 149

    (36) cicloVarsFuncion -> varsFuncion cicloVarsFuncion .

    ID              reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    IF              reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    PRINT           reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    READ            reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    WHILE           reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)
    RETURN          reduce using rule 36 (cicloVarsFuncion -> varsFuncion cicloVarsFuncion .)


state 150

    (34) cicloBloqueFuncion -> estatuto . cicloBloqueFuncion
    (34) cicloBloqueFuncion -> . estatuto cicloBloqueFuncion
    (35) cicloBloqueFuncion -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . lectura
    (50) estatuto -> . llamada
    (51) estatuto -> . ciclo
    (52) asignacion -> . ID auxAsignacion1 EQUALA exp SEMICOLON
    (73) condicion -> . IF LPAREN cicloExpresion RPAREN bloque auxCondicion
    (55) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (121) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (113) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (112) ciclo -> . WHILE LPAREN cicloExpresion RPAREN bloque

    RETURN          reduce using rule 35 (cicloBloqueFuncion -> .)
    ID              shift and go to state 60
    IF              shift and go to state 57
    PRINT           shift and go to state 51
    READ            shift and go to state 50
    WHILE           shift and go to state 52

    ciclo                          shift and go to state 53
    asignacion                     shift and go to state 61
    estatuto                       shift and go to state 150
    llamada                        shift and go to state 55
    condicion                      shift and go to state 56
    cicloBloqueFuncion             shift and go to state 182
    lectura                        shift and go to state 58
    escritura                      shift and go to state 62

state 151

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion . RETURN ID SEMICOLON RBRACE

    RETURN          shift and go to state 183


state 152

    (38) varsFuncion -> createVariableDirFuncion VAR . auxVar1Funcion
    (40) auxVar1Funcion -> . idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON
    (42) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 186

    idVarsFuncion                  shift and go to state 184
    auxVar1Funcion                 shift and go to state 185

state 153

    (24) auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain . SEMICOLON

    SEMICOLON       shift and go to state 187


state 154

    (28) ambIdVarsMain -> COMMA idVarsMain .

    COLON           reduce using rule 28 (ambIdVarsMain -> COMMA idVarsMain .)


state 155

    (121) lectura -> READ LPAREN ID RPAREN SEMICOLON .

    ID              reduce using rule 121 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 121 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 121 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 121 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 121 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 121 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACE          reduce using rule 121 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)


state 156

    (77) cicloExp -> termino paso4 ambExp .

    COMMA           reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    RPAREN          reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    RBRACKET        reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    AND             reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    OR              reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    LPAREN          reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    PLUS            reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    MINUS           reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    ID              reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    CTEINT          reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    CTEFLOAT        reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    CTECHAR         reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    CTEBOOL         reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    CTESTRING       reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    SEMICOLON       reduce using rule 77 (cicloExp -> termino paso4 ambExp .)
    LBRACKET        reduce using rule 77 (cicloExp -> termino paso4 ambExp .)


state 157

    (86) auxTermino -> MULTI . paso2_mult
    (123) paso2_mult -> .

    LPAREN          reduce using rule 123 (paso2_mult -> .)
    PLUS            reduce using rule 123 (paso2_mult -> .)
    MINUS           reduce using rule 123 (paso2_mult -> .)
    ID              reduce using rule 123 (paso2_mult -> .)
    CTEINT          reduce using rule 123 (paso2_mult -> .)
    CTEFLOAT        reduce using rule 123 (paso2_mult -> .)
    CTECHAR         reduce using rule 123 (paso2_mult -> .)
    CTEBOOL         reduce using rule 123 (paso2_mult -> .)
    CTESTRING       reduce using rule 123 (paso2_mult -> .)

    paso2_mult                     shift and go to state 188

state 158

    (83) cicloTermino -> factor paso5 ambCicloTermino .

    PLUS            reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    MINUS           reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    AND             reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    OR              reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    RPAREN          reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    COMMA           reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    SEMICOLON       reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    LPAREN          reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    ID              reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    CTEINT          reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    CTEFLOAT        reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    CTECHAR         reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    CTEBOOL         reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    CTESTRING       reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    RBRACKET        reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)
    LBRACKET        reduce using rule 83 (cicloTermino -> factor paso5 ambCicloTermino .)


state 159

    (84) ambCicloTermino -> auxTermino . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    auxExp                         shift and go to state 90
    cicloTermino                   shift and go to state 189
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98

state 160

    (87) auxTermino -> DIVIDE . paso2_mult
    (123) paso2_mult -> .

    LPAREN          reduce using rule 123 (paso2_mult -> .)
    PLUS            reduce using rule 123 (paso2_mult -> .)
    MINUS           reduce using rule 123 (paso2_mult -> .)
    ID              reduce using rule 123 (paso2_mult -> .)
    CTEINT          reduce using rule 123 (paso2_mult -> .)
    CTEFLOAT        reduce using rule 123 (paso2_mult -> .)
    CTECHAR         reduce using rule 123 (paso2_mult -> .)
    CTEBOOL         reduce using rule 123 (paso2_mult -> .)
    CTESTRING       reduce using rule 123 (paso2_mult -> .)

    paso2_mult                     shift and go to state 190

state 161

    (55) escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .

    ID              reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    READ            reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 55 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)


state 162

    (57) ambAuxEscritura1 -> COMMA auxEscritura1 .

    RPAREN          reduce using rule 57 (ambAuxEscritura1 -> COMMA auxEscritura1 .)


state 163

    (88) factor -> LPAREN paso6 exp . RPAREN paso7

    RPAREN          shift and go to state 191


state 164

    (97) varcte -> CTESTRING cteString .

    MULTI           reduce using rule 97 (varcte -> CTESTRING cteString .)
    DIVIDE          reduce using rule 97 (varcte -> CTESTRING cteString .)
    PLUS            reduce using rule 97 (varcte -> CTESTRING cteString .)
    MINUS           reduce using rule 97 (varcte -> CTESTRING cteString .)
    COMMA           reduce using rule 97 (varcte -> CTESTRING cteString .)
    RPAREN          reduce using rule 97 (varcte -> CTESTRING cteString .)
    AND             reduce using rule 97 (varcte -> CTESTRING cteString .)
    OR              reduce using rule 97 (varcte -> CTESTRING cteString .)
    RBRACKET        reduce using rule 97 (varcte -> CTESTRING cteString .)
    SEMICOLON       reduce using rule 97 (varcte -> CTESTRING cteString .)
    LPAREN          reduce using rule 97 (varcte -> CTESTRING cteString .)
    ID              reduce using rule 97 (varcte -> CTESTRING cteString .)
    CTEINT          reduce using rule 97 (varcte -> CTESTRING cteString .)
    CTEFLOAT        reduce using rule 97 (varcte -> CTESTRING cteString .)
    CTECHAR         reduce using rule 97 (varcte -> CTESTRING cteString .)
    CTEBOOL         reduce using rule 97 (varcte -> CTESTRING cteString .)
    CTESTRING       reduce using rule 97 (varcte -> CTESTRING cteString .)
    LBRACKET        reduce using rule 97 (varcte -> CTESTRING cteString .)


state 165

    (89) factor -> auxFactor varcte paso1 .

    MULTI           reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    DIVIDE          reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    PLUS            reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    MINUS           reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    RBRACKET        reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    LPAREN          reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    ID              reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    CTEINT          reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    CTEFLOAT        reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    CTECHAR         reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    CTEBOOL         reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    CTESTRING       reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    LBRACKET        reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    RPAREN          reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    SEMICOLON       reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    AND             reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    OR              reduce using rule 89 (factor -> auxFactor varcte paso1 .)
    COMMA           reduce using rule 89 (factor -> auxFactor varcte paso1 .)


state 166

    (96) varcte -> CTEBOOL cteBool .

    MULTI           reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    DIVIDE          reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    PLUS            reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    MINUS           reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    COMMA           reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    RPAREN          reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    AND             reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    OR              reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    RBRACKET        reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    SEMICOLON       reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    LPAREN          reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    ID              reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    CTEINT          reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    CTEFLOAT        reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    CTECHAR         reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    CTEBOOL         reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    CTESTRING       reduce using rule 96 (varcte -> CTEBOOL cteBool .)
    LBRACKET        reduce using rule 96 (varcte -> CTEBOOL cteBool .)


state 167

    (93) varcte -> CTEINT cteInt .

    MULTI           reduce using rule 93 (varcte -> CTEINT cteInt .)
    DIVIDE          reduce using rule 93 (varcte -> CTEINT cteInt .)
    PLUS            reduce using rule 93 (varcte -> CTEINT cteInt .)
    MINUS           reduce using rule 93 (varcte -> CTEINT cteInt .)
    COMMA           reduce using rule 93 (varcte -> CTEINT cteInt .)
    RPAREN          reduce using rule 93 (varcte -> CTEINT cteInt .)
    AND             reduce using rule 93 (varcte -> CTEINT cteInt .)
    OR              reduce using rule 93 (varcte -> CTEINT cteInt .)
    RBRACKET        reduce using rule 93 (varcte -> CTEINT cteInt .)
    SEMICOLON       reduce using rule 93 (varcte -> CTEINT cteInt .)
    LPAREN          reduce using rule 93 (varcte -> CTEINT cteInt .)
    ID              reduce using rule 93 (varcte -> CTEINT cteInt .)
    CTEINT          reduce using rule 93 (varcte -> CTEINT cteInt .)
    CTEFLOAT        reduce using rule 93 (varcte -> CTEINT cteInt .)
    CTECHAR         reduce using rule 93 (varcte -> CTEINT cteInt .)
    CTEBOOL         reduce using rule 93 (varcte -> CTEINT cteInt .)
    CTESTRING       reduce using rule 93 (varcte -> CTEINT cteInt .)
    LBRACKET        reduce using rule 93 (varcte -> CTEINT cteInt .)


state 168

    (94) varcte -> CTEFLOAT cteFloat .

    MULTI           reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    DIVIDE          reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    PLUS            reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    MINUS           reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    COMMA           reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    RPAREN          reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    AND             reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    OR              reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    RBRACKET        reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    SEMICOLON       reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    LPAREN          reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    ID              reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    CTEINT          reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    CTEFLOAT        reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    CTECHAR         reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    CTEBOOL         reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    CTESTRING       reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)
    LBRACKET        reduce using rule 94 (varcte -> CTEFLOAT cteFloat .)


state 169

    (95) varcte -> CTECHAR cteChar .

    MULTI           reduce using rule 95 (varcte -> CTECHAR cteChar .)
    DIVIDE          reduce using rule 95 (varcte -> CTECHAR cteChar .)
    PLUS            reduce using rule 95 (varcte -> CTECHAR cteChar .)
    MINUS           reduce using rule 95 (varcte -> CTECHAR cteChar .)
    COMMA           reduce using rule 95 (varcte -> CTECHAR cteChar .)
    RPAREN          reduce using rule 95 (varcte -> CTECHAR cteChar .)
    AND             reduce using rule 95 (varcte -> CTECHAR cteChar .)
    OR              reduce using rule 95 (varcte -> CTECHAR cteChar .)
    RBRACKET        reduce using rule 95 (varcte -> CTECHAR cteChar .)
    SEMICOLON       reduce using rule 95 (varcte -> CTECHAR cteChar .)
    LPAREN          reduce using rule 95 (varcte -> CTECHAR cteChar .)
    ID              reduce using rule 95 (varcte -> CTECHAR cteChar .)
    CTEINT          reduce using rule 95 (varcte -> CTECHAR cteChar .)
    CTEFLOAT        reduce using rule 95 (varcte -> CTECHAR cteChar .)
    CTECHAR         reduce using rule 95 (varcte -> CTECHAR cteChar .)
    CTEBOOL         reduce using rule 95 (varcte -> CTECHAR cteChar .)
    CTESTRING       reduce using rule 95 (varcte -> CTECHAR cteChar .)
    LBRACKET        reduce using rule 95 (varcte -> CTECHAR cteChar .)


state 170

    (98) auxVarcte -> LPAREN . exp RPAREN
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    auxExp                         shift and go to state 90
    termino                        shift and go to state 88
    exp                            shift and go to state 192
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 171

    (99) auxVarcte -> LBRACKET . exp LBRACKET
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    auxExp                         shift and go to state 90
    termino                        shift and go to state 88
    exp                            shift and go to state 193
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 172

    (92) varcte -> ID auxVarcte .

    MULTI           reduce using rule 92 (varcte -> ID auxVarcte .)
    DIVIDE          reduce using rule 92 (varcte -> ID auxVarcte .)
    PLUS            reduce using rule 92 (varcte -> ID auxVarcte .)
    MINUS           reduce using rule 92 (varcte -> ID auxVarcte .)
    COMMA           reduce using rule 92 (varcte -> ID auxVarcte .)
    RPAREN          reduce using rule 92 (varcte -> ID auxVarcte .)
    AND             reduce using rule 92 (varcte -> ID auxVarcte .)
    OR              reduce using rule 92 (varcte -> ID auxVarcte .)
    RBRACKET        reduce using rule 92 (varcte -> ID auxVarcte .)
    SEMICOLON       reduce using rule 92 (varcte -> ID auxVarcte .)
    LPAREN          reduce using rule 92 (varcte -> ID auxVarcte .)
    ID              reduce using rule 92 (varcte -> ID auxVarcte .)
    CTEINT          reduce using rule 92 (varcte -> ID auxVarcte .)
    CTEFLOAT        reduce using rule 92 (varcte -> ID auxVarcte .)
    CTECHAR         reduce using rule 92 (varcte -> ID auxVarcte .)
    CTEBOOL         reduce using rule 92 (varcte -> ID auxVarcte .)
    CTESTRING       reduce using rule 92 (varcte -> ID auxVarcte .)
    LBRACKET        reduce using rule 92 (varcte -> ID auxVarcte .)


state 173

    (112) ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque .

    ID              reduce using rule 112 (ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque .)
    IF              reduce using rule 112 (ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque .)
    PRINT           reduce using rule 112 (ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque .)
    READ            reduce using rule 112 (ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque .)
    WHILE           reduce using rule 112 (ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque .)
    RBRACE          reduce using rule 112 (ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque .)
    RETURN          reduce using rule 112 (ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque .)


state 174

    (64) auxCicloExpresion -> AND paso8_and .

    LPAREN          reduce using rule 64 (auxCicloExpresion -> AND paso8_and .)
    PLUS            reduce using rule 64 (auxCicloExpresion -> AND paso8_and .)
    MINUS           reduce using rule 64 (auxCicloExpresion -> AND paso8_and .)
    ID              reduce using rule 64 (auxCicloExpresion -> AND paso8_and .)
    CTEINT          reduce using rule 64 (auxCicloExpresion -> AND paso8_and .)
    CTEFLOAT        reduce using rule 64 (auxCicloExpresion -> AND paso8_and .)
    CTECHAR         reduce using rule 64 (auxCicloExpresion -> AND paso8_and .)
    CTEBOOL         reduce using rule 64 (auxCicloExpresion -> AND paso8_and .)
    CTESTRING       reduce using rule 64 (auxCicloExpresion -> AND paso8_and .)


state 175

    (62) ambCicloExpresion -> auxCicloExpresion expresion . cicloExpresion
    (61) cicloExpresion -> . expresion ambCicloExpresion
    (66) expresion -> . exp ambExp
    (76) exp -> . cicloExp
    (77) cicloExp -> . termino paso4 ambExp
    (82) termino -> . cicloTermino
    (83) cicloTermino -> . factor paso5 ambCicloTermino
    (88) factor -> . LPAREN paso6 exp RPAREN paso7
    (89) factor -> . auxFactor varcte paso1
    (90) auxFactor -> . auxExp
    (91) auxFactor -> .
    (80) auxExp -> . PLUS paso3_suma
    (81) auxExp -> . MINUS paso3_resta

    LPAREN          shift and go to state 97
    ID              reduce using rule 91 (auxFactor -> .)
    CTEINT          reduce using rule 91 (auxFactor -> .)
    CTEFLOAT        reduce using rule 91 (auxFactor -> .)
    CTECHAR         reduce using rule 91 (auxFactor -> .)
    CTEBOOL         reduce using rule 91 (auxFactor -> .)
    CTESTRING       reduce using rule 91 (auxFactor -> .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 89

    expresion                      shift and go to state 101
    auxExp                         shift and go to state 90
    cicloExpresion                 shift and go to state 194
    termino                        shift and go to state 88
    exp                            shift and go to state 102
    factor                         shift and go to state 93
    auxFactor                      shift and go to state 98
    cicloExp                       shift and go to state 94
    cicloTermino                   shift and go to state 92

state 176

    (65) auxCicloExpresion -> OR paso8_or .

    LPAREN          reduce using rule 65 (auxCicloExpresion -> OR paso8_or .)
    PLUS            reduce using rule 65 (auxCicloExpresion -> OR paso8_or .)
    MINUS           reduce using rule 65 (auxCicloExpresion -> OR paso8_or .)
    ID              reduce using rule 65 (auxCicloExpresion -> OR paso8_or .)
    CTEINT          reduce using rule 65 (auxCicloExpresion -> OR paso8_or .)
    CTEFLOAT        reduce using rule 65 (auxCicloExpresion -> OR paso8_or .)
    CTECHAR         reduce using rule 65 (auxCicloExpresion -> OR paso8_or .)
    CTEBOOL         reduce using rule 65 (auxCicloExpresion -> OR paso8_or .)
    CTESTRING       reduce using rule 65 (auxCicloExpresion -> OR paso8_or .)


state 177

    (78) ambExp -> auxExp cicloExp .

    AND             reduce using rule 78 (ambExp -> auxExp cicloExp .)
    OR              reduce using rule 78 (ambExp -> auxExp cicloExp .)
    RPAREN          reduce using rule 78 (ambExp -> auxExp cicloExp .)
    LPAREN          reduce using rule 78 (ambExp -> auxExp cicloExp .)
    PLUS            reduce using rule 78 (ambExp -> auxExp cicloExp .)
    MINUS           reduce using rule 78 (ambExp -> auxExp cicloExp .)
    ID              reduce using rule 78 (ambExp -> auxExp cicloExp .)
    CTEINT          reduce using rule 78 (ambExp -> auxExp cicloExp .)
    CTEFLOAT        reduce using rule 78 (ambExp -> auxExp cicloExp .)
    CTECHAR         reduce using rule 78 (ambExp -> auxExp cicloExp .)
    CTEBOOL         reduce using rule 78 (ambExp -> auxExp cicloExp .)
    CTESTRING       reduce using rule 78 (ambExp -> auxExp cicloExp .)
    COMMA           reduce using rule 78 (ambExp -> auxExp cicloExp .)
    RBRACKET        reduce using rule 78 (ambExp -> auxExp cicloExp .)
    SEMICOLON       reduce using rule 78 (ambExp -> auxExp cicloExp .)
    LBRACKET        reduce using rule 78 (ambExp -> auxExp cicloExp .)


state 178

    (73) condicion -> IF LPAREN cicloExpresion RPAREN bloque . auxCondicion
    (74) auxCondicion -> . ELSE bloque
    (75) auxCondicion -> .

    ELSE            shift and go to state 195
    ID              reduce using rule 75 (auxCondicion -> .)
    IF              reduce using rule 75 (auxCondicion -> .)
    PRINT           reduce using rule 75 (auxCondicion -> .)
    READ            reduce using rule 75 (auxCondicion -> .)
    WHILE           reduce using rule 75 (auxCondicion -> .)
    RBRACE          reduce using rule 75 (auxCondicion -> .)
    RETURN          reduce using rule 75 (auxCondicion -> .)

    auxCondicion                   shift and go to state 196

state 179

    (52) asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .

    ID              reduce using rule 52 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    IF              reduce using rule 52 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    PRINT           reduce using rule 52 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    READ            reduce using rule 52 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    WHILE           reduce using rule 52 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    RBRACE          reduce using rule 52 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    RETURN          reduce using rule 52 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)


state 180

    (113) llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .

    ID              reduce using rule 113 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    IF              reduce using rule 113 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    PRINT           reduce using rule 113 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    READ            reduce using rule 113 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    WHILE           reduce using rule 113 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    RETURN          reduce using rule 113 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    RBRACE          reduce using rule 113 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)


state 181

    (119) ambAuxArgumentos1 -> COMMA auxArgumentos1 .

    RPAREN          reduce using rule 119 (ambAuxArgumentos1 -> COMMA auxArgumentos1 .)


state 182

    (34) cicloBloqueFuncion -> estatuto cicloBloqueFuncion .

    RETURN          reduce using rule 34 (cicloBloqueFuncion -> estatuto cicloBloqueFuncion .)


state 183

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 197


state 184

    (40) auxVar1Funcion -> idVarsFuncion . COLON tipo addTypeGlobalFuncion SEMICOLON

    COLON           shift and go to state 198


state 185

    (38) varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .

    VAR             reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    ID              reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    IF              reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    PRINT           reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    READ            reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    WHILE           reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)
    RETURN          reduce using rule 38 (varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion .)


state 186

    (42) idVarsFuncion -> ID . addVariableDirFuncion ambIdVarsFuncion
    (43) addVariableDirFuncion -> .

    COMMA           reduce using rule 43 (addVariableDirFuncion -> .)
    COLON           reduce using rule 43 (addVariableDirFuncion -> .)

    addVariableDirFuncion          shift and go to state 199

state 187

    (24) auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .

    VAR             reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    ID              reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    IF              reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    PRINT           reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    READ            reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    WHILE           reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    RBRACE          reduce using rule 24 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)


state 188

    (86) auxTermino -> MULTI paso2_mult .

    LPAREN          reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    PLUS            reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    MINUS           reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    ID              reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    CTEINT          reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    CTEFLOAT        reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    CTECHAR         reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    CTEBOOL         reduce using rule 86 (auxTermino -> MULTI paso2_mult .)
    CTESTRING       reduce using rule 86 (auxTermino -> MULTI paso2_mult .)


state 189

    (84) ambCicloTermino -> auxTermino cicloTermino .

    PLUS            reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    MINUS           reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    COMMA           reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    RPAREN          reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    AND             reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    OR              reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    RBRACKET        reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    SEMICOLON       reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    LPAREN          reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    ID              reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    CTEINT          reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    CTEFLOAT        reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    CTECHAR         reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    CTEBOOL         reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    CTESTRING       reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)
    LBRACKET        reduce using rule 84 (ambCicloTermino -> auxTermino cicloTermino .)


state 190

    (87) auxTermino -> DIVIDE paso2_mult .

    LPAREN          reduce using rule 87 (auxTermino -> DIVIDE paso2_mult .)
    PLUS            reduce using rule 87 (auxTermino -> DIVIDE paso2_mult .)
    MINUS           reduce using rule 87 (auxTermino -> DIVIDE paso2_mult .)
    ID              reduce using rule 87 (auxTermino -> DIVIDE paso2_mult .)
    CTEINT          reduce using rule 87 (auxTermino -> DIVIDE paso2_mult .)
    CTEFLOAT        reduce using rule 87 (auxTermino -> DIVIDE paso2_mult .)
    CTECHAR         reduce using rule 87 (auxTermino -> DIVIDE paso2_mult .)
    CTEBOOL         reduce using rule 87 (auxTermino -> DIVIDE paso2_mult .)
    CTESTRING       reduce using rule 87 (auxTermino -> DIVIDE paso2_mult .)


state 191

    (88) factor -> LPAREN paso6 exp RPAREN . paso7
    (130) paso7 -> .

    MULTI           reduce using rule 130 (paso7 -> .)
    DIVIDE          reduce using rule 130 (paso7 -> .)
    PLUS            reduce using rule 130 (paso7 -> .)
    MINUS           reduce using rule 130 (paso7 -> .)
    COMMA           reduce using rule 130 (paso7 -> .)
    RPAREN          reduce using rule 130 (paso7 -> .)
    AND             reduce using rule 130 (paso7 -> .)
    OR              reduce using rule 130 (paso7 -> .)
    RBRACKET        reduce using rule 130 (paso7 -> .)
    SEMICOLON       reduce using rule 130 (paso7 -> .)
    LPAREN          reduce using rule 130 (paso7 -> .)
    ID              reduce using rule 130 (paso7 -> .)
    CTEINT          reduce using rule 130 (paso7 -> .)
    CTEFLOAT        reduce using rule 130 (paso7 -> .)
    CTECHAR         reduce using rule 130 (paso7 -> .)
    CTEBOOL         reduce using rule 130 (paso7 -> .)
    CTESTRING       reduce using rule 130 (paso7 -> .)
    LBRACKET        reduce using rule 130 (paso7 -> .)

    paso7                          shift and go to state 200

state 192

    (98) auxVarcte -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 201


state 193

    (99) auxVarcte -> LBRACKET exp . LBRACKET

    LBRACKET        shift and go to state 202


state 194

    (62) ambCicloExpresion -> auxCicloExpresion expresion cicloExpresion .

    RPAREN          reduce using rule 62 (ambCicloExpresion -> auxCicloExpresion expresion cicloExpresion .)


state 195

    (74) auxCondicion -> ELSE . bloque
    (30) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 203

state 196

    (73) condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion .

    ID              reduce using rule 73 (condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion .)
    IF              reduce using rule 73 (condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion .)
    PRINT           reduce using rule 73 (condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion .)
    READ            reduce using rule 73 (condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion .)
    WHILE           reduce using rule 73 (condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion .)
    RBRACE          reduce using rule 73 (condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion .)
    RETURN          reduce using rule 73 (condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion .)


state 197

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 204


state 198

    (40) auxVar1Funcion -> idVarsFuncion COLON . tipo addTypeGlobalFuncion SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 205

state 199

    (42) idVarsFuncion -> ID addVariableDirFuncion . ambIdVarsFuncion
    (44) ambIdVarsFuncion -> . COMMA idVarsFuncion
    (45) ambIdVarsFuncion -> .

    COMMA           shift and go to state 207
    COLON           reduce using rule 45 (ambIdVarsFuncion -> .)

    ambIdVarsFuncion               shift and go to state 206

state 200

    (88) factor -> LPAREN paso6 exp RPAREN paso7 .

    MULTI           reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    DIVIDE          reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    PLUS            reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    MINUS           reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RBRACKET        reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LPAREN          reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    ID              reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    CTEINT          reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    CTEFLOAT        reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    CTECHAR         reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    CTEBOOL         reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    CTESTRING       reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    LBRACKET        reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    RPAREN          reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    SEMICOLON       reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    AND             reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    OR              reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)
    COMMA           reduce using rule 88 (factor -> LPAREN paso6 exp RPAREN paso7 .)


state 201

    (98) auxVarcte -> LPAREN exp RPAREN .

    MULTI           reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    AND             reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    OR              reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    LPAREN          reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    ID              reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    CTEINT          reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    CTEFLOAT        reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    CTECHAR         reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    CTEBOOL         reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    CTESTRING       reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)
    LBRACKET        reduce using rule 98 (auxVarcte -> LPAREN exp RPAREN .)


state 202

    (99) auxVarcte -> LBRACKET exp LBRACKET .

    MULTI           reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    DIVIDE          reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    PLUS            reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    MINUS           reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    COMMA           reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    RPAREN          reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    AND             reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    OR              reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    RBRACKET        reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    SEMICOLON       reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    LPAREN          reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    ID              reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    CTEINT          reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    CTEFLOAT        reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    CTECHAR         reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    CTEBOOL         reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    CTESTRING       reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)
    LBRACKET        reduce using rule 99 (auxVarcte -> LBRACKET exp LBRACKET .)


state 203

    (74) auxCondicion -> ELSE bloque .

    ID              reduce using rule 74 (auxCondicion -> ELSE bloque .)
    IF              reduce using rule 74 (auxCondicion -> ELSE bloque .)
    PRINT           reduce using rule 74 (auxCondicion -> ELSE bloque .)
    READ            reduce using rule 74 (auxCondicion -> ELSE bloque .)
    WHILE           reduce using rule 74 (auxCondicion -> ELSE bloque .)
    RBRACE          reduce using rule 74 (auxCondicion -> ELSE bloque .)
    RETURN          reduce using rule 74 (auxCondicion -> ELSE bloque .)


state 204

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 208


state 205

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo . addTypeGlobalFuncion SEMICOLON
    (41) addTypeGlobalFuncion -> .

    SEMICOLON       reduce using rule 41 (addTypeGlobalFuncion -> .)

    addTypeGlobalFuncion           shift and go to state 209

state 206

    (42) idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .

    COLON           reduce using rule 42 (idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion .)


state 207

    (44) ambIdVarsFuncion -> COMMA . idVarsFuncion
    (42) idVarsFuncion -> . ID addVariableDirFuncion ambIdVarsFuncion

    ID              shift and go to state 186

    idVarsFuncion                  shift and go to state 210

state 208

    (33) bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN ID SEMICOLON RBRACE .

    FUNCTION        reduce using rule 33 (bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN ID SEMICOLON RBRACE .)
    MAIN            reduce using rule 33 (bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN ID SEMICOLON RBRACE .)


state 209

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion . SEMICOLON

    SEMICOLON       shift and go to state 211


state 210

    (44) ambIdVarsFuncion -> COMMA idVarsFuncion .

    COLON           reduce using rule 44 (ambIdVarsFuncion -> COMMA idVarsFuncion .)


state 211

    (40) auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .

    VAR             reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    ID              reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    IF              reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    PRINT           reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    READ            reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    WHILE           reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)
    RETURN          reduce using rule 40 (auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CTESTRING in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 120 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 125 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 134 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 134 resolved as shift
WARNING: reduce/reduce conflict in state 79 resolved using rule (auxLlamada -> <empty>)
WARNING: rejected rule (argumentos -> <empty>) in state 79
WARNING: Rule (argumentos -> <empty>) is never reduced
