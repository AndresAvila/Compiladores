
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '93787B69EDFFE9ABE1B35816C143E4C3'
    
_lr_action_items = {'NOTEQUAL':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,159,161,168,169,170,171,172,174,195,197,200,201,202,203,204,205,207,224,225,226,227,228,231,233,258,266,268,273,274,276,279,281,],[-138,-85,-139,-79,144,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'MULTI':([94,122,126,127,128,129,130,131,132,134,168,169,170,171,172,174,200,201,202,203,204,205,207,224,225,226,227,228,231,233,258,266,268,273,274,276,279,281,],[-139,160,-133,-133,-92,-133,-101,-133,-133,-133,-171,-169,-168,-167,-107,-170,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'GTHAN':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,159,161,168,169,170,171,172,174,195,197,200,201,202,203,204,205,207,224,225,226,227,228,231,233,258,266,268,273,274,276,279,281,],[-138,-85,-139,-79,146,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'RETURN':([39,47,48,60,61,62,63,66,67,68,73,78,84,103,111,112,152,153,164,188,189,191,194,211,220,234,237,248,251,261,263,265,],[-23,-36,-23,-53,-36,-51,79,-50,-52,-22,-24,-35,-41,-32,-41,-158,-40,-39,-57,-39,221,-42,-26,-78,-38,-154,-151,-123,-76,-54,-77,-44,]),'EQUAL':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,159,161,168,169,170,171,172,174,195,197,200,201,202,203,204,205,207,224,225,226,227,228,231,233,258,266,268,273,274,276,279,281,],[-138,-85,-139,-79,147,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'GETHAN':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,159,161,168,169,170,171,172,174,195,197,200,201,202,203,204,205,207,224,225,226,227,228,231,233,258,266,268,273,274,276,279,281,],[-138,-85,-139,-79,148,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'LBRACKET':([16,17,19,20,21,64,81,104,132,172,205,],[27,27,27,27,27,-133,-107,138,-133,-107,230,]),'WHILE':([39,47,48,60,61,62,66,67,68,73,84,103,111,112,152,153,164,188,191,194,211,234,237,248,251,261,263,265,],[-23,59,-23,-53,59,-51,-50,-52,-22,-24,-41,-32,-41,-158,-40,59,-57,59,-42,-26,-78,-154,-151,-123,-76,-54,-77,-44,]),'PROGRAM':([0,],[1,]),'PRINT':([39,47,48,60,61,62,66,67,68,73,84,103,111,112,152,153,164,188,191,194,211,234,237,248,251,261,263,265,],[-23,58,-23,-53,58,-51,-50,-52,-22,-24,-41,-32,-41,-158,-40,58,-57,58,-42,-26,-78,-154,-151,-123,-76,-54,-77,-44,]),'CTESTRING':([76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,158,160,162,163,165,177,178,180,181,182,183,184,185,186,187,196,198,209,221,229,230,246,260,267,278,],[88,-94,-94,-137,-93,-136,-140,126,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,88,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'LETHAN':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,159,161,168,169,170,171,172,174,195,197,200,201,202,203,204,205,207,224,225,226,227,228,231,233,258,266,268,273,274,276,279,281,],[-138,-85,-139,-79,150,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'MINUS':([76,79,82,89,90,92,93,94,98,101,119,120,121,122,125,126,127,128,129,130,131,132,134,138,140,142,144,146,147,148,149,150,158,160,161,162,163,165,168,169,170,171,172,174,177,178,180,181,182,183,184,185,186,187,196,197,198,200,201,202,203,204,205,207,209,221,224,225,226,227,228,229,230,231,233,246,258,260,266,267,268,273,274,276,278,279,281,],[90,90,90,-138,-137,-136,-85,-139,-140,90,90,-84,-83,-88,90,-133,-133,-92,-133,-101,-133,-133,-133,-142,-144,-145,-178,-173,-177,-175,-174,-176,90,-134,-86,90,-135,90,-171,-169,-168,-167,-107,-170,-179,90,90,90,90,90,90,90,90,90,-89,-87,-90,-141,-106,-104,-103,-102,-110,-105,90,90,-91,-100,-98,-97,-96,90,-142,-95,-99,90,-108,-140,-143,90,-164,-109,-141,-163,90,-165,-124,]),'RBRACE':([39,47,48,60,61,62,63,66,67,68,73,78,80,103,136,164,176,194,211,234,237,248,251,255,261,263,],[-23,-36,-23,-53,-36,-51,-34,-50,-52,-22,-24,-35,103,-32,-160,-57,-33,-26,-78,-154,-151,-123,-76,264,-54,-77,]),'RPAREN':([45,54,55,56,71,83,88,89,93,94,95,96,97,100,105,106,107,108,110,118,119,122,124,126,127,128,129,130,131,132,134,135,139,141,143,145,151,159,161,166,167,168,169,170,171,172,174,195,197,199,200,201,202,203,204,205,207,212,213,214,215,216,217,218,219,224,225,226,227,228,231,233,239,240,245,253,254,258,260,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,],[-117,72,-118,-116,-120,-122,-133,-138,-85,-139,-79,123,-155,-61,-149,-66,-147,-74,-119,-62,-82,-88,-60,-133,-133,-92,-133,-101,-133,-133,-133,175,179,-75,-63,-67,-121,-80,-86,-58,200,-171,-169,-168,-167,-107,-170,-81,-87,-59,-141,-106,-104,-103,-102,-110,-105,-146,-146,-70,-68,-73,-71,-69,-72,-91,-100,-98,-97,-96,-95,-99,-66,-66,258,-64,-65,-108,-140,-143,-126,-164,-125,274,-127,-162,-109,-141,-131,-163,-129,-165,-130,-124,]),'SEMICOLON':([3,4,16,17,19,20,21,26,28,29,31,32,33,41,44,50,52,70,89,93,94,95,102,115,119,122,123,126,127,128,129,130,131,132,134,156,159,161,168,169,170,171,172,174,195,197,200,201,202,203,204,205,207,224,225,226,227,228,231,233,235,241,242,249,256,258,266,268,273,274,276,279,281,],[-2,5,-21,-21,-21,-21,-21,-16,-19,-15,-17,-13,-14,-8,-20,69,-102,-18,-138,-85,-139,-79,136,-27,-82,-88,164,-133,-133,-92,-133,-101,-133,-133,-133,194,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-148,255,-45,261,265,-108,-143,-164,-109,-141,-163,-165,-124,]),'CTEFLOAT':([76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,158,160,162,163,165,177,178,180,181,182,183,184,185,186,187,196,198,209,221,229,230,246,260,267,278,],[-94,-94,-94,-137,-93,-136,-140,129,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,-94,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'CALL':([76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,158,160,162,163,165,177,178,180,181,182,183,184,185,186,187,196,198,209,221,229,230,246,260,267,278,],[-94,-94,-94,-137,-93,-136,-140,133,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,-94,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'PLUS':([76,79,82,89,90,92,93,94,98,101,119,120,121,122,125,126,127,128,129,130,131,132,134,138,140,142,144,146,147,148,149,150,158,160,161,162,163,165,168,169,170,171,172,174,177,178,180,181,182,183,184,185,186,187,196,197,198,200,201,202,203,204,205,207,209,221,224,225,226,227,228,229,230,231,233,246,258,260,266,267,268,273,274,276,278,279,281,],[92,92,92,-138,-137,-136,-85,-139,-140,92,92,-84,-83,-88,92,-133,-133,-92,-133,-101,-133,-133,-133,-142,-144,-145,-178,-173,-177,-175,-174,-176,92,-134,-86,92,-135,92,-171,-169,-168,-167,-107,-170,-179,92,92,92,92,92,92,92,92,92,-89,-87,-90,-141,-106,-104,-103,-102,-110,-105,92,92,-91,-100,-98,-97,-96,92,-142,-95,-99,92,-108,-140,-143,92,-164,-109,-141,-163,92,-165,-124,]),'COLON':([23,25,36,42,51,74,75,87,116,133,157,190,192,223,243,257,],[35,-10,-12,-9,-11,86,-29,-31,-28,173,-30,222,-47,-49,-46,-48,]),'COMMA':([25,36,71,75,83,87,88,89,93,94,95,97,100,118,119,122,124,126,127,128,129,130,131,132,134,159,161,168,169,170,171,172,174,192,195,197,200,201,202,203,204,205,207,223,224,225,226,227,228,231,233,258,266,268,272,273,274,275,276,279,281,],[-10,43,-120,-29,109,117,-133,-138,-85,-139,-79,-155,-61,-62,-82,-88,165,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-47,-81,-87,-141,-106,-104,-103,-102,-110,-105,244,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-162,-109,-141,278,-163,-165,-124,]),'EQUALA':([64,81,104,137,236,250,262,],[-133,-107,-56,177,-143,-164,-55,]),'$end':([2,40,49,103,],[0,-166,-1,-32,]),'FUNCTION':([5,6,7,8,10,13,24,69,85,114,155,193,264,],[-156,-4,11,-4,11,-3,-5,-7,-114,-160,-159,-113,-37,]),'STRING':([11,35,45,86,109,222,],[17,17,17,17,17,17,]),'CTEINT':([27,76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,158,160,162,163,165,177,178,180,181,182,183,184,185,186,187,196,198,209,221,229,230,246,260,267,278,],[37,-94,-94,-94,-137,-93,-136,-140,131,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,-94,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'DIVIDE':([94,122,126,127,128,129,130,131,132,134,168,169,170,171,172,174,200,201,202,203,204,205,207,224,225,226,227,228,231,233,258,266,268,273,274,276,279,281,],[-139,163,-133,-133,-92,-133,-101,-133,-133,-133,-171,-169,-168,-167,-107,-170,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'ELSE':([103,211,],[-32,238,]),'LTHAN':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,159,161,168,169,170,171,172,174,195,197,200,201,202,203,204,205,207,224,225,226,227,228,231,233,258,266,268,273,274,276,279,281,],[-138,-85,-139,-79,149,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'LPAREN':([30,38,58,59,65,76,77,79,82,90,92,98,101,120,121,125,132,138,140,142,144,146,147,148,149,150,158,160,162,163,165,172,177,178,180,181,182,183,184,185,186,187,196,198,205,206,209,221,229,230,232,246,247,260,267,278,],[-115,45,76,-152,82,98,101,98,98,-137,-136,-140,98,-84,-83,98,-133,-142,-144,-145,-178,-173,-177,-175,-174,-176,98,-134,98,-135,98,-107,-179,98,98,98,98,98,98,98,98,98,-89,-90,229,-161,98,98,98,-142,-172,98,260,-140,98,98,]),'VAR':([5,6,8,9,24,39,46,48,69,73,84,111,113,191,194,265,],[-156,-6,-6,14,-5,-25,57,-25,-7,-24,-43,-43,154,-42,-26,-44,]),'CTECHAR':([76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,158,160,162,163,165,177,178,180,181,182,183,184,185,186,187,196,198,209,221,229,230,246,260,267,278,],[-94,-94,-94,-137,-93,-136,-140,127,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,-94,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'ID':([1,14,16,17,18,19,20,21,26,28,29,31,32,33,39,43,44,47,48,52,53,57,60,61,62,66,67,68,70,73,76,79,82,84,90,91,92,98,99,101,103,111,112,117,120,121,125,138,140,142,144,146,147,148,149,150,152,153,154,158,160,162,163,164,165,173,177,178,180,181,182,183,184,185,186,187,188,191,194,196,198,209,211,221,229,230,234,237,244,246,248,251,260,261,263,265,267,278,],[3,25,-21,-21,30,-21,-21,-21,-16,-19,-15,-17,-13,-14,-23,25,-20,64,-23,-102,71,75,-53,64,-51,-50,-52,-22,-18,-24,-94,-94,-94,-41,-137,-93,-136,-140,132,-94,-32,-41,-158,75,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-40,64,192,-94,-134,-94,-135,-57,-94,206,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,64,-42,-26,-89,-90,-94,-78,-94,-94,-142,-154,-151,192,-94,-123,-76,-140,-54,-77,-44,-94,-94,]),'IF':([39,47,48,60,61,62,66,67,68,73,84,103,111,112,152,153,164,188,191,194,211,234,237,248,251,261,263,265,],[-23,65,-23,-53,65,-51,-50,-52,-22,-24,-41,-32,-41,-158,-40,65,-57,65,-42,-26,-78,-154,-151,-123,-76,-54,-77,-44,]),'AND':([89,93,94,95,106,107,108,119,122,126,127,128,129,130,131,132,134,143,145,159,161,168,169,170,171,172,174,195,197,200,201,202,203,204,205,207,212,213,214,215,216,217,218,219,224,225,226,227,228,231,233,239,240,258,266,268,273,274,276,279,281,],[-138,-85,-139,-79,140,-147,-74,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-63,-67,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-146,-146,-70,-68,-73,-71,-69,-72,-91,-100,-98,-97,-96,-95,-99,140,140,-108,-143,-164,-109,-141,-163,-165,-124,]),'CHAR':([11,35,45,86,109,222,],[19,19,19,19,19,19,]),'LBRACE':([22,34,72,175,179,208,238,252,],[-157,39,84,-153,39,39,-150,39,]),'INT':([11,35,45,86,109,222,],[20,20,20,20,20,20,]),'CTEBOOL':([76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,158,160,162,163,165,177,178,180,181,182,183,184,185,186,187,196,198,209,221,229,230,246,260,267,278,],[-94,-94,-94,-137,-93,-136,-140,134,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,-94,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'FLOAT':([11,35,45,86,109,222,],[16,16,16,16,16,16,]),'BOOL':([11,35,45,86,109,222,],[21,21,21,21,21,21,]),'RBRACKET':([37,89,93,94,95,119,122,126,127,128,129,130,131,132,134,159,161,168,169,170,171,172,174,195,197,200,201,202,203,204,205,207,210,224,225,226,227,228,231,233,258,259,266,268,273,274,276,279,281,],[44,-138,-85,-139,-79,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,236,-91,-100,-98,-97,-96,-95,-99,-108,266,-143,-164,-109,-141,-163,-165,-124,]),'MAIN':([5,6,7,8,10,12,13,15,24,69,85,114,155,193,264,],[-156,-4,-112,-4,-112,22,-3,-111,-5,-7,-114,-160,-159,-113,-37,]),'OR':([89,93,94,95,106,107,108,119,122,126,127,128,129,130,131,132,134,143,145,159,161,168,169,170,171,172,174,195,197,200,201,202,203,204,205,207,212,213,214,215,216,217,218,219,224,225,226,227,228,231,233,239,240,258,266,268,273,274,276,279,281,],[-138,-85,-139,-79,142,-147,-74,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-63,-67,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-146,-146,-70,-68,-73,-71,-69,-72,-91,-100,-98,-97,-96,-95,-99,142,142,-108,-143,-164,-109,-141,-163,-165,-124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([6,8,],[8,8,]),'menor':([149,],[186,]),'bloque':([34,179,208,252,],[40,211,234,263,]),'auxParametros':([45,109,],[55,151,]),'mayor':([146,],[183,]),'mayorIg':([148,],[185,]),'ambCicloTermino':([122,],[161,]),'auxLlamada':([267,],[270,]),'paso5':([94,],[122,]),'factor':([76,79,82,101,125,158,162,165,178,180,181,182,183,184,185,186,187,209,221,229,246,267,278,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'paso6b':([138,230,],[178,246,]),'assignDirectionCteInt':([52,204,],[70,228,]),'initDicFunc':([30,],[38,]),'idVarsMain':([57,117,],[74,157,]),'paso2_div':([163,],[198,]),'addTypeMain':([115,],[156,]),'cteLlamada':([232,],[247,]),'cicloBloque':([47,61,],[63,78,]),'cteChar':([169,],[202,]),'assignDirectionCteBool':([207,],[233,]),'cicloTermino':([76,79,82,101,125,158,162,165,178,180,181,182,183,184,185,186,187,209,221,229,246,267,278,],[93,93,93,93,93,93,197,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'expresion':([82,101,180,181,],[107,107,107,107,]),'bloqueFuncion':([72,],[85,]),'assignDirectionCteChar':([202,],[226,]),'parametros':([45,],[56,]),'ambExp':([119,],[159,]),'addVariableDirMain':([75,],[87,]),'auxVar1':([14,],[24,]),'expAndOr':([82,101,],[105,135,]),'createVariableDir':([6,8,],[9,9,]),'assignDirectionCteString':([201,],[225,]),'argumentos':([267,],[269,]),'ciclo':([47,61,153,188,],[60,60,60,60,]),'tipo':([11,35,45,86,109,222,],[18,41,53,115,53,242,]),'asig':([177,],[209,]),'llamada':([99,],[130,]),'condicion':([47,61,153,188,],[62,62,62,62,]),'noEsArr':([16,17,19,20,21,],[28,28,28,28,28,]),'cicloBloqueFuncion':([153,188,],[189,220,]),'auxArgumentos1':([267,278,],[271,280,]),'cicloExp':([76,79,82,101,125,158,165,178,180,181,182,183,184,185,186,187,209,221,229,246,267,278,],[95,95,95,95,95,195,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'addProcDirectoryFunc':([85,],[114,]),'auxEscritura1':([76,165,],[96,199,]),'auxEscritura2':([76,165,],[97,97,]),'ambIdVarsMain':([87,],[116,]),'paso11':([235,],[249,]),'paso8_or':([142,],[181,]),'paso16':([175,],[208,]),'auxExp':([76,79,82,101,119,125,158,162,165,178,180,181,182,183,184,185,186,187,209,221,229,246,267,278,],[91,91,91,91,158,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'paso7b':([236,266,],[250,268,]),'cicloExpresion':([82,101,180,181,],[106,106,212,213,]),'auxCicloExpresion':([106,239,240,],[141,253,254,]),'auxAsignacion1':([104,],[137,]),'cicloVarsFuncion':([84,111,],[112,152,]),'escritura':([47,61,153,188,],[67,67,67,67,]),'paso19':([5,],[6,]),'addParameters':([71,],[83,]),'addVariableDirFuncion':([192,],[223,]),'auxCondicion':([211,],[237,]),'termino':([76,79,82,101,125,158,165,178,180,181,182,183,184,185,186,187,209,221,229,246,267,278,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'paso3_resta':([90,],[120,]),'paso12':([105,],[139,]),'paso13':([238,],[252,]),'paso10':([107,],[143,]),'createVariableDirMain':([39,48,],[46,46,]),'addVariableDir':([25,],[36,]),'paso17':([234,],[248,]),'paso14':([237,],[251,]),'paso15':([59,],[77,]),'paso18':([97,],[124,]),'estatuto':([47,61,153,188,],[61,61,188,188,]),'ambAuxEscritura1':([124,],[166,]),'diferente':([144,],[182,]),'cteString':([168,],[201,]),'addTypeFuncion':([242,],[256,]),'cicloVars':([6,8,],[7,13,]),'paso9':([212,213,],[239,240,]),'paso28':([279,],[281,]),'paso1':([64,88,126,127,129,131,132,134,],[81,118,168,169,170,171,172,174,]),'paso4':([89,],[119,]),'varsMain':([39,48,],[48,48,]),'paso6':([98,260,],[125,267,]),'paso7':([200,274,],[224,276,]),'esArr':([44,],[52,]),'asignacion':([47,61,153,188,],[66,66,66,66,]),'cteBool':([174,],[207,]),'addProcedureDir':([3,],[4,]),'cteInt':([171,],[204,]),'paso21':([112,],[153,]),'ambAuxTipo1':([16,17,19,20,21,],[26,29,31,32,33,]),'menorIg':([150,],[187,]),'auxVar1Main':([57,],[73,]),'igual':([147,],[184,]),'cteFloat':([170,],[203,]),'auxVarcte':([205,],[231,]),'ambIdVars':([36,],[42,]),'paso25':([272,],[275,]),'cicloVarsMain':([39,48,],[47,68,]),'addTypeGlobal':([41,],[50,]),'auxExpresion':([108,],[145,]),'varsFuncion':([84,111,],[111,111,]),'auxFunction':([45,],[54,]),'recursivo':([63,],[80,]),'idVarsFuncion':([154,244,],[190,257,]),'auxVar1Funcion':([154,],[191,]),'createVariableDirFuncion':([84,111,],[113,113,]),'addType':([81,172,],[104,205,]),'funcion':([7,10,],[10,10,]),'ambAuxArgumentos1':([275,],[277,]),'pasoFinal':([40,],[49,]),'auxTermino':([122,],[162,]),'auxFactor':([76,79,82,101,125,158,162,165,178,180,181,182,183,184,185,186,187,209,221,229,246,267,278,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'varcte':([99,],[128,]),'paso3_suma':([92,],[121,]),'idVars':([14,43,],[23,51,]),'paso23':([114,136,],[155,176,]),'paso22':([155,],[193,]),'paso8_and':([140,],[180,]),'paso20':([22,],[34,]),'paso27':([250,268,],[262,273,]),'paso26':([276,],[279,]),'paso2_mult':([160,],[196,]),'paso24':([206,],[232,]),'cicloFuncion':([7,10,],[12,15,]),'programa':([0,],[2,]),'exp':([76,79,82,101,125,165,178,180,181,182,183,184,185,186,187,209,221,229,246,267,278,],[100,102,108,108,167,100,210,108,108,214,215,216,217,218,219,235,241,245,259,272,272,]),'ambAuxParametros':([83,],[110,]),'ambIdVarsFuncion':([223,],[243,]),'assignDirectionCteFloat':([203,],[227,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal','programa',11,'p_programa','MyLittleDucky.py',1072),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',1076),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',1086),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',1087),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',1090),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',1093),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',1098),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',1101),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',1184),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',1187),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',1199),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',1200),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',1203),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',1204),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',1205),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',1206),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',1207),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt','ambAuxTipo1',5,'p_ambAuxTipo1','MyLittleDucky.py',1212),
  ('ambAuxTipo1 -> noEsArr','ambAuxTipo1',1,'p_ambAuxTipo1','MyLittleDucky.py',1213),
  ('esArr -> <empty>','esArr',0,'p_esArr','MyLittleDucky.py',1216),
  ('noEsArr -> <empty>','noEsArr',0,'p_noEsArr','MyLittleDucky.py',1223),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',1228),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',1229),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',1232),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',1235),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',1240),
  ('addTypeMain -> <empty>','addTypeMain',0,'p_addTypeMain','MyLittleDucky.py',1243),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',1325),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',1328),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',1339),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',1340),
  ('bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE','bloque',5,'p_bloque','MyLittleDucky.py',1343),
  ('recursivo -> RETURN exp SEMICOLON paso23','recursivo',4,'p_recursivo','MyLittleDucky.py',1346),
  ('recursivo -> <empty>','recursivo',0,'p_recursivo','MyLittleDucky.py',1347),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',1350),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',1351),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN exp SEMICOLON RBRACE','bloqueFuncion',8,'p_bloqueFuncion','MyLittleDucky.py',1354),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',1357),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',1358),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',1361),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',1362),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',1365),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',1368),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',1373),
  ('addTypeFuncion -> <empty>','addTypeFuncion',0,'p_addTypeFuncion','MyLittleDucky.py',1376),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',1459),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',1462),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',1478),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',1479),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',1482),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',1483),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',1484),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',1485),
  ('asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON','asignacion',9,'p_asignacion','MyLittleDucky.py',1490),
  ('auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b paso27','auxAsignacion1',6,'p_auxAsignacion1','MyLittleDucky.py',1494),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',1495),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',1498),
  ('auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1','auxEscritura1',3,'p_auxEscritura1','MyLittleDucky.py',1502),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',1505),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',1506),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',1509),
  ('auxEscritura2 -> CTESTRING paso1','auxEscritura2',2,'p_auxEscritura2','MyLittleDucky.py',1510),
  ('cicloExpresion -> expresion paso10','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',1513),
  ('auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',1517),
  ('auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',1518),
  ('auxCicloExpresion -> <empty>','auxCicloExpresion',0,'p_auxCicloExpresion','MyLittleDucky.py',1519),
  ('expresion -> exp auxExpresion','expresion',2,'p_expresion','MyLittleDucky.py',1522),
  ('auxExpresion -> GTHAN mayor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1526),
  ('auxExpresion -> LTHAN menor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1527),
  ('auxExpresion -> NOTEQUAL diferente exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1528),
  ('auxExpresion -> GETHAN mayorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1529),
  ('auxExpresion -> LETHAN menorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1530),
  ('auxExpresion -> EQUAL igual exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1531),
  ('auxExpresion -> <empty>','auxExpresion',0,'p_auxExpresion','MyLittleDucky.py',1532),
  ('expAndOr -> cicloExpresion auxCicloExpresion','expAndOr',2,'p_expAndOr','MyLittleDucky.py',1535),
  ('condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14','condicion',8,'p_condicion','MyLittleDucky.py',1538),
  ('auxCondicion -> ELSE paso13 bloque','auxCondicion',3,'p_auxCondicion','MyLittleDucky.py',1542),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',1543),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',1546),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',1549),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',1552),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',1553),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',1556),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',1557),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',1560),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',1563),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',1566),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',1567),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',1570),
  ('auxTermino -> DIVIDE paso2_div','auxTermino',2,'p_auxTermino','MyLittleDucky.py',1571),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',1574),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',1575),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',1578),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',1579),
  ('varcte -> ID paso1 addType auxVarcte','varcte',4,'p_varcte','MyLittleDucky.py',1582),
  ('varcte -> CTEINT paso1 cteInt assignDirectionCteInt','varcte',4,'p_varcte','MyLittleDucky.py',1583),
  ('varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat','varcte',4,'p_varcte','MyLittleDucky.py',1584),
  ('varcte -> CTECHAR paso1 cteChar assignDirectionCteChar','varcte',4,'p_varcte','MyLittleDucky.py',1585),
  ('varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool','varcte',4,'p_varcte','MyLittleDucky.py',1586),
  ('varcte -> CTESTRING paso1 cteString assignDirectionCteString','varcte',4,'p_varcte','MyLittleDucky.py',1587),
  ('varcte -> llamada','varcte',1,'p_varcte','MyLittleDucky.py',1588),
  ('assignDirectionCteInt -> <empty>','assignDirectionCteInt',0,'p_assignDirectionCteInt','MyLittleDucky.py',1593),
  ('assignDirectionCteFloat -> <empty>','assignDirectionCteFloat',0,'p_assignDirectionCteFloat','MyLittleDucky.py',1604),
  ('assignDirectionCteChar -> <empty>','assignDirectionCteChar',0,'p_assignDirectionCteChar','MyLittleDucky.py',1612),
  ('assignDirectionCteBool -> <empty>','assignDirectionCteBool',0,'p_assignDirectionCteBool','MyLittleDucky.py',1620),
  ('assignDirectionCteString -> <empty>','assignDirectionCteString',0,'p_assignDirectionCteString','MyLittleDucky.py',1629),
  ('addType -> <empty>','addType',0,'p_addType','MyLittleDucky.py',1651),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',1678),
  ('auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27','auxVarcte',6,'p_auxVarcte','MyLittleDucky.py',1679),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',1680),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',1683),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',1684),
  ('funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22','funcion',11,'p_funcion','MyLittleDucky.py',1687),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',1690),
  ('initDicFunc -> <empty>','initDicFunc',0,'p_initDicFunc','MyLittleDucky.py',1718),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',1724),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',1725),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',1728),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',1731),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',1734),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',1770),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',1771),
  ('ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17','ciclo',8,'p_ciclo','MyLittleDucky.py',1774),
  ('llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28','llamada',12,'p_llamada','MyLittleDucky.py',1778),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',1782),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',1783),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',1786),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',1787),
  ('auxArgumentos1 -> exp paso25 ambAuxArgumentos1','auxArgumentos1',3,'p_auxArgumentos1','MyLittleDucky.py',1790),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',1793),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',1794),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',1797),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',1810),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',1818),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',1822),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',1826),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',1830),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',1968),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',2000),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',2037),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',2041),
  ('paso6b -> <empty>','paso6b',0,'p_paso6b','MyLittleDucky.py',2049),
  ('paso7b -> <empty>','paso7b',0,'p_paso7b','MyLittleDucky.py',2055),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',2063),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',2067),
  ('paso9 -> <empty>','paso9',0,'p_paso9','MyLittleDucky.py',2071),
  ('paso10 -> <empty>','paso10',0,'p_paso10','MyLittleDucky.py',2104),
  ('paso11 -> <empty>','paso11',0,'p_paso11','MyLittleDucky.py',2141),
  ('paso12 -> <empty>','paso12',0,'p_paso12','MyLittleDucky.py',2182),
  ('paso13 -> <empty>','paso13',0,'p_paso13','MyLittleDucky.py',2202),
  ('paso14 -> <empty>','paso14',0,'p_paso14','MyLittleDucky.py',2214),
  ('paso15 -> <empty>','paso15',0,'p_paso15','MyLittleDucky.py',2222),
  ('paso16 -> <empty>','paso16',0,'p_paso16','MyLittleDucky.py',2228),
  ('paso17 -> <empty>','paso17',0,'p_paso17','MyLittleDucky.py',2248),
  ('paso18 -> <empty>','paso18',0,'p_paso18','MyLittleDucky.py',2258),
  ('paso19 -> <empty>','paso19',0,'p_paso19','MyLittleDucky.py',2270),
  ('paso20 -> <empty>','paso20',0,'p_paso20','MyLittleDucky.py',2279),
  ('paso21 -> <empty>','paso21',0,'p_paso21','MyLittleDucky.py',2286),
  ('paso22 -> <empty>','paso22',0,'p_paso22','MyLittleDucky.py',2298),
  ('paso23 -> <empty>','paso23',0,'p_paso23','MyLittleDucky.py',2312),
  ('paso24 -> <empty>','paso24',0,'p_paso24','MyLittleDucky.py',2336),
  ('paso25 -> <empty>','paso25',0,'p_paso25','MyLittleDucky.py',2360),
  ('paso26 -> <empty>','paso26',0,'p_paso26','MyLittleDucky.py',2404),
  ('paso27 -> <empty>','paso27',0,'p_paso27','MyLittleDucky.py',2433),
  ('paso28 -> <empty>','paso28',0,'p_paso28','MyLittleDucky.py',2462),
  ('pasoFinal -> <empty>','pasoFinal',0,'p_pasoFinal','MyLittleDucky.py',2473),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',2485),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',2489),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',2494),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',2499),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',2504),
  ('cteLlamada -> <empty>','cteLlamada',0,'p_cteLlamada','MyLittleDucky.py',2508),
  ('mayor -> <empty>','mayor',0,'p_mayor','MyLittleDucky.py',2520),
  ('menor -> <empty>','menor',0,'p_menor','MyLittleDucky.py',2524),
  ('mayorIg -> <empty>','mayorIg',0,'p_mayorIg','MyLittleDucky.py',2528),
  ('menorIg -> <empty>','menorIg',0,'p_menorIg','MyLittleDucky.py',2532),
  ('igual -> <empty>','igual',0,'p_igual','MyLittleDucky.py',2536),
  ('diferente -> <empty>','diferente',0,'p_diferente','MyLittleDucky.py',2540),
  ('asig -> <empty>','asig',0,'p_asig','MyLittleDucky.py',2544),
]
