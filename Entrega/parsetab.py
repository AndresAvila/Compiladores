
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '32042D52866D7F35E6719E1365EAF7DD'
    
_lr_action_items = {'MULTI':([92,123,128,129,130,131,132,133,134,164,165,166,167,168,169,189,190,191,192,193,194,195,202,205,216,217,],[-129,157,-123,-89,-123,-123,-123,-123,-123,-139,-138,-135,-136,-137,-98,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'RETURN':([53,55,56,58,61,62,76,82,112,113,149,150,151,155,161,170,176,177,178,180,183,198,206,218,],[-51,-50,-47,-49,-46,-48,-30,-37,-37,-35,-36,-35,181,-122,-55,-113,-75,-52,-114,-34,-38,-73,-74,-40,]),'READ':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,149,150,155,161,170,176,177,178,183,185,198,206,218,],[-21,50,-21,-51,50,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,50,-36,50,-122,-55,-113,-75,-52,-114,-38,-24,-73,-74,-40,]),'LBRACKET':([14,16,17,18,19,60,88,91,92,93,120,123,128,129,130,131,132,133,134,156,158,164,165,166,167,168,169,175,187,189,190,191,192,193,194,195,202,205,212,216,217,],[25,25,25,25,25,77,-128,-82,-129,-76,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-139,-138,-135,-136,-137,-98,-78,-84,-131,-97,-96,-93,-94,-95,204,-88,-92,217,-99,-100,]),'WHILE':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,149,150,155,161,170,176,177,178,183,185,198,206,218,],[-21,52,-21,-51,52,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,52,-36,52,-122,-55,-113,-75,-52,-114,-38,-24,-73,-74,-40,]),'PROGRAM':([0,],[1,]),'PRINT':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,149,150,155,161,170,176,177,178,183,185,198,206,218,],[-21,51,-21,-51,51,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,51,-36,51,-122,-55,-113,-75,-52,-114,-38,-24,-73,-74,-40,]),'CTESTRING':([72,73,75,77,79,88,89,90,91,92,93,96,97,98,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,171,172,173,174,175,181,186,187,188,189,190,191,192,193,194,195,202,203,204,205,216,217,],[87,-91,-91,-91,-91,-128,-127,-126,-82,-129,-76,-130,128,-90,-79,-91,-79,-81,-80,-85,87,-91,-123,-89,-123,-123,-123,-123,-123,-132,-91,-133,-134,-91,-91,-77,-124,-83,-91,-124,-139,-138,-135,-136,-137,-98,-64,-91,-65,-66,-78,-91,-86,-84,-87,-131,-97,-96,-93,-94,-95,-101,-88,-91,-91,-92,-99,-100,]),'MINUS':([72,73,75,77,79,88,89,90,91,92,93,96,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,171,172,173,174,175,181,186,187,188,189,190,191,192,193,194,195,202,203,204,205,216,217,],[89,89,89,89,89,-128,-127,-126,-82,-129,-76,-130,89,89,89,-81,-80,-85,89,89,-123,-89,-123,-123,-123,-123,-123,-132,89,-133,-134,89,89,-77,-124,-83,89,-124,-139,-138,-135,-136,-137,-98,-64,89,-65,-66,-78,89,-86,-84,-87,-131,-97,-96,-93,-94,-95,-101,-88,89,89,-92,-99,-100,]),'RBRACE':([32,39,40,53,54,55,56,58,59,61,62,63,68,74,76,155,161,170,176,177,178,185,198,206,207,],[-21,-32,-21,-51,-32,-50,-47,-49,76,-46,-48,-20,-22,-31,-30,-122,-55,-113,-75,-52,-114,-24,-73,-74,213,]),'RPAREN':([37,46,47,48,66,79,81,86,87,88,91,92,93,94,95,99,100,101,102,103,106,107,108,109,111,120,123,126,128,129,130,131,132,133,134,138,140,146,148,156,158,162,163,164,165,166,167,168,169,174,175,179,187,189,190,191,192,193,194,195,196,202,205,211,216,217,],[-107,67,-108,-106,-110,-116,-112,119,-60,-128,-82,-129,-76,124,-58,-59,135,-63,-79,142,-115,145,-117,-121,-109,-79,-85,-56,-123,-89,-123,-123,-123,-123,-123,-61,-134,-119,-111,-77,-83,-57,189,-139,-138,-135,-136,-137,-98,-66,-78,-120,-84,-131,-97,-96,-93,-94,-95,-101,-62,-88,-92,216,-99,-100,]),'SEMICOLON':([3,4,14,16,17,18,19,26,28,29,30,31,41,44,64,88,91,92,93,102,116,119,120,123,124,128,129,130,131,132,133,134,140,144,145,153,156,158,164,165,166,167,168,169,174,175,187,189,190,191,192,193,194,195,199,202,205,208,214,216,217,],[-2,5,-19,-19,-19,-19,-19,-15,-13,-16,-17,-14,-8,-18,80,-128,-82,-129,-76,-79,-25,155,-79,-85,161,-123,-89,-123,-123,-123,-123,-123,-134,177,178,185,-77,-83,-139,-138,-135,-136,-137,-98,-66,-78,-84,-131,-97,-96,-93,-94,-95,-101,207,-88,-92,-41,218,-99,-100,]),'CTEFLOAT':([72,73,75,77,79,88,89,90,91,92,93,96,97,98,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,171,172,173,174,175,181,186,187,188,189,190,191,192,193,194,195,202,203,204,205,216,217,],[-91,-91,-91,-91,-91,-128,-127,-126,-82,-129,-76,-130,132,-90,-79,-91,-79,-81,-80,-85,-91,-91,-123,-89,-123,-123,-123,-123,-123,-132,-91,-133,-134,-91,-91,-77,-124,-83,-91,-124,-139,-138,-135,-136,-137,-98,-64,-91,-65,-66,-78,-91,-86,-84,-87,-131,-97,-96,-93,-94,-95,-101,-88,-91,-91,-92,-99,-100,]),'PLUS':([72,73,75,77,79,88,89,90,91,92,93,96,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,171,172,173,174,175,181,186,187,188,189,190,191,192,193,194,195,202,203,204,205,216,217,],[90,90,90,90,90,-128,-127,-126,-82,-129,-76,-130,90,90,90,-81,-80,-85,90,90,-123,-89,-123,-123,-123,-123,-123,-132,90,-133,-134,90,90,-77,-124,-83,90,-124,-139,-138,-135,-136,-137,-98,-64,90,-65,-66,-78,90,-86,-84,-87,-131,-97,-96,-93,-94,-95,-101,-88,90,90,-92,-99,-100,]),'COLON':([22,24,35,42,65,69,70,85,117,154,182,184,201,209,215,],[34,-10,-12,-9,-11,84,-27,-29,-26,-28,200,-43,-45,-42,-44,]),'COMMA':([24,35,66,70,81,85,87,88,91,92,93,95,99,109,120,123,128,129,130,131,132,133,134,156,158,164,165,166,167,168,169,175,184,187,189,190,191,192,193,194,195,201,202,205,216,217,],[-10,43,-110,-27,110,118,-60,-128,-82,-129,-76,125,-59,147,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-139,-138,-135,-136,-137,-98,-78,-43,-84,-131,-97,-96,-93,-94,-95,-101,210,-88,-92,-99,-100,]),'EQUALA':([60,78,143,],[-54,105,-53,]),'$end':([2,33,76,],[0,-1,-30,]),'FUNCTION':([5,6,7,9,12,23,80,83,115,213,],[-4,-4,10,-3,10,-5,-7,-105,-104,-33,]),'STRING':([10,34,37,84,110,200,],[14,14,14,14,14,14,]),'CTEINT':([25,72,73,75,77,79,88,89,90,91,92,93,96,97,98,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,171,172,173,174,175,181,186,187,188,189,190,191,192,193,194,195,202,203,204,205,216,217,],[36,-91,-91,-91,-91,-91,-128,-127,-126,-82,-129,-76,-130,131,-90,-79,-91,-79,-81,-80,-85,-91,-91,-123,-89,-123,-123,-123,-123,-123,-132,-91,-133,-134,-91,-91,-77,-124,-83,-91,-124,-139,-138,-135,-136,-137,-98,-64,-91,-65,-66,-78,-91,-86,-84,-87,-131,-97,-96,-93,-94,-95,-101,-88,-91,-91,-92,-99,-100,]),'DIVIDE':([92,123,128,129,130,131,132,133,134,164,165,166,167,168,169,189,190,191,192,193,194,195,202,205,216,217,],[-129,160,-123,-89,-123,-123,-123,-123,-123,-139,-138,-135,-136,-137,-98,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'ELSE':([76,176,],[-30,197,]),'LPAREN':([27,50,51,52,57,60,72,73,75,77,79,88,89,90,91,92,93,96,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,171,172,173,174,175,181,186,187,188,189,190,191,192,193,194,195,202,203,204,205,216,217,],[37,71,72,73,75,79,96,96,96,96,96,-128,-127,-126,-82,-129,-76,-130,-79,96,-79,-81,-80,-85,96,96,-123,-89,-123,-123,-123,-123,-123,-132,96,-133,-134,96,96,-77,-124,-83,96,-124,-139,-138,-135,-136,-137,-98,-64,96,-65,-66,-78,96,-86,-84,-87,-131,-97,-96,-93,-94,-95,203,-88,96,96,-92,-99,-100,]),'VAR':([5,6,8,23,32,38,40,68,80,82,112,114,183,185,218,],[-6,-6,13,-5,-23,49,-23,-22,-7,-39,-39,152,-38,-24,-40,]),'CTECHAR':([72,73,75,77,79,88,89,90,91,92,93,96,97,98,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,171,172,173,174,175,181,186,187,188,189,190,191,192,193,194,195,202,203,204,205,216,217,],[-91,-91,-91,-91,-91,-128,-127,-126,-82,-129,-76,-130,133,-90,-79,-91,-79,-81,-80,-85,-91,-91,-123,-89,-123,-123,-123,-123,-123,-132,-91,-133,-134,-91,-91,-77,-124,-83,-91,-124,-139,-138,-135,-136,-137,-98,-64,-91,-65,-66,-78,-91,-86,-84,-87,-131,-97,-96,-93,-94,-95,-101,-88,-91,-91,-92,-99,-100,]),'ID':([1,13,14,15,16,17,18,19,26,28,29,30,31,32,39,40,43,44,45,49,53,54,55,56,58,61,62,63,68,71,72,73,75,76,77,79,82,88,89,90,91,92,93,96,97,98,102,105,112,113,118,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,149,150,152,155,156,157,158,159,160,161,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,181,183,185,186,187,188,189,190,191,192,193,194,195,198,202,203,204,205,206,210,216,217,218,],[3,24,-19,27,-19,-19,-19,-19,-15,-13,-16,-17,-14,-21,60,-21,24,-18,66,70,-51,60,-50,-47,-49,-46,-48,-20,-22,86,-91,-91,-91,-30,-91,-91,-37,-128,-127,-126,-82,-129,-76,-130,134,-90,-79,-91,-37,60,70,-79,-81,-80,-85,-91,-91,-123,-89,-123,-123,-123,-123,-123,-132,-91,-133,-134,-91,-91,-36,60,184,-122,-77,-124,-83,-91,-124,-55,-139,-138,-135,-136,-137,-98,-113,-64,-91,-65,-66,-78,-75,-52,-114,-91,-38,-24,-86,-84,-87,-131,-97,-96,-93,-94,-95,-101,-73,-88,-91,-91,-92,-74,184,-99,-100,-40,]),'IF':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,149,150,155,161,170,176,177,178,183,185,198,206,218,],[-21,57,-21,-51,57,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,57,-36,57,-122,-55,-113,-75,-52,-114,-38,-24,-73,-74,-40,]),'AND':([88,91,92,93,101,102,120,123,128,129,130,131,132,133,134,140,156,158,164,165,166,167,168,169,174,175,187,189,190,191,192,193,194,195,202,205,216,217,],[-128,-82,-129,-76,136,-79,-79,-85,-123,-89,-123,-123,-123,-123,-123,-134,-77,-83,-139,-138,-135,-136,-137,-98,-66,-78,-84,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'CHAR':([10,34,37,84,110,200,],[18,18,18,18,18,18,]),'LBRACE':([20,67,135,142,197,],[32,82,32,32,32,]),'INT':([10,34,37,84,110,200,],[16,16,16,16,16,16,]),'CTEBOOL':([72,73,75,77,79,88,89,90,91,92,93,96,97,98,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,171,172,173,174,175,181,186,187,188,189,190,191,192,193,194,195,202,203,204,205,216,217,],[-91,-91,-91,-91,-91,-128,-127,-126,-82,-129,-76,-130,130,-90,-79,-91,-79,-81,-80,-85,-91,-91,-123,-89,-123,-123,-123,-123,-123,-132,-91,-133,-134,-91,-91,-77,-124,-83,-91,-124,-139,-138,-135,-136,-137,-98,-64,-91,-65,-66,-78,-91,-86,-84,-87,-131,-97,-96,-93,-94,-95,-101,-88,-91,-91,-92,-99,-100,]),'FLOAT':([10,34,37,84,110,200,],[17,17,17,17,17,17,]),'BOOL':([10,34,37,84,110,200,],[19,19,19,19,19,19,]),'RBRACKET':([36,88,91,92,93,104,120,123,128,129,130,131,132,133,134,156,158,164,165,166,167,168,169,175,187,189,190,191,192,193,194,195,202,205,216,217,],[44,-128,-82,-129,-76,143,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-139,-138,-135,-136,-137,-98,-78,-84,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'MAIN':([5,6,7,9,11,12,21,23,80,83,115,213,],[-4,-4,-103,-3,20,-103,-102,-5,-7,-105,-104,-33,]),'OR':([88,91,92,93,101,102,120,123,128,129,130,131,132,133,134,140,156,158,164,165,166,167,168,169,174,175,187,189,190,191,192,193,194,195,202,205,216,217,],[-128,-82,-129,-76,139,-79,-79,-85,-123,-89,-123,-123,-123,-123,-123,-134,-77,-83,-139,-138,-135,-136,-137,-98,-66,-78,-84,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([5,6,],[6,6,]),'bloque':([20,135,142,197,],[33,170,176,206,]),'ambCicloTermino':([123,],[158,]),'auxLlamada':([79,],[107,]),'paso5':([92,],[123,]),'factor':([72,73,75,77,79,105,125,127,137,141,147,159,172,181,203,204,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'addTypeGlobalFuncion':([208,],[214,]),'idVarsMain':([49,118,],[69,154,]),'cicloBloque':([39,54,],[59,74,]),'cteChar':([168,],[194,]),'cicloTermino':([72,73,75,77,79,105,125,127,137,141,147,159,172,181,203,204,],[91,91,91,91,91,91,91,91,91,91,91,187,91,91,91,91,]),'expresion':([73,75,137,172,181,],[101,101,172,101,199,]),'bloqueFuncion':([67,],[83,]),'cicloExp':([72,73,75,77,79,105,125,127,137,141,147,172,181,203,204,],[93,93,93,93,93,93,93,93,93,175,93,93,93,93,93,]),'parametros':([37,],[48,]),'ambExp':([102,120,],[140,156,]),'addVariableDirMain':([70,],[85,]),'auxVar1':([13,],[23,]),'createVariableDir':([5,6,],[8,8,]),'argumentos':([79,],[106,]),'ciclo':([39,54,113,150,],[53,53,53,53,]),'tipo':([10,34,37,84,110,200,],[15,41,45,116,45,208,]),'llamada':([39,54,113,150,],[55,55,55,55,]),'condicion':([39,54,113,150,],[56,56,56,56,]),'cicloBloqueFuncion':([113,150,],[151,180,]),'auxArgumentos1':([79,147,],[108,179,]),'lectura':([39,54,113,150,],[58,58,58,58,]),'auxEscritura1':([72,125,],[94,162,]),'auxEscritura2':([72,125,],[95,95,]),'ambIdVarsMain':([85,],[117,]),'paso8_or':([139,],[173,]),'auxExp':([72,73,75,77,79,102,105,120,125,127,137,141,147,159,172,181,203,204,],[98,98,98,98,98,141,98,141,98,98,98,98,98,98,98,98,98,98,]),'auxCicloExpresion':([101,],[137,]),'auxAsignacion1':([60,],[78,]),'cicloVarsFuncion':([82,112,],[113,149,]),'escritura':([39,54,113,150,],[62,62,62,62,]),'addParameters':([66,],[81,]),'addVariableDirFuncion':([184,],[201,]),'auxCondicion':([176,],[198,]),'termino':([72,73,75,77,79,105,125,127,137,141,147,172,181,203,204,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'paso3_resta':([89,],[121,]),'addProcDirectoryFunc':([83,],[115,]),'createVariableDirMain':([32,40,],[38,38,]),'addVariableDir':([24,],[35,]),'cicloExpresion':([73,75,172,],[100,103,196,]),'estatuto':([39,54,113,150,],[54,54,150,150,]),'ambAuxEscritura1':([95,],[126,]),'cteString':([164,],[190,]),'cicloVars':([5,6,],[7,9,]),'paso9':([140,],[174,]),'paso1':([128,130,131,132,133,134,],[164,165,166,167,168,169,]),'paso4':([88,],[120,]),'varsMain':([32,40,],[40,40,]),'paso6':([96,],[127,]),'paso7':([189,],[202,]),'asignacion':([39,54,113,150,],[61,61,61,61,]),'cteBool':([165,],[191,]),'addProcedureDir':([3,],[4,]),'cteInt':([166,],[192,]),'paso8_and':([136,],[171,]),'ambAuxTipo1':([14,16,17,18,19,],[26,28,29,30,31,]),'auxVar1Main':([49,],[68,]),'cteFloat':([167,],[193,]),'auxVarcte':([195,],[205,]),'ambIdVars':([35,],[42,]),'cicloVarsMain':([32,40,],[39,63,]),'addTypeGlobal':([41,],[64,]),'varsFuncion':([82,112,],[112,112,]),'auxFunction':([37,],[46,]),'auxParametros':([37,110,],[47,148,]),'auxVar1Funcion':([152,],[183,]),'createVariableDirFuncion':([82,112,],[114,114,]),'addType':([169,],[195,]),'funcion':([7,12,],[12,12,]),'ambAuxArgumentos1':([109,],[146,]),'auxTermino':([123,],[159,]),'auxFactor':([72,73,75,77,79,105,125,127,137,141,147,159,172,181,203,204,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'varcte':([97,],[129,]),'paso3_suma':([90,],[122,]),'idVars':([13,43,],[22,65,]),'idVarsFuncion':([152,210,],[182,215,]),'paso2_mult':([157,160,],[186,188,]),'ambCicloExpresion':([101,],[138,]),'cicloFuncion':([7,12,],[11,21,]),'programa':([0,],[2,]),'exp':([72,73,75,77,79,105,125,127,137,147,172,181,203,204,],[99,102,102,104,109,144,99,163,102,109,102,102,211,212,]),'ambAuxParametros':([81,],[111,]),'ambIdVarsFuncion':([201,],[209,]),'addTypeGlobalMain':([116,],[153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',8,'p_programa','MyLittleDucky.py',68),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',72),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',80),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',81),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',84),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',87),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',92),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',95),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',104),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',107),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',117),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',118),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',121),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',122),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',123),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',124),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',125),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',130),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',131),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',134),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',135),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',138),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',141),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',146),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',149),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',159),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',162),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',172),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',173),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',176),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',179),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',180),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE','bloqueFuncion',7,'p_bloqueFuncion','MyLittleDucky.py',183),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',186),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',187),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',190),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',191),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',194),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',197),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',202),
  ('addTypeGlobalFuncion -> <empty>','addTypeGlobalFuncion',0,'p_addTypeGlobalFuncion','MyLittleDucky.py',205),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',215),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',218),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',229),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',230),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',233),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',234),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',235),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',236),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',237),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',238),
  ('asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',242),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',246),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',247),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',250),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',254),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',257),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',258),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',261),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',262),
  ('cicloExpresion -> expresion ambCicloExpresion','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',265),
  ('ambCicloExpresion -> auxCicloExpresion expresion cicloExpresion','ambCicloExpresion',3,'p_ambCicloExpresion','MyLittleDucky.py',268),
  ('ambCicloExpresion -> <empty>','ambCicloExpresion',0,'p_ambCicloExpresion','MyLittleDucky.py',269),
  ('auxCicloExpresion -> AND paso8_and','auxCicloExpresion',2,'p_auxCicloExpresion','MyLittleDucky.py',272),
  ('auxCicloExpresion -> OR paso8_or','auxCicloExpresion',2,'p_auxCicloExpresion','MyLittleDucky.py',273),
  ('expresion -> exp ambExp paso9','expresion',3,'p_expresion','MyLittleDucky.py',276),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',283),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',284),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',285),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',286),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',287),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',288),
  ('condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion','condicion',6,'p_condicion','MyLittleDucky.py',291),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',295),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',296),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',299),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',302),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',305),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',306),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',309),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',310),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',313),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',316),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',319),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',320),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',323),
  ('auxTermino -> DIVIDE paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',324),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',327),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',328),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',331),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',332),
  ('varcte -> ID paso1 addType auxVarcte','varcte',4,'p_varcte','MyLittleDucky.py',335),
  ('varcte -> CTEINT paso1 cteInt','varcte',3,'p_varcte','MyLittleDucky.py',336),
  ('varcte -> CTEFLOAT paso1 cteFloat','varcte',3,'p_varcte','MyLittleDucky.py',337),
  ('varcte -> CTECHAR paso1 cteChar','varcte',3,'p_varcte','MyLittleDucky.py',338),
  ('varcte -> CTEBOOL paso1 cteBool','varcte',3,'p_varcte','MyLittleDucky.py',339),
  ('varcte -> CTESTRING paso1 cteString','varcte',3,'p_varcte','MyLittleDucky.py',340),
  ('addType -> <empty>','addType',0,'p_addType','MyLittleDucky.py',356),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',371),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',372),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',373),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',376),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',377),
  ('funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc','funcion',8,'p_funcion','MyLittleDucky.py',380),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',383),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',390),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',391),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',394),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',397),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',400),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',411),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',412),
  ('ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque','ciclo',5,'p_ciclo','MyLittleDucky.py',415),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',419),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',423),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',424),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',427),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',428),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',431),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',434),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',435),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',438),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',444),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',449),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',453),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',457),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',461),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',465),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',493),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',524),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',528),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',535),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',539),
  ('paso9 -> <empty>','paso9',0,'p_paso9','MyLittleDucky.py',543),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',574),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',578),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',583),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',588),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',594),
]
