
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '8735C03C73CC7434571F3BFCD9268284'
    
_lr_action_items = {'NOTEQUAL':([87,90,91,92,102,119,122,127,128,129,130,131,132,133,161,163,169,170,171,172,173,174,195,197,199,200,201,202,203,204,205,220,223,243,244,],[-129,-83,-130,-77,139,-80,-86,-124,-90,-124,-124,-124,-124,-124,-78,-84,-145,-144,-141,-142,-143,-99,-79,-85,-132,-98,-97,-94,-95,-96,-102,-89,-93,-100,-101,]),'MULTI':([91,122,127,128,129,130,131,132,133,169,170,171,172,173,174,199,200,201,202,203,204,205,220,223,243,244,],[-130,162,-124,-90,-124,-124,-124,-124,-124,-145,-144,-141,-142,-143,-99,-132,-98,-97,-94,-95,-96,-102,-89,-93,-100,-101,]),'GTHAN':([87,90,91,92,102,119,122,127,128,129,130,131,132,133,161,163,169,170,171,172,173,174,195,197,199,200,201,202,203,204,205,220,223,243,244,],[-129,-83,-130,-77,141,-80,-86,-124,-90,-124,-124,-124,-124,-124,-78,-84,-145,-144,-141,-142,-143,-99,-79,-85,-132,-98,-97,-94,-95,-96,-102,-89,-93,-100,-101,]),'RETURN':([53,55,56,58,61,62,76,81,111,112,153,154,155,159,166,175,185,189,192,214,226,237,245,246,247,],[-51,-50,-47,-49,-46,-48,-30,-37,-37,-35,-36,-35,190,-123,-55,-114,-115,-34,-38,-76,-140,-74,-75,-52,-40,]),'READ':([32,39,40,53,54,55,56,58,61,62,63,68,76,81,111,112,153,154,159,166,175,185,192,194,214,226,237,245,246,247,],[-21,50,-21,-51,50,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,50,-36,50,-123,-55,-114,-115,-38,-24,-76,-140,-74,-75,-52,-40,]),'EQUAL':([87,90,91,92,102,119,122,127,128,129,130,131,132,133,161,163,169,170,171,172,173,174,195,197,199,200,201,202,203,204,205,220,223,243,244,],[-129,-83,-130,-77,142,-80,-86,-124,-90,-124,-124,-124,-124,-124,-78,-84,-145,-144,-141,-142,-143,-99,-79,-85,-132,-98,-97,-94,-95,-96,-102,-89,-93,-100,-101,]),'GETHAN':([87,90,91,92,102,119,122,127,128,129,130,131,132,133,161,163,169,170,171,172,173,174,195,197,199,200,201,202,203,204,205,220,223,243,244,],[-129,-83,-130,-77,143,-80,-86,-124,-90,-124,-124,-124,-124,-124,-78,-84,-145,-144,-141,-142,-143,-99,-79,-85,-132,-98,-97,-94,-95,-96,-102,-89,-93,-100,-101,]),'LBRACKET':([14,16,17,18,19,60,78,87,90,91,92,108,119,122,127,128,129,130,131,132,133,161,163,169,170,171,172,173,174,195,197,199,200,201,202,203,204,205,220,223,234,243,244,],[25,25,25,25,25,-124,-99,-129,-83,-130,-77,151,-80,-86,-124,-90,-124,-124,-124,-124,-124,-78,-84,-145,-144,-141,-142,-143,-99,-79,-85,-132,-98,-97,-94,-95,-96,222,-89,-93,244,-100,-101,]),'WHILE':([32,39,40,53,54,55,56,58,61,62,63,68,76,81,111,112,153,154,159,166,175,185,192,194,214,226,237,245,246,247,],[-21,52,-21,-51,52,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,52,-36,52,-123,-55,-114,-115,-38,-24,-76,-140,-74,-75,-52,-40,]),'PROGRAM':([0,],[1,]),'PRINT':([32,39,40,53,54,55,56,58,61,62,63,68,76,81,111,112,153,154,159,166,175,185,192,194,214,226,237,245,246,247,],[-21,51,-21,-51,51,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,51,-36,51,-123,-55,-114,-115,-38,-24,-76,-140,-74,-75,-52,-40,]),'CTESTRING':([72,73,75,77,88,89,95,96,97,120,121,124,126,135,137,139,141,142,143,144,145,149,151,160,162,164,165,176,177,178,179,180,181,182,183,187,190,196,198,215,221,222,],[86,-92,-92,-92,-128,-127,-131,127,-91,-82,-81,86,-92,-133,-134,-151,-146,-150,-148,-147,-149,-92,-92,-92,-125,-92,-126,-92,-92,-92,-92,-92,-92,-92,-92,-152,-92,-87,-88,-92,-92,-92,]),'LETHAN':([87,90,91,92,102,119,122,127,128,129,130,131,132,133,161,163,169,170,171,172,173,174,195,197,199,200,201,202,203,204,205,220,223,243,244,],[-129,-83,-130,-77,145,-80,-86,-124,-90,-124,-124,-124,-124,-124,-78,-84,-145,-144,-141,-142,-143,-99,-79,-85,-132,-98,-97,-94,-95,-96,-102,-89,-93,-100,-101,]),'MINUS':([72,73,75,77,87,88,89,90,91,95,119,120,121,122,124,126,127,128,129,130,131,132,133,135,137,139,141,142,143,144,145,149,151,160,162,163,164,165,169,170,171,172,173,174,176,177,178,179,180,181,182,183,187,190,196,197,198,199,200,201,202,203,204,205,215,220,221,222,223,243,244,],[88,88,88,88,-129,-128,-127,-83,-130,-131,88,-82,-81,-86,88,88,-124,-90,-124,-124,-124,-124,-124,-133,-134,-151,-146,-150,-148,-147,-149,88,88,88,-125,-84,88,-126,-145,-144,-141,-142,-143,-99,88,88,88,88,88,88,88,88,-152,88,-87,-85,-88,-132,-98,-97,-94,-95,-96,-102,88,-89,88,88,-93,-100,-101,]),'RBRACE':([32,39,40,53,54,55,56,58,59,61,62,63,68,74,76,159,166,175,185,194,214,226,229,237,245,246,],[-21,-32,-21,-51,-32,-50,-47,-49,76,-46,-48,-20,-22,-31,-30,-123,-55,-114,-115,-24,-76,-140,240,-74,-75,-52,]),'RPAREN':([37,46,47,48,66,77,80,85,86,87,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,110,119,122,125,127,128,129,130,131,132,133,136,138,140,146,148,152,161,163,167,168,169,170,171,172,173,174,186,195,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,220,223,224,225,233,235,236,243,244,],[-108,67,-109,-107,-111,-117,-113,118,-60,-129,-83,-130,-77,123,-58,-59,134,-64,-136,-72,-138,-116,147,-118,-122,-110,-80,-86,-56,-124,-90,-124,-124,-124,-124,-124,-73,-61,-65,184,-120,-112,-78,-84,-57,199,-145,-144,-141,-142,-143,-99,-121,-79,-85,-132,-98,-97,-94,-95,-96,-102,-135,-135,-68,-66,-71,-69,-67,-70,-89,-93,-64,-64,243,-62,-63,-100,-101,]),'SEMICOLON':([3,4,14,16,17,18,19,26,28,29,30,31,41,44,64,87,90,91,92,102,115,118,119,122,123,127,128,129,130,131,132,133,140,147,157,161,163,169,170,171,172,173,174,195,197,199,200,201,202,203,204,205,208,209,210,211,212,213,217,220,223,228,230,239,241,243,244,],[-2,5,-19,-19,-19,-19,-19,-15,-13,-16,-17,-14,-8,-18,79,-129,-83,-130,-77,-72,-25,159,-80,-86,166,-124,-90,-124,-124,-124,-124,-124,-65,185,194,-78,-84,-145,-144,-141,-142,-143,-99,-79,-85,-132,-98,-97,-94,-95,-96,-102,-68,-66,-71,-69,-67,-70,229,-89,-93,-137,-41,246,247,-100,-101,]),'CTEFLOAT':([72,73,75,77,88,89,95,96,97,120,121,124,126,135,137,139,141,142,143,144,145,149,151,160,162,164,165,176,177,178,179,180,181,182,183,187,190,196,198,215,221,222,],[-92,-92,-92,-92,-128,-127,-131,131,-91,-82,-81,-92,-92,-133,-134,-151,-146,-150,-148,-147,-149,-92,-92,-92,-125,-92,-126,-92,-92,-92,-92,-92,-92,-92,-92,-152,-92,-87,-88,-92,-92,-92,]),'PLUS':([72,73,75,77,87,88,89,90,91,95,119,120,121,122,124,126,127,128,129,130,131,132,133,135,137,139,141,142,143,144,145,149,151,160,162,163,164,165,169,170,171,172,173,174,176,177,178,179,180,181,182,183,187,190,196,197,198,199,200,201,202,203,204,205,215,220,221,222,223,243,244,],[89,89,89,89,-129,-128,-127,-83,-130,-131,89,-82,-81,-86,89,89,-124,-90,-124,-124,-124,-124,-124,-133,-134,-151,-146,-150,-148,-147,-149,89,89,89,-125,-84,89,-126,-145,-144,-141,-142,-143,-99,89,89,89,89,89,89,89,89,-152,89,-87,-85,-88,-132,-98,-97,-94,-95,-96,-102,89,-89,89,89,-93,-100,-101,]),'COLON':([22,24,35,42,65,69,70,84,116,158,191,193,219,231,242,],[34,-10,-12,-9,-11,83,-27,-29,-26,-28,218,-43,-45,-42,-44,]),'COMMA':([24,35,66,70,80,84,86,87,90,91,92,94,98,107,119,122,127,128,129,130,131,132,133,161,163,169,170,171,172,173,174,193,195,197,199,200,201,202,203,204,205,219,220,223,243,244,],[-10,43,-111,-27,109,117,-60,-129,-83,-130,-77,124,-59,149,-80,-86,-124,-90,-124,-124,-124,-124,-124,-78,-84,-145,-144,-141,-142,-143,-99,-43,-79,-85,-132,-98,-97,-94,-95,-96,-102,232,-89,-93,-100,-101,]),'EQUALA':([60,78,108,150,216,],[-124,-99,-54,187,-53,]),'$end':([2,33,76,],[0,-1,-30,]),'FUNCTION':([5,6,7,9,12,23,79,82,114,240,],[-4,-4,10,-3,10,-5,-7,-106,-105,-33,]),'STRING':([10,34,37,83,109,218,],[14,14,14,14,14,14,]),'CTEINT':([25,72,73,75,77,88,89,95,96,97,120,121,124,126,135,137,139,141,142,143,144,145,149,151,160,162,164,165,176,177,178,179,180,181,182,183,187,190,196,198,215,221,222,],[36,-92,-92,-92,-92,-128,-127,-131,130,-91,-82,-81,-92,-92,-133,-134,-151,-146,-150,-148,-147,-149,-92,-92,-92,-125,-92,-126,-92,-92,-92,-92,-92,-92,-92,-92,-152,-92,-87,-88,-92,-92,-92,]),'DIVIDE':([91,122,127,128,129,130,131,132,133,169,170,171,172,173,174,199,200,201,202,203,204,205,220,223,243,244,],[-130,165,-124,-90,-124,-124,-124,-124,-124,-145,-144,-141,-142,-143,-99,-132,-98,-97,-94,-95,-96,-102,-89,-93,-100,-101,]),'ELSE':([76,214,],[-30,227,]),'LTHAN':([87,90,91,92,102,119,122,127,128,129,130,131,132,133,161,163,169,170,171,172,173,174,195,197,199,200,201,202,203,204,205,220,223,243,244,],[-129,-83,-130,-77,144,-80,-86,-124,-90,-124,-124,-124,-124,-124,-78,-84,-145,-144,-141,-142,-143,-99,-79,-85,-132,-98,-97,-94,-95,-96,-102,-89,-93,-100,-101,]),'LPAREN':([27,50,51,52,57,60,72,73,75,77,88,89,95,120,121,124,126,133,135,137,139,141,142,143,144,145,149,151,160,162,164,165,174,176,177,178,179,180,181,182,183,187,190,196,198,205,215,221,222,],[37,71,72,73,75,77,95,95,95,95,-128,-127,-131,-82,-81,95,95,-124,-133,-134,-151,-146,-150,-148,-147,-149,95,95,95,-125,95,-126,-99,95,95,95,95,95,95,95,95,-152,95,-87,-88,221,95,95,95,]),'VAR':([5,6,8,23,32,38,40,68,79,81,111,113,192,194,247,],[-6,-6,13,-5,-23,49,-23,-22,-7,-39,-39,156,-38,-24,-40,]),'CTECHAR':([72,73,75,77,88,89,95,96,97,120,121,124,126,135,137,139,141,142,143,144,145,149,151,160,162,164,165,176,177,178,179,180,181,182,183,187,190,196,198,215,221,222,],[-92,-92,-92,-92,-128,-127,-131,132,-91,-82,-81,-92,-92,-133,-134,-151,-146,-150,-148,-147,-149,-92,-92,-92,-125,-92,-126,-92,-92,-92,-92,-92,-92,-92,-92,-152,-92,-87,-88,-92,-92,-92,]),'ID':([1,13,14,15,16,17,18,19,26,28,29,30,31,32,39,40,43,44,45,49,53,54,55,56,58,61,62,63,68,71,72,73,75,76,77,81,88,89,95,96,97,111,112,117,120,121,124,126,135,137,139,141,142,143,144,145,149,151,153,154,156,159,160,162,164,165,166,175,176,177,178,179,180,181,182,183,185,187,190,192,194,196,198,214,215,221,222,226,232,237,245,246,247,],[3,24,-19,27,-19,-19,-19,-19,-15,-13,-16,-17,-14,-21,60,-21,24,-18,66,70,-51,60,-50,-47,-49,-46,-48,-20,-22,85,-92,-92,-92,-30,-92,-37,-128,-127,-131,133,-91,-37,60,70,-82,-81,-92,-92,-133,-134,-151,-146,-150,-148,-147,-149,-92,-92,-36,60,193,-123,-92,-125,-92,-126,-55,-114,-92,-92,-92,-92,-92,-92,-92,-92,-115,-152,-92,-38,-24,-87,-88,-76,-92,-92,-92,-140,193,-74,-75,-52,-40,]),'IF':([32,39,40,53,54,55,56,58,61,62,63,68,76,81,111,112,153,154,159,166,175,185,192,194,214,226,237,245,246,247,],[-21,57,-21,-51,57,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,57,-36,57,-123,-55,-114,-115,-38,-24,-76,-140,-74,-75,-52,-40,]),'AND':([87,90,91,92,100,101,102,119,122,127,128,129,130,131,132,133,138,140,161,163,169,170,171,172,173,174,195,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,220,223,224,225,243,244,],[-129,-83,-130,-77,135,-136,-72,-80,-86,-124,-90,-124,-124,-124,-124,-124,-61,-65,-78,-84,-145,-144,-141,-142,-143,-99,-79,-85,-132,-98,-97,-94,-95,-96,-102,-135,-135,-68,-66,-71,-69,-67,-70,-89,-93,135,135,-100,-101,]),'CHAR':([10,34,37,83,109,218,],[18,18,18,18,18,18,]),'LBRACE':([20,67,134,184,227,238,],[32,81,32,32,-139,32,]),'INT':([10,34,37,83,109,218,],[16,16,16,16,16,16,]),'CTEBOOL':([72,73,75,77,88,89,95,96,97,120,121,124,126,135,137,139,141,142,143,144,145,149,151,160,162,164,165,176,177,178,179,180,181,182,183,187,190,196,198,215,221,222,],[-92,-92,-92,-92,-128,-127,-131,129,-91,-82,-81,-92,-92,-133,-134,-151,-146,-150,-148,-147,-149,-92,-92,-92,-125,-92,-126,-92,-92,-92,-92,-92,-92,-92,-92,-152,-92,-87,-88,-92,-92,-92,]),'FLOAT':([10,34,37,83,109,218,],[17,17,17,17,17,17,]),'BOOL':([10,34,37,83,109,218,],[19,19,19,19,19,19,]),'RBRACKET':([36,87,90,91,92,119,122,127,128,129,130,131,132,133,161,163,169,170,171,172,173,174,188,195,197,199,200,201,202,203,204,205,220,223,243,244,],[44,-129,-83,-130,-77,-80,-86,-124,-90,-124,-124,-124,-124,-124,-78,-84,-145,-144,-141,-142,-143,-99,216,-79,-85,-132,-98,-97,-94,-95,-96,-102,-89,-93,-100,-101,]),'MAIN':([5,6,7,9,11,12,21,23,79,82,114,240,],[-4,-4,-104,-3,20,-104,-103,-5,-7,-106,-105,-33,]),'OR':([87,90,91,92,100,101,102,119,122,127,128,129,130,131,132,133,138,140,161,163,169,170,171,172,173,174,195,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,220,223,224,225,243,244,],[-129,-83,-130,-77,137,-136,-72,-80,-86,-124,-90,-124,-124,-124,-124,-124,-61,-65,-78,-84,-145,-144,-141,-142,-143,-99,-79,-85,-132,-98,-97,-94,-95,-96,-102,-135,-135,-68,-66,-71,-69,-67,-70,-89,-93,137,137,-100,-101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([5,6,],[6,6,]),'menor':([144,],[182,]),'bloque':([20,134,184,238,],[33,175,214,245,]),'mayor':([141,],[179,]),'mayorIg':([143,],[181,]),'ambCicloTermino':([122,],[163,]),'auxLlamada':([77,],[105,]),'igual':([142,],[180,]),'factor':([72,73,75,77,124,126,149,151,160,164,176,177,178,179,180,181,182,183,190,215,221,222,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'addTypeGlobalFuncion':([230,],[241,]),'idVarsMain':([49,117,],[69,158,]),'paso2_div':([165,],[198,]),'cicloBloque':([39,54,],[59,74,]),'cteChar':([173,],[204,]),'cicloTermino':([72,73,75,77,124,126,149,151,160,164,176,177,178,179,180,181,182,183,190,215,221,222,],[90,90,90,90,90,90,90,90,90,197,90,90,90,90,90,90,90,90,90,90,90,90,]),'expresion':([73,75,176,177,190,],[101,101,101,101,217,]),'bloqueFuncion':([67,],[82,]),'cicloExp':([72,73,75,77,124,126,149,151,160,176,177,178,179,180,181,182,183,190,215,221,222,],[92,92,92,92,92,92,92,92,195,92,92,92,92,92,92,92,92,92,92,92,92,]),'parametros':([37,],[48,]),'ambExp':([119,],[161,]),'addVariableDirMain':([70,],[84,]),'paso5':([91,],[122,]),'auxVar1':([13,],[23,]),'expAndOr':([73,75,],[99,103,]),'createVariableDir':([5,6,],[8,8,]),'argumentos':([77,],[104,]),'ciclo':([39,54,112,154,],[53,53,53,53,]),'tipo':([10,34,37,83,109,218,],[15,41,45,115,45,230,]),'asig':([187,],[215,]),'llamada':([39,54,112,154,],[55,55,55,55,]),'condicion':([39,54,112,154,],[56,56,56,56,]),'cicloBloqueFuncion':([112,154,],[155,189,]),'auxArgumentos1':([77,149,],[106,186,]),'lectura':([39,54,112,154,],[58,58,58,58,]),'paso12':([103,],[146,]),'auxEscritura1':([72,124,],[93,167,]),'auxEscritura2':([72,124,],[94,94,]),'ambIdVarsMain':([84,],[116,]),'paso11':([228,],[239,]),'paso8_or':([137,],[177,]),'auxExp':([72,73,75,77,119,124,126,149,151,160,164,176,177,178,179,180,181,182,183,190,215,221,222,],[97,97,97,97,160,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'auxCicloExpresion':([100,224,225,],[136,235,236,]),'auxAsignacion1':([108,],[150,]),'cicloVarsFuncion':([81,111,],[112,153,]),'escritura':([39,54,112,154,],[62,62,62,62,]),'addParameters':([66,],[80,]),'addVariableDirFuncion':([193,],[219,]),'auxCondicion':([214,],[226,]),'termino':([72,73,75,77,124,126,149,151,160,176,177,178,179,180,181,182,183,190,215,221,222,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'paso3_resta':([88,],[120,]),'addProcDirectoryFunc':([82,],[114,]),'paso13':([227,],[238,]),'paso10':([101,],[138,]),'createVariableDirMain':([32,40,],[38,38,]),'addVariableDir':([24,],[35,]),'paso14':([226,],[237,]),'cicloExpresion':([73,75,176,177,],[100,100,206,207,]),'estatuto':([39,54,112,154,],[54,54,154,154,]),'ambAuxEscritura1':([94,],[125,]),'diferente':([139,],[178,]),'cteString':([169,],[200,]),'cicloVars':([5,6,],[7,9,]),'paso9':([206,207,],[224,225,]),'paso1':([60,127,129,130,131,132,133,],[78,169,170,171,172,173,174,]),'paso4':([87,],[119,]),'varsMain':([32,40,],[40,40,]),'paso6':([95,],[126,]),'paso7':([199,],[220,]),'asignacion':([39,54,112,154,],[61,61,61,61,]),'cteBool':([170,],[201,]),'addProcedureDir':([3,],[4,]),'cteInt':([171,],[202,]),'paso8_and':([135,],[176,]),'ambAuxTipo1':([14,16,17,18,19,],[26,28,29,30,31,]),'menorIg':([145,],[183,]),'auxVar1Main':([49,],[68,]),'cteFloat':([172,],[203,]),'auxVarcte':([205,],[223,]),'ambIdVars':([35,],[42,]),'cicloVarsMain':([32,40,],[39,63,]),'addTypeGlobal':([41,],[64,]),'auxExpresion':([102,],[140,]),'varsFuncion':([81,111,],[111,111,]),'auxFunction':([37,],[46,]),'auxParametros':([37,109,],[47,152,]),'auxVar1Funcion':([156,],[192,]),'createVariableDirFuncion':([81,111,],[113,113,]),'addType':([78,174,],[108,205,]),'funcion':([7,12,],[12,12,]),'ambAuxArgumentos1':([107,],[148,]),'auxTermino':([122,],[164,]),'auxFactor':([72,73,75,77,124,126,149,151,160,164,176,177,178,179,180,181,182,183,190,215,221,222,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'varcte':([96,],[128,]),'paso3_suma':([89,],[121,]),'idVars':([13,43,],[22,65,]),'idVarsFuncion':([156,232,],[191,242,]),'paso2_mult':([162,],[196,]),'cicloFuncion':([7,12,],[11,21,]),'programa':([0,],[2,]),'exp':([72,73,75,77,124,126,149,151,176,177,178,179,180,181,182,183,190,215,221,222,],[98,102,102,107,98,168,107,188,102,102,208,209,210,211,212,213,102,228,233,234,]),'ambAuxParametros':([80,],[110,]),'ambIdVarsFuncion':([219,],[231,]),'addTypeGlobalMain':([115,],[157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',8,'p_programa','MyLittleDucky.py',69),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',73),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',81),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',82),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',85),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',88),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',93),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',96),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',105),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',108),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',118),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',119),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',122),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',123),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',124),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',125),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',126),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',131),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',132),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',135),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',136),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',139),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',142),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',147),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',150),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',160),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',163),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',173),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',174),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',177),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',180),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',181),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE','bloqueFuncion',7,'p_bloqueFuncion','MyLittleDucky.py',184),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',187),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',188),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',191),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',192),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',195),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',198),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',203),
  ('addTypeGlobalFuncion -> <empty>','addTypeGlobalFuncion',0,'p_addTypeGlobalFuncion','MyLittleDucky.py',206),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',216),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',219),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',230),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',231),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',234),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',235),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',236),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',237),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',238),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',239),
  ('asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON','asignacion',9,'p_asignacion','MyLittleDucky.py',243),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',247),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',248),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',251),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',255),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',258),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',259),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',262),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',263),
  ('cicloExpresion -> expresion paso10','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',266),
  ('auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',270),
  ('auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',271),
  ('auxCicloExpresion -> <empty>','auxCicloExpresion',0,'p_auxCicloExpresion','MyLittleDucky.py',272),
  ('expresion -> exp auxExpresion','expresion',2,'p_expresion','MyLittleDucky.py',275),
  ('auxExpresion -> GTHAN mayor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',279),
  ('auxExpresion -> LTHAN menor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',280),
  ('auxExpresion -> NOTEQUAL diferente exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',281),
  ('auxExpresion -> GETHAN mayorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',282),
  ('auxExpresion -> LETHAN menorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',283),
  ('auxExpresion -> EQUAL igual exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',284),
  ('auxExpresion -> <empty>','auxExpresion',0,'p_auxExpresion','MyLittleDucky.py',285),
  ('expAndOr -> cicloExpresion auxCicloExpresion','expAndOr',2,'p_expAndOr','MyLittleDucky.py',288),
  ('condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14','condicion',8,'p_condicion','MyLittleDucky.py',291),
  ('auxCondicion -> ELSE paso13 bloque','auxCondicion',3,'p_auxCondicion','MyLittleDucky.py',295),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',296),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',299),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',302),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',305),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',306),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',309),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',310),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',313),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',316),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',319),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',320),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',323),
  ('auxTermino -> DIVIDE paso2_div','auxTermino',2,'p_auxTermino','MyLittleDucky.py',324),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',327),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',328),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',331),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',332),
  ('varcte -> ID paso1 addType auxVarcte','varcte',4,'p_varcte','MyLittleDucky.py',335),
  ('varcte -> CTEINT paso1 cteInt','varcte',3,'p_varcte','MyLittleDucky.py',336),
  ('varcte -> CTEFLOAT paso1 cteFloat','varcte',3,'p_varcte','MyLittleDucky.py',337),
  ('varcte -> CTECHAR paso1 cteChar','varcte',3,'p_varcte','MyLittleDucky.py',338),
  ('varcte -> CTEBOOL paso1 cteBool','varcte',3,'p_varcte','MyLittleDucky.py',339),
  ('varcte -> CTESTRING paso1 cteString','varcte',3,'p_varcte','MyLittleDucky.py',340),
  ('addType -> <empty>','addType',0,'p_addType','MyLittleDucky.py',356),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',371),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',372),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',373),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',376),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',377),
  ('funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc','funcion',8,'p_funcion','MyLittleDucky.py',380),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',383),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',390),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',391),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',394),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',397),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',400),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',411),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',412),
  ('ciclo -> WHILE LPAREN expAndOr RPAREN bloque','ciclo',5,'p_ciclo','MyLittleDucky.py',415),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',419),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',423),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',424),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',427),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',428),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',431),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',434),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',435),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',438),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',444),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',449),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',453),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',457),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',461),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',465),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',493),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',524),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',528),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',535),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',539),
  ('paso9 -> <empty>','paso9',0,'p_paso9','MyLittleDucky.py',543),
  ('paso10 -> <empty>','paso10',0,'p_paso10','MyLittleDucky.py',574),
  ('paso11 -> <empty>','paso11',0,'p_paso11','MyLittleDucky.py',605),
  ('paso12 -> <empty>','paso12',0,'p_paso12','MyLittleDucky.py',644),
  ('paso13 -> <empty>','paso13',0,'p_paso13','MyLittleDucky.py',661),
  ('paso14 -> <empty>','paso14',0,'p_paso14','MyLittleDucky.py',673),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',681),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',685),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',690),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',695),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',700),
  ('mayor -> <empty>','mayor',0,'p_mayor','MyLittleDucky.py',704),
  ('menor -> <empty>','menor',0,'p_menor','MyLittleDucky.py',708),
  ('mayorIg -> <empty>','mayorIg',0,'p_mayorIg','MyLittleDucky.py',712),
  ('menorIg -> <empty>','menorIg',0,'p_menorIg','MyLittleDucky.py',716),
  ('igual -> <empty>','igual',0,'p_igual','MyLittleDucky.py',720),
  ('diferente -> <empty>','diferente',0,'p_diferente','MyLittleDucky.py',724),
  ('asig -> <empty>','asig',0,'p_asig','MyLittleDucky.py',728),
]
