
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C2509C5D131DD8DD288DF975DC7A376C'
    
_lr_action_items = {'NOTEQUAL':([88,91,92,98,102,121,125,132,133,134,135,136,137,138,161,163,167,168,171,191,192,],[-80,-86,-77,-83,140,-78,-84,-98,-123,-97,-94,-95,-96,-101,-79,-85,-89,-90,-93,-99,-100,]),'MULTI':([91,132,133,134,135,136,137,138,167,168,171,191,192,],[124,-98,-123,-97,-94,-95,-96,-101,-89,-90,-93,-99,-100,]),'GTHAN':([88,91,92,98,102,121,125,132,133,134,135,136,137,138,161,163,167,168,171,191,192,],[-80,-86,-77,-83,142,-78,-84,-98,-123,-97,-94,-95,-96,-101,-79,-85,-89,-90,-93,-99,-100,]),'RETURN':([53,55,56,58,61,62,76,82,112,113,154,155,156,160,165,172,174,175,176,178,181,187,193,201,],[-51,-50,-47,-49,-46,-48,-30,-37,-37,-35,-36,-35,179,-122,-55,-113,-76,-52,-114,-34,-38,-74,-75,-40,]),'READ':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,154,155,160,165,172,174,175,176,181,183,187,193,201,],[-21,50,-21,-51,50,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,50,-36,50,-122,-55,-113,-76,-52,-114,-38,-24,-74,-75,-40,]),'EQUAL':([88,91,92,98,102,121,125,132,133,134,135,136,137,138,161,163,167,168,171,191,192,],[-80,-86,-77,-83,143,-78,-84,-98,-123,-97,-94,-95,-96,-101,-79,-85,-89,-90,-93,-99,-100,]),'GETHAN':([88,91,92,98,102,121,125,132,133,134,135,136,137,138,161,163,167,168,171,191,192,],[-80,-86,-77,-83,144,-78,-84,-98,-123,-97,-94,-95,-96,-101,-79,-85,-89,-90,-93,-99,-100,]),'LBRACKET':([14,16,17,18,19,60,88,91,92,98,121,125,132,133,134,135,136,137,138,161,163,167,168,171,185,191,192,],[25,25,25,25,25,77,-80,-86,-77,-83,-78,-84,-98,-123,-97,-94,-95,-96,170,-79,-85,-89,-90,-93,192,-99,-100,]),'WHILE':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,154,155,160,165,172,174,175,176,181,183,187,193,201,],[-21,52,-21,-51,52,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,52,-36,52,-122,-55,-113,-76,-52,-114,-38,-24,-74,-75,-40,]),'PROGRAM':([0,],[1,]),'PRINT':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,154,155,160,165,172,174,175,176,181,183,187,193,201,],[-21,51,-21,-51,51,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,51,-36,51,-122,-55,-113,-76,-52,-114,-38,-24,-74,-75,-40,]),'CTESTRING':([72,73,75,77,79,89,90,95,96,97,105,120,122,123,124,126,127,129,140,141,142,143,144,145,146,152,162,164,169,170,],[87,-92,-92,-92,-92,-127,-126,-92,132,-91,-92,-92,-82,-81,-124,-92,-124,87,-70,-92,-68,-73,-71,-69,-72,-92,-87,-88,-92,-92,]),'LETHAN':([88,91,92,98,102,121,125,132,133,134,135,136,137,138,161,163,167,168,171,191,192,],[-80,-86,-77,-83,146,-78,-84,-98,-123,-97,-94,-95,-96,-101,-79,-85,-89,-90,-93,-99,-100,]),'MINUS':([72,73,75,77,79,88,89,90,91,95,98,105,120,122,123,124,125,126,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,152,162,163,164,167,168,169,170,171,191,192,],[89,89,89,89,89,89,-127,-126,-86,89,-83,89,89,-82,-81,-124,-84,89,-124,89,-98,-123,-97,-94,-95,-96,-101,-70,89,-68,-73,-71,-69,-72,89,-87,-85,-88,-89,-90,89,89,-93,-99,-100,]),'RBRACE':([32,39,40,53,54,55,56,58,59,61,62,63,68,74,76,160,165,172,174,175,176,183,187,193,194,],[-21,-32,-21,-51,-32,-50,-47,-49,76,-46,-48,-20,-22,-31,-30,-122,-55,-113,-76,-52,-114,-24,-74,-75,198,]),'RPAREN':([37,46,47,48,66,73,75,79,81,86,87,88,91,92,93,94,98,99,100,101,103,106,107,108,109,111,121,125,130,131,132,133,134,135,136,137,138,151,153,161,163,166,167,168,171,173,177,184,191,192,],[-107,67,-108,-106,-110,-62,-62,-116,-112,119,-60,-80,-86,-77,128,-58,-83,-59,139,-61,147,-115,150,-117,-121,-109,-78,-84,-56,167,-98,-123,-97,-94,-95,-96,-101,-119,-111,-79,-85,-57,-89,-90,-93,-66,-120,191,-99,-100,]),'SEMICOLON':([3,4,14,16,17,18,19,26,28,29,30,31,41,44,64,88,91,92,98,116,119,121,125,128,132,133,134,135,136,137,138,149,150,158,161,163,167,168,171,188,191,192,195,199,],[-2,5,-19,-19,-19,-19,-19,-15,-13,-16,-17,-14,-8,-18,80,-80,-86,-77,-83,-25,160,-78,-84,165,-98,-123,-97,-94,-95,-96,-101,175,176,183,-79,-85,-89,-90,-93,194,-99,-100,-41,201,]),'CTEFLOAT':([72,73,75,77,79,89,90,95,96,97,105,120,122,123,124,126,127,129,140,141,142,143,144,145,146,152,162,164,169,170,],[-92,-92,-92,-92,-92,-127,-126,-92,136,-91,-92,-92,-82,-81,-124,-92,-124,-92,-70,-92,-68,-73,-71,-69,-72,-92,-87,-88,-92,-92,]),'PLUS':([72,73,75,77,79,88,89,90,91,95,98,105,120,122,123,124,125,126,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,152,162,163,164,167,168,169,170,171,191,192,],[90,90,90,90,90,90,-127,-126,-86,90,-83,90,90,-82,-81,-124,-84,90,-124,90,-98,-123,-97,-94,-95,-96,-101,-70,90,-68,-73,-71,-69,-72,90,-87,-85,-88,-89,-90,90,90,-93,-99,-100,]),'COLON':([22,24,35,42,65,69,70,85,117,159,180,182,190,196,200,],[34,-10,-12,-9,-11,84,-27,-29,-26,-28,189,-43,-45,-42,-44,]),'COMMA':([24,35,66,70,81,85,87,88,91,92,94,98,99,109,121,125,132,133,134,135,136,137,138,161,163,167,168,171,182,190,191,192,],[-10,43,-110,-27,110,118,-60,-80,-86,-77,129,-83,-59,152,-78,-84,-98,-123,-97,-94,-95,-96,-101,-79,-85,-89,-90,-93,-43,197,-99,-100,]),'EQUALA':([60,78,148,],[-54,105,-53,]),'$end':([2,33,76,],[0,-1,-30,]),'FUNCTION':([5,6,7,9,12,23,80,83,115,198,],[-4,-4,10,-3,10,-5,-7,-105,-104,-33,]),'STRING':([10,34,37,84,110,189,],[14,14,14,14,14,14,]),'CTEINT':([25,72,73,75,77,79,89,90,95,96,97,105,120,122,123,124,126,127,129,140,141,142,143,144,145,146,152,162,164,169,170,],[36,-92,-92,-92,-92,-92,-127,-126,-92,135,-91,-92,-92,-82,-81,-124,-92,-124,-92,-70,-92,-68,-73,-71,-69,-72,-92,-87,-88,-92,-92,]),'DIVIDE':([91,132,133,134,135,136,137,138,167,168,171,191,192,],[127,-98,-123,-97,-94,-95,-96,-101,-89,-90,-93,-99,-100,]),'ELSE':([76,174,],[-30,186,]),'LTHAN':([88,91,92,98,102,121,125,132,133,134,135,136,137,138,161,163,167,168,171,191,192,],[-80,-86,-77,-83,145,-78,-84,-98,-123,-97,-94,-95,-96,-101,-79,-85,-89,-90,-93,-99,-100,]),'LPAREN':([27,50,51,52,57,60,72,73,75,77,79,89,90,95,105,120,122,123,124,126,127,129,138,140,141,142,143,144,145,146,152,162,164,169,170,],[37,71,72,73,75,79,95,95,95,95,95,-127,-126,95,95,95,-82,-81,-124,95,-124,95,169,-70,95,-68,-73,-71,-69,-72,95,-87,-88,95,95,]),'VAR':([5,6,8,23,32,38,40,68,80,82,112,114,181,183,201,],[-6,-6,13,-5,-23,49,-23,-22,-7,-39,-39,157,-38,-24,-40,]),'CTECHAR':([72,73,75,77,79,89,90,95,96,97,105,120,122,123,124,126,127,129,140,141,142,143,144,145,146,152,162,164,169,170,],[-92,-92,-92,-92,-92,-127,-126,-92,137,-91,-92,-92,-82,-81,-124,-92,-124,-92,-70,-92,-68,-73,-71,-69,-72,-92,-87,-88,-92,-92,]),'ID':([1,13,14,15,16,17,18,19,26,28,29,30,31,32,39,40,43,44,45,49,53,54,55,56,58,61,62,63,68,71,72,73,75,76,77,79,82,89,90,95,96,97,105,112,113,118,120,122,123,124,126,127,129,140,141,142,143,144,145,146,152,154,155,157,160,162,164,165,169,170,172,174,175,176,179,181,183,187,193,197,201,],[3,24,-19,27,-19,-19,-19,-19,-15,-13,-16,-17,-14,-21,60,-21,24,-18,66,70,-51,60,-50,-47,-49,-46,-48,-20,-22,86,-92,-92,-92,-30,-92,-92,-37,-127,-126,-92,138,-91,-92,-37,60,70,-92,-82,-81,-124,-92,-124,-92,-70,-92,-68,-73,-71,-69,-72,-92,-36,60,182,-122,-87,-88,-55,-92,-92,-113,-76,-52,-114,188,-38,-24,-74,-75,182,-40,]),'IF':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,154,155,160,165,172,174,175,176,181,183,187,193,201,],[-21,57,-21,-51,57,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,57,-36,57,-122,-55,-113,-76,-52,-114,-38,-24,-74,-75,-40,]),'CHAR':([10,34,37,84,110,189,],[18,18,18,18,18,18,]),'LBRACE':([20,67,139,147,186,],[32,82,32,32,32,]),'INT':([10,34,37,84,110,189,],[16,16,16,16,16,16,]),'CTEBOOL':([72,73,75,77,79,89,90,95,96,97,105,120,122,123,124,126,127,129,140,141,142,143,144,145,146,152,162,164,169,170,],[-92,-92,-92,-92,-92,-127,-126,-92,134,-91,-92,-92,-82,-81,-124,-92,-124,-92,-70,-92,-68,-73,-71,-69,-72,-92,-87,-88,-92,-92,]),'FLOAT':([10,34,37,84,110,189,],[17,17,17,17,17,17,]),'BOOL':([10,34,37,84,110,189,],[19,19,19,19,19,19,]),'RBRACKET':([36,88,91,92,98,104,121,125,132,133,134,135,136,137,138,161,163,167,168,171,191,192,],[44,-80,-86,-77,-83,148,-78,-84,-98,-123,-97,-94,-95,-96,-101,-79,-85,-89,-90,-93,-99,-100,]),'MAIN':([5,6,7,9,11,12,21,23,80,83,115,198,],[-4,-4,-103,-3,20,-103,-102,-5,-7,-105,-104,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ambAuxTipo1':([14,16,17,18,19,],[26,28,29,30,31,]),'addParameters':([66,],[81,]),'vars':([5,6,],[6,6,]),'idVarsFuncion':([157,197,],[180,200,]),'addTypeGlobalFuncion':([195,],[199,]),'auxVar1':([13,],[23,]),'ambAuxArgumentos1':([109,],[151,]),'ambAuxEscritura1':([94,],[130,]),'createVariableDir':([5,6,],[8,8,]),'auxVarcte':([138,],[171,]),'ambIdVars':([35,],[42,]),'termino':([72,73,75,77,79,95,105,120,129,141,152,169,170,],[88,88,88,88,88,88,88,88,88,88,88,88,88,]),'varcte':([96,],[133,]),'cicloVarsMain':([32,40,],[39,63,]),'argumentos':([79,],[106,]),'bloque':([20,139,147,186,],[33,172,174,193,]),'paso3_resta':([89,],[122,]),'addTypeGlobal':([41,],[64,]),'addProcDirectoryFunc':([83,],[115,]),'ambAuxParametros':([81,],[111,]),'createVariableDirMain':([32,40,],[38,38,]),'addVariableDir':([24,],[35,]),'ciclo':([39,54,113,155,],[53,53,53,53,]),'tipo':([10,34,37,84,110,189,],[15,41,45,116,45,195,]),'cicloExpresion':([73,75,],[100,103,]),'varsFuncion':([82,112,],[112,112,]),'estatuto':([39,54,113,155,],[54,54,155,155,]),'auxFunction':([37,],[46,]),'auxLlamada':([79,],[107,]),'auxParametros':([37,110,],[47,153,]),'llamada':([39,54,113,155,],[55,55,55,55,]),'condicion':([39,54,113,155,],[56,56,56,56,]),'auxVar1Funcion':([157,],[181,]),'auxVar1Main':([49,],[68,]),'factor':([72,73,75,77,79,95,105,120,126,129,141,152,169,170,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'addVariableDirFuncion':([182,],[190,]),'createVariableDirFuncion':([82,112,],[114,114,]),'auxArgumentos1':([79,152,],[108,177,]),'lectura':([39,54,113,155,],[58,58,58,58,]),'funcion':([7,12,],[12,12,]),'auxEscritura2':([72,129,],[94,94,]),'cicloBloqueFuncion':([113,155,],[156,178,]),'auxEscritura1':([72,129,],[93,166,]),'cicloVars':([5,6,],[7,9,]),'ambIdVarsMain':([85,],[117,]),'idVarsMain':([49,118,],[69,159,]),'auxExpresion':([102,],[141,]),'auxTermino':([91,],[126,]),'cicloBloque':([39,54,],[59,74,]),'paso1':([133,],[168,]),'auxFactor':([72,73,75,77,79,95,105,120,126,129,141,152,169,170,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'auxExp':([72,73,75,77,79,88,95,105,120,126,129,141,152,169,170,],[97,97,97,97,97,120,97,97,97,97,97,97,97,97,97,]),'varsMain':([32,40,],[40,40,]),'cicloTermino':([72,73,75,77,79,95,105,120,126,129,141,152,169,170,],[98,98,98,98,98,98,98,98,163,98,98,98,98,98,]),'auxAsignacion1':([60,],[78,]),'expresion':([73,75,],[101,101,]),'paso3_suma':([90,],[123,]),'idVars':([13,43,],[22,65,]),'asignacion':([39,54,113,155,],[61,61,61,61,]),'bloqueFuncion':([67,],[83,]),'addProcedureDir':([3,],[4,]),'paso2_mult':([124,127,],[162,164,]),'cicloExp':([72,73,75,77,79,95,105,120,129,141,152,169,170,],[92,92,92,92,92,92,92,161,92,92,92,92,92,]),'cicloVarsFuncion':([82,112,],[113,154,]),'ambExp':([88,],[121,]),'cicloFuncion':([7,12,],[11,21,]),'programa':([0,],[2,]),'exp':([72,73,75,77,79,95,105,129,141,152,169,170,],[99,102,102,104,109,131,149,99,173,109,184,185,]),'auxCondicion':([174,],[187,]),'parametros':([37,],[48,]),'addVariableDirMain':([70,],[85,]),'ambIdVarsFuncion':([190,],[196,]),'ambCicloTermino':([91,],[125,]),'addTypeGlobalMain':([116,],[158,]),'escritura':([39,54,113,155,],[62,62,62,62,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',8,'p_programa','MyLittleDucky.py',57),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',61),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',69),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',70),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',73),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',76),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',81),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',84),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',93),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',96),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',106),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',107),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',110),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',111),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',112),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',113),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',114),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',119),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',120),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',123),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',124),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',127),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',130),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',135),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',138),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',148),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',151),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',161),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',162),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',165),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',168),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',169),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN ID SEMICOLON RBRACE','bloqueFuncion',7,'p_bloqueFuncion','MyLittleDucky.py',172),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',175),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',176),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',179),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',180),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',183),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',186),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',191),
  ('addTypeGlobalFuncion -> <empty>','addTypeGlobalFuncion',0,'p_addTypeGlobalFuncion','MyLittleDucky.py',194),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',204),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',207),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',218),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',219),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',222),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',223),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',224),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',225),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',226),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',227),
  ('asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',230),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',233),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',234),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',237),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',240),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',243),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',244),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',247),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',248),
  ('cicloExpresion -> expresion','cicloExpresion',1,'p_cicloExpresion','MyLittleDucky.py',250),
  ('cicloExpresion -> <empty>','cicloExpresion',0,'p_cicloExpresion','MyLittleDucky.py',251),
  ('auxCicloExpresion -> AND','auxCicloExpresion',1,'p_auxCicloExpresion','MyLittleDucky.py',254),
  ('auxCicloExpresion -> OR','auxCicloExpresion',1,'p_auxCicloExpresion','MyLittleDucky.py',255),
  ('auxCicloExpresion -> <empty>','auxCicloExpresion',0,'p_auxCicloExpresion','MyLittleDucky.py',256),
  ('expresion -> exp auxExpresion exp','expresion',3,'p_expresion','MyLittleDucky.py',259),
  ('expresion -> <empty>','expresion',0,'p_expresion','MyLittleDucky.py',260),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',263),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',264),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',265),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',266),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',267),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',268),
  ('condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion','condicion',6,'p_condicion','MyLittleDucky.py',271),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',274),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',275),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',278),
  ('cicloExp -> termino ambExp','cicloExp',2,'p_cicloExp','MyLittleDucky.py',281),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',284),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',285),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',288),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',289),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',292),
  ('cicloTermino -> factor ambCicloTermino','cicloTermino',2,'p_cicloTermino','MyLittleDucky.py',295),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',298),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',299),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',302),
  ('auxTermino -> DIVIDE paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',303),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','MyLittleDucky.py',306),
  ('factor -> auxFactor varcte paso1','factor',3,'p_factor','MyLittleDucky.py',307),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',310),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',311),
  ('varcte -> ID auxVarcte','varcte',2,'p_varcte','MyLittleDucky.py',314),
  ('varcte -> CTEINT','varcte',1,'p_varcte','MyLittleDucky.py',315),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','MyLittleDucky.py',316),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','MyLittleDucky.py',317),
  ('varcte -> CTEBOOL','varcte',1,'p_varcte','MyLittleDucky.py',318),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','MyLittleDucky.py',319),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',322),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',323),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',324),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',327),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',328),
  ('funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc','funcion',8,'p_funcion','MyLittleDucky.py',331),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',334),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',341),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',342),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',345),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',348),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',351),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',362),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',363),
  ('ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque','ciclo',5,'p_ciclo','MyLittleDucky.py',366),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',369),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',372),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',373),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',376),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',377),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',380),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',383),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',384),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',387),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',393),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',397),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',401),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',405),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',409),
]
