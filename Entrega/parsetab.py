
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1BEC9C8F38DB521CE34C56364AF0DE84'
    
_lr_action_items = {'NOTEQUAL':([88,92,93,94,105,116,119,123,124,125,126,127,128,129,131,155,157,164,165,166,167,168,170,190,192,195,196,197,198,199,200,202,219,220,221,222,223,226,228,253,261,263,268,269,271,274,],[-136,-83,-137,-77,140,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-107,-139,-161,-122,]),'MULTI':([93,119,123,124,125,126,127,128,129,131,164,165,166,167,168,170,195,196,197,198,199,200,202,219,220,221,222,223,226,228,253,261,263,268,269,271,274,],[-137,156,-131,-131,-90,-131,-99,-131,-131,-131,-168,-166,-165,-164,-105,-167,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-107,-139,-161,-122,]),'GTHAN':([88,92,93,94,105,116,119,123,124,125,126,127,128,129,131,155,157,164,165,166,167,168,170,190,192,195,196,197,198,199,200,202,219,220,221,222,223,226,228,253,261,263,268,269,271,274,],[-136,-83,-137,-77,142,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-107,-139,-161,-122,]),'RETURN':([60,62,66,67,79,83,108,109,148,149,160,183,184,186,206,215,229,232,243,246,256,258,260,],[-51,-49,-48,-50,-32,-39,-39,-156,-38,-37,-55,-37,216,-40,-76,-36,-152,-149,-121,-74,-52,-75,-42,]),'EQUAL':([88,92,93,94,105,116,119,123,124,125,126,127,128,129,131,155,157,164,165,166,167,168,170,190,192,195,196,197,198,199,200,202,219,220,221,222,223,226,228,253,261,263,268,269,271,274,],[-136,-83,-137,-77,143,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-107,-139,-161,-122,]),'GETHAN':([88,92,93,94,105,116,119,123,124,125,126,127,128,129,131,155,157,164,165,166,167,168,170,190,192,195,196,197,198,199,200,202,219,220,221,222,223,226,228,253,261,263,268,269,271,274,],[-136,-83,-137,-77,144,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-107,-139,-161,-122,]),'LBRACKET':([16,17,19,20,21,64,80,101,129,168,200,],[27,27,27,27,27,-131,-105,134,-131,-105,225,]),'WHILE':([39,47,48,60,61,62,66,67,68,73,79,83,108,109,148,149,160,183,186,189,206,229,232,243,246,256,258,260,],[-23,59,-23,-51,59,-49,-48,-50,-22,-24,-32,-39,-39,-156,-38,59,-55,59,-40,-26,-76,-152,-149,-121,-74,-52,-75,-42,]),'PROGRAM':([0,],[1,]),'PRINT':([39,47,48,60,61,62,66,67,68,73,79,83,108,109,148,149,160,183,186,189,206,229,232,243,246,256,258,260,],[-23,58,-23,-51,58,-49,-48,-50,-22,-24,-32,-39,-39,-156,-38,58,-55,58,-40,-26,-76,-152,-149,-121,-74,-52,-75,-42,]),'CTESTRING':([76,81,89,90,91,97,98,100,117,118,122,134,136,138,140,142,143,144,145,146,154,156,158,159,161,172,173,175,176,177,178,179,180,181,182,191,193,204,216,224,225,241,255,262,273,],[87,-92,-135,-91,-134,-138,123,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,87,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-138,-92,-92,]),'LETHAN':([88,92,93,94,105,116,119,123,124,125,126,127,128,129,131,155,157,164,165,166,167,168,170,190,192,195,196,197,198,199,200,202,219,220,221,222,223,226,228,253,261,263,268,269,271,274,],[-136,-83,-137,-77,146,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-107,-139,-161,-122,]),'MINUS':([76,81,88,89,91,92,93,97,100,116,117,118,119,122,123,124,125,126,127,128,129,131,134,136,138,140,142,143,144,145,146,154,156,157,158,159,161,164,165,166,167,168,170,172,173,175,176,177,178,179,180,181,182,191,192,193,195,196,197,198,199,200,202,204,216,219,220,221,222,223,224,225,226,228,241,253,255,261,262,263,268,269,271,273,274,],[89,89,-136,-135,-134,-83,-137,-138,89,89,-82,-81,-86,89,-131,-131,-90,-131,-99,-131,-131,-131,-140,-142,-143,-175,-170,-174,-172,-171,-173,89,-132,-84,89,-133,89,-168,-166,-165,-164,-105,-167,-176,89,89,89,89,89,89,89,89,89,-87,-85,-88,-139,-104,-102,-101,-100,-108,-103,89,89,-89,-98,-96,-95,-94,89,-140,-93,-97,89,-106,-138,-141,89,-162,-107,-139,-161,89,-122,]),'RBRACE':([39,47,48,60,61,62,63,66,67,68,73,78,79,160,189,206,229,232,243,246,250,256,258,],[-23,-34,-23,-51,-34,-49,79,-48,-50,-22,-24,-33,-32,-55,-26,-76,-152,-149,-121,-74,259,-52,-75,]),'RPAREN':([45,54,55,56,71,82,87,88,92,93,94,95,96,99,102,103,104,105,107,115,116,119,121,123,124,125,126,127,128,129,131,132,135,137,139,141,147,155,157,162,163,164,165,166,167,168,170,190,192,194,195,196,197,198,199,200,202,207,208,209,210,211,212,213,214,219,220,221,222,223,226,228,234,235,240,248,249,253,255,261,262,263,264,265,266,267,268,269,270,271,272,274,275,],[-115,72,-116,-114,-118,-120,-131,-136,-83,-137,-77,120,-153,-59,-147,-64,-145,-72,-117,-60,-80,-86,-58,-131,-131,-90,-131,-99,-131,-131,-131,171,174,-73,-61,-65,-119,-78,-84,-56,195,-168,-166,-165,-164,-105,-167,-79,-85,-57,-139,-104,-102,-101,-100,-108,-103,-144,-144,-68,-66,-71,-69,-67,-70,-89,-98,-96,-95,-94,-93,-97,-64,-64,253,-62,-63,-106,-138,-141,-124,-162,-123,269,-125,-160,-107,-139,-129,-161,-127,-122,-128,]),'SEMICOLON':([3,4,16,17,19,20,21,26,28,29,31,32,33,41,44,50,52,70,88,92,93,94,105,112,116,119,120,123,124,125,126,127,128,129,131,141,152,155,157,164,165,166,167,168,170,190,192,195,196,197,198,199,200,202,209,210,211,212,213,214,219,220,221,222,223,226,228,230,236,237,244,251,253,261,263,268,269,271,274,],[-2,5,-21,-21,-21,-21,-21,-16,-19,-15,-17,-13,-14,-8,-20,69,-100,-18,-136,-83,-137,-77,-72,-27,-80,-86,160,-131,-131,-90,-131,-99,-131,-131,-131,-65,189,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-68,-66,-71,-69,-67,-70,-89,-98,-96,-95,-94,-93,-97,-146,250,-43,256,260,-106,-141,-162,-107,-139,-161,-122,]),'CTEFLOAT':([76,81,89,90,91,97,98,100,117,118,122,134,136,138,140,142,143,144,145,146,154,156,158,159,161,172,173,175,176,177,178,179,180,181,182,191,193,204,216,224,225,241,255,262,273,],[-92,-92,-135,-91,-134,-138,126,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,-92,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-138,-92,-92,]),'CALL':([76,81,89,90,91,97,98,100,117,118,122,134,136,138,140,142,143,144,145,146,154,156,158,159,161,172,173,175,176,177,178,179,180,181,182,191,193,204,216,224,225,241,255,262,273,],[-92,-92,-135,-91,-134,-138,130,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,-92,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-138,-92,-92,]),'PLUS':([76,81,88,89,91,92,93,97,100,116,117,118,119,122,123,124,125,126,127,128,129,131,134,136,138,140,142,143,144,145,146,154,156,157,158,159,161,164,165,166,167,168,170,172,173,175,176,177,178,179,180,181,182,191,192,193,195,196,197,198,199,200,202,204,216,219,220,221,222,223,224,225,226,228,241,253,255,261,262,263,268,269,271,273,274,],[91,91,-136,-135,-134,-83,-137,-138,91,91,-82,-81,-86,91,-131,-131,-90,-131,-99,-131,-131,-131,-140,-142,-143,-175,-170,-174,-172,-171,-173,91,-132,-84,91,-133,91,-168,-166,-165,-164,-105,-167,-176,91,91,91,91,91,91,91,91,91,-87,-85,-88,-139,-104,-102,-101,-100,-108,-103,91,91,-89,-98,-96,-95,-94,91,-140,-93,-97,91,-106,-138,-141,91,-162,-107,-139,-161,91,-122,]),'COLON':([23,25,36,42,51,74,75,86,113,130,153,185,187,218,238,252,],[35,-10,-12,-9,-11,85,-29,-31,-28,169,-30,217,-45,-47,-44,-46,]),'COMMA':([25,36,71,75,82,86,87,88,92,93,94,96,99,115,116,119,121,123,124,125,126,127,128,129,131,155,157,164,165,166,167,168,170,187,190,192,195,196,197,198,199,200,202,218,219,220,221,222,223,226,228,253,261,263,267,268,269,270,271,274,],[-10,43,-118,-29,106,114,-131,-136,-83,-137,-77,-153,-59,-60,-80,-86,161,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-45,-79,-85,-139,-104,-102,-101,-100,-108,-103,239,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-160,-107,-139,273,-161,-122,]),'EQUALA':([64,80,101,133,231,245,257,],[-131,-105,-54,172,-141,-162,-53,]),'$end':([2,40,49,79,],[0,-163,-1,-32,]),'FUNCTION':([5,6,7,8,10,13,24,69,84,111,151,188,259,],[-154,-4,11,-4,11,-3,-5,-7,-112,-157,-158,-111,-35,]),'STRING':([11,35,45,85,106,217,],[17,17,17,17,17,17,]),'CTEINT':([27,76,81,89,90,91,97,98,100,117,118,122,134,136,138,140,142,143,144,145,146,154,156,158,159,161,172,173,175,176,177,178,179,180,181,182,191,193,204,216,224,225,241,255,262,273,],[37,-92,-92,-135,-91,-134,-138,128,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,-92,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-138,-92,-92,]),'DIVIDE':([93,119,123,124,125,126,127,128,129,131,164,165,166,167,168,170,195,196,197,198,199,200,202,219,220,221,222,223,226,228,253,261,263,268,269,271,274,],[-137,159,-131,-131,-90,-131,-99,-131,-131,-131,-168,-166,-165,-164,-105,-167,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-107,-139,-161,-122,]),'ELSE':([79,206,],[-32,233,]),'LTHAN':([88,92,93,94,105,116,119,123,124,125,126,127,128,129,131,155,157,164,165,166,167,168,170,190,192,195,196,197,198,199,200,202,219,220,221,222,223,226,228,253,261,263,268,269,271,274,],[-136,-83,-137,-77,145,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-107,-139,-161,-122,]),'LPAREN':([30,38,58,59,65,76,77,81,89,91,97,100,117,118,122,129,134,136,138,140,142,143,144,145,146,154,156,158,159,161,168,172,173,175,176,177,178,179,180,181,182,191,193,200,201,204,216,224,225,227,241,242,255,262,273,],[-113,45,76,-150,81,97,100,97,-135,-134,-138,97,-82,-81,97,-131,-140,-142,-143,-175,-170,-174,-172,-171,-173,97,-132,97,-133,97,-105,-176,97,97,97,97,97,97,97,97,97,-87,-88,224,-159,97,97,97,-140,-169,97,255,-138,97,97,]),'VAR':([5,6,8,9,24,39,46,48,69,73,83,108,110,186,189,260,],[-154,-6,-6,14,-5,-25,57,-25,-7,-24,-41,-41,150,-40,-26,-42,]),'CTECHAR':([76,81,89,90,91,97,98,100,117,118,122,134,136,138,140,142,143,144,145,146,154,156,158,159,161,172,173,175,176,177,178,179,180,181,182,191,193,204,216,224,225,241,255,262,273,],[-92,-92,-135,-91,-134,-138,124,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,-92,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-138,-92,-92,]),'ID':([1,14,16,17,18,19,20,21,26,28,29,31,32,33,39,43,44,47,48,52,53,57,60,61,62,66,67,68,70,73,76,79,81,83,89,90,91,97,98,100,108,109,114,117,118,122,134,136,138,140,142,143,144,145,146,148,149,150,154,156,158,159,160,161,169,172,173,175,176,177,178,179,180,181,182,183,186,189,191,193,204,206,216,224,225,229,232,239,241,243,246,255,256,258,260,262,273,],[3,25,-21,-21,30,-21,-21,-21,-16,-19,-15,-17,-13,-14,-23,25,-20,64,-23,-100,71,75,-51,64,-49,-48,-50,-22,-18,-24,-92,-32,-92,-39,-135,-91,-134,-138,129,-92,-39,-156,75,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-38,64,187,-92,-132,-92,-133,-55,-92,201,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,64,-40,-26,-87,-88,-92,-76,-92,-92,-140,-152,-149,187,-92,-121,-74,-138,-52,-75,-42,-92,-92,]),'IF':([39,47,48,60,61,62,66,67,68,73,79,83,108,109,148,149,160,183,186,189,206,229,232,243,246,256,258,260,],[-23,65,-23,-51,65,-49,-48,-50,-22,-24,-32,-39,-39,-156,-38,65,-55,65,-40,-26,-76,-152,-149,-121,-74,-52,-75,-42,]),'AND':([88,92,93,94,103,104,105,116,119,123,124,125,126,127,128,129,131,139,141,155,157,164,165,166,167,168,170,190,192,195,196,197,198,199,200,202,207,208,209,210,211,212,213,214,219,220,221,222,223,226,228,234,235,253,261,263,268,269,271,274,],[-136,-83,-137,-77,136,-145,-72,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-61,-65,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-144,-144,-68,-66,-71,-69,-67,-70,-89,-98,-96,-95,-94,-93,-97,136,136,-106,-141,-162,-107,-139,-161,-122,]),'CHAR':([11,35,45,85,106,217,],[19,19,19,19,19,19,]),'LBRACE':([22,34,72,171,174,203,233,247,],[-155,39,83,-151,39,39,-148,39,]),'INT':([11,35,45,85,106,217,],[20,20,20,20,20,20,]),'CTEBOOL':([76,81,89,90,91,97,98,100,117,118,122,134,136,138,140,142,143,144,145,146,154,156,158,159,161,172,173,175,176,177,178,179,180,181,182,191,193,204,216,224,225,241,255,262,273,],[-92,-92,-135,-91,-134,-138,131,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,-92,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-138,-92,-92,]),'FLOAT':([11,35,45,85,106,217,],[16,16,16,16,16,16,]),'BOOL':([11,35,45,85,106,217,],[21,21,21,21,21,21,]),'RBRACKET':([37,88,92,93,94,116,119,123,124,125,126,127,128,129,131,155,157,164,165,166,167,168,170,190,192,195,196,197,198,199,200,202,205,219,220,221,222,223,226,228,253,254,261,263,268,269,271,274,],[44,-136,-83,-137,-77,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,231,-89,-98,-96,-95,-94,-93,-97,-106,261,-141,-162,-107,-139,-161,-122,]),'MAIN':([5,6,7,8,10,12,13,15,24,69,84,111,151,188,259,],[-154,-4,-110,-4,-110,22,-3,-109,-5,-7,-112,-157,-158,-111,-35,]),'OR':([88,92,93,94,103,104,105,116,119,123,124,125,126,127,128,129,131,139,141,155,157,164,165,166,167,168,170,190,192,195,196,197,198,199,200,202,207,208,209,210,211,212,213,214,219,220,221,222,223,226,228,234,235,253,261,263,268,269,271,274,],[-136,-83,-137,-77,138,-145,-72,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-61,-65,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-144,-144,-68,-66,-71,-69,-67,-70,-89,-98,-96,-95,-94,-93,-97,138,138,-106,-141,-162,-107,-139,-161,-122,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([6,8,],[8,8,]),'menor':([145,],[181,]),'bloque':([34,174,203,247,],[40,206,229,258,]),'mayor':([142,],[178,]),'mayorIg':([144,],[180,]),'ambCicloTermino':([119,],[157,]),'auxLlamada':([262,],[265,]),'igual':([143,],[179,]),'factor':([76,81,100,122,154,158,161,173,175,176,177,178,179,180,181,182,204,216,224,241,262,273,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'paso6b':([134,225,],[173,241,]),'assignDirectionCteInt':([52,199,],[70,223,]),'initDicFunc':([30,],[38,]),'idVarsMain':([57,114,],[74,153,]),'paso2_div':([159,],[193,]),'addTypeMain':([112,],[152,]),'cteLlamada':([227,],[242,]),'cicloBloque':([47,61,],[63,78,]),'cteChar':([165,],[197,]),'assignDirectionCteBool':([202,],[228,]),'cicloTermino':([76,81,100,122,154,158,161,173,175,176,177,178,179,180,181,182,204,216,224,241,262,273,],[92,92,92,92,92,192,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'expresion':([81,100,175,176,216,],[104,104,104,104,236,]),'bloqueFuncion':([72,],[84,]),'assignDirectionCteChar':([197,],[221,]),'parametros':([45,],[56,]),'ambExp':([116,],[155,]),'addVariableDirMain':([75,],[86,]),'paso5':([93,],[119,]),'auxVar1':([14,],[24,]),'expAndOr':([81,100,],[102,132,]),'createVariableDir':([6,8,],[9,9,]),'assignDirectionCteString':([196,],[220,]),'argumentos':([262,],[264,]),'ciclo':([47,61,149,183,],[60,60,60,60,]),'tipo':([11,35,45,85,106,217,],[18,41,53,112,53,237,]),'asig':([172,],[204,]),'llamada':([98,],[127,]),'condicion':([47,61,149,183,],[62,62,62,62,]),'noEsArr':([16,17,19,20,21,],[28,28,28,28,28,]),'cicloBloqueFuncion':([149,183,],[184,215,]),'auxArgumentos1':([262,273,],[266,275,]),'cicloExp':([76,81,100,122,154,161,173,175,176,177,178,179,180,181,182,204,216,224,241,262,273,],[94,94,94,94,190,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'addProcDirectoryFunc':([84,],[111,]),'auxEscritura1':([76,161,],[95,194,]),'auxEscritura2':([76,161,],[96,96,]),'ambIdVarsMain':([86,],[113,]),'paso11':([230,],[244,]),'paso8_or':([138,],[176,]),'paso16':([171,],[203,]),'auxExp':([76,81,100,116,122,154,158,161,173,175,176,177,178,179,180,181,182,204,216,224,241,262,273,],[90,90,90,154,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'paso7b':([231,261,],[245,263,]),'cicloExpresion':([81,100,175,176,],[103,103,207,208,]),'auxCicloExpresion':([103,234,235,],[137,248,249,]),'auxAsignacion1':([101,],[133,]),'cicloVarsFuncion':([83,108,],[109,148,]),'escritura':([47,61,149,183,],[67,67,67,67,]),'paso19':([5,],[6,]),'addParameters':([71,],[82,]),'addVariableDirFuncion':([187,],[218,]),'auxCondicion':([206,],[232,]),'termino':([76,81,100,122,154,161,173,175,176,177,178,179,180,181,182,204,216,224,241,262,273,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'paso3_resta':([89,],[117,]),'paso12':([102,],[135,]),'paso13':([233,],[247,]),'paso10':([104,],[139,]),'createVariableDirMain':([39,48,],[46,46,]),'addVariableDir':([25,],[36,]),'paso17':([229,],[243,]),'paso14':([232,],[246,]),'paso15':([59,],[77,]),'paso18':([96,],[121,]),'estatuto':([47,61,149,183,],[61,61,183,183,]),'ambAuxEscritura1':([121,],[162,]),'diferente':([140,],[177,]),'cteString':([164,],[196,]),'addTypeFuncion':([237,],[251,]),'cicloVars':([6,8,],[7,13,]),'paso9':([207,208,],[234,235,]),'paso1':([64,87,123,124,126,128,129,131,],[80,115,164,165,166,167,168,170,]),'paso4':([88,],[116,]),'varsMain':([39,48,],[48,48,]),'paso6':([97,255,],[122,262,]),'paso7':([195,269,],[219,271,]),'esArr':([44,],[52,]),'asignacion':([47,61,149,183,],[66,66,66,66,]),'cteBool':([170,],[202,]),'addProcedureDir':([3,],[4,]),'cteInt':([167,],[199,]),'paso21':([109,],[149,]),'ambAuxTipo1':([16,17,19,20,21,],[26,29,31,32,33,]),'menorIg':([146,],[182,]),'auxVar1Main':([57,],[73,]),'cteFloat':([166,],[198,]),'auxVarcte':([200,],[226,]),'ambIdVars':([36,],[42,]),'paso25':([267,],[270,]),'cicloVarsMain':([39,48,],[47,68,]),'addTypeGlobal':([41,],[50,]),'auxExpresion':([105,],[141,]),'varsFuncion':([83,108,],[108,108,]),'auxFunction':([45,],[54,]),'auxParametros':([45,106,],[55,147,]),'idVarsFuncion':([150,239,],[185,252,]),'auxVar1Funcion':([150,],[186,]),'createVariableDirFuncion':([83,108,],[110,110,]),'addType':([80,168,],[101,200,]),'funcion':([7,10,],[10,10,]),'ambAuxArgumentos1':([270,],[272,]),'pasoFinal':([40,],[49,]),'auxTermino':([119,],[158,]),'auxFactor':([76,81,100,122,154,158,161,173,175,176,177,178,179,180,181,182,204,216,224,241,262,273,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'varcte':([98,],[125,]),'paso3_suma':([91,],[118,]),'idVars':([14,43,],[23,51,]),'paso23':([151,],[188,]),'paso22':([111,],[151,]),'paso8_and':([136,],[175,]),'paso20':([22,],[34,]),'paso27':([245,263,],[257,268,]),'paso26':([271,],[274,]),'paso2_mult':([156,],[191,]),'paso24':([201,],[227,]),'cicloFuncion':([7,10,],[12,15,]),'programa':([0,],[2,]),'exp':([76,81,100,122,161,173,175,176,177,178,179,180,181,182,204,216,224,241,262,273,],[99,105,105,163,99,205,105,105,209,210,211,212,213,214,230,105,240,254,267,267,]),'ambAuxParametros':([82,],[107,]),'ambIdVarsFuncion':([218,],[238,]),'assignDirectionCteFloat':([198,],[222,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal','programa',11,'p_programa','MyLittleDucky.py',582),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',586),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',596),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',597),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',600),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',603),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',608),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',611),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',694),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',697),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',709),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',710),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',713),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',714),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',715),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',716),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',717),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt','ambAuxTipo1',5,'p_ambAuxTipo1','MyLittleDucky.py',722),
  ('ambAuxTipo1 -> noEsArr','ambAuxTipo1',1,'p_ambAuxTipo1','MyLittleDucky.py',723),
  ('esArr -> <empty>','esArr',0,'p_esArr','MyLittleDucky.py',726),
  ('noEsArr -> <empty>','noEsArr',0,'p_noEsArr','MyLittleDucky.py',733),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',738),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',739),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',742),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',745),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',750),
  ('addTypeMain -> <empty>','addTypeMain',0,'p_addTypeMain','MyLittleDucky.py',753),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',835),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',838),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',849),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',850),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',853),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',856),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',857),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE','bloqueFuncion',8,'p_bloqueFuncion','MyLittleDucky.py',860),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',863),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',864),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',867),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',868),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',871),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',874),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',879),
  ('addTypeFuncion -> <empty>','addTypeFuncion',0,'p_addTypeFuncion','MyLittleDucky.py',882),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',965),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',968),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',984),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',985),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',988),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',989),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',990),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',991),
  ('asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON','asignacion',9,'p_asignacion','MyLittleDucky.py',996),
  ('auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b paso27','auxAsignacion1',6,'p_auxAsignacion1','MyLittleDucky.py',1000),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',1001),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',1004),
  ('auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1','auxEscritura1',3,'p_auxEscritura1','MyLittleDucky.py',1008),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',1011),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',1012),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',1015),
  ('auxEscritura2 -> CTESTRING paso1','auxEscritura2',2,'p_auxEscritura2','MyLittleDucky.py',1016),
  ('cicloExpresion -> expresion paso10','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',1019),
  ('auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',1023),
  ('auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',1024),
  ('auxCicloExpresion -> <empty>','auxCicloExpresion',0,'p_auxCicloExpresion','MyLittleDucky.py',1025),
  ('expresion -> exp auxExpresion','expresion',2,'p_expresion','MyLittleDucky.py',1028),
  ('auxExpresion -> GTHAN mayor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1032),
  ('auxExpresion -> LTHAN menor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1033),
  ('auxExpresion -> NOTEQUAL diferente exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1034),
  ('auxExpresion -> GETHAN mayorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1035),
  ('auxExpresion -> LETHAN menorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1036),
  ('auxExpresion -> EQUAL igual exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1037),
  ('auxExpresion -> <empty>','auxExpresion',0,'p_auxExpresion','MyLittleDucky.py',1038),
  ('expAndOr -> cicloExpresion auxCicloExpresion','expAndOr',2,'p_expAndOr','MyLittleDucky.py',1041),
  ('condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14','condicion',8,'p_condicion','MyLittleDucky.py',1044),
  ('auxCondicion -> ELSE paso13 bloque','auxCondicion',3,'p_auxCondicion','MyLittleDucky.py',1048),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',1049),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',1052),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',1055),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',1058),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',1059),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',1062),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',1063),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',1066),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',1069),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',1072),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',1073),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',1076),
  ('auxTermino -> DIVIDE paso2_div','auxTermino',2,'p_auxTermino','MyLittleDucky.py',1077),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',1080),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',1081),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',1084),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',1085),
  ('varcte -> ID paso1 addType auxVarcte','varcte',4,'p_varcte','MyLittleDucky.py',1088),
  ('varcte -> CTEINT paso1 cteInt assignDirectionCteInt','varcte',4,'p_varcte','MyLittleDucky.py',1089),
  ('varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat','varcte',4,'p_varcte','MyLittleDucky.py',1090),
  ('varcte -> CTECHAR paso1 cteChar assignDirectionCteChar','varcte',4,'p_varcte','MyLittleDucky.py',1091),
  ('varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool','varcte',4,'p_varcte','MyLittleDucky.py',1092),
  ('varcte -> CTESTRING paso1 cteString assignDirectionCteString','varcte',4,'p_varcte','MyLittleDucky.py',1093),
  ('varcte -> llamada','varcte',1,'p_varcte','MyLittleDucky.py',1094),
  ('assignDirectionCteInt -> <empty>','assignDirectionCteInt',0,'p_assignDirectionCteInt','MyLittleDucky.py',1099),
  ('assignDirectionCteFloat -> <empty>','assignDirectionCteFloat',0,'p_assignDirectionCteFloat','MyLittleDucky.py',1110),
  ('assignDirectionCteChar -> <empty>','assignDirectionCteChar',0,'p_assignDirectionCteChar','MyLittleDucky.py',1118),
  ('assignDirectionCteBool -> <empty>','assignDirectionCteBool',0,'p_assignDirectionCteBool','MyLittleDucky.py',1126),
  ('assignDirectionCteString -> <empty>','assignDirectionCteString',0,'p_assignDirectionCteString','MyLittleDucky.py',1135),
  ('addType -> <empty>','addType',0,'p_addType','MyLittleDucky.py',1157),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',1184),
  ('auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27','auxVarcte',6,'p_auxVarcte','MyLittleDucky.py',1185),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',1186),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',1189),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',1190),
  ('funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23','funcion',11,'p_funcion','MyLittleDucky.py',1193),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',1196),
  ('initDicFunc -> <empty>','initDicFunc',0,'p_initDicFunc','MyLittleDucky.py',1224),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',1230),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',1231),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',1234),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',1237),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',1240),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',1276),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',1277),
  ('ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17','ciclo',8,'p_ciclo','MyLittleDucky.py',1280),
  ('llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26','llamada',11,'p_llamada','MyLittleDucky.py',1284),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',1288),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',1289),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',1292),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',1293),
  ('auxArgumentos1 -> exp paso25 ambAuxArgumentos1','auxArgumentos1',3,'p_auxArgumentos1','MyLittleDucky.py',1296),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',1299),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',1300),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',1303),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',1316),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',1324),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',1328),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',1332),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',1336),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',1474),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',1506),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',1543),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',1547),
  ('paso6b -> <empty>','paso6b',0,'p_paso6b','MyLittleDucky.py',1555),
  ('paso7b -> <empty>','paso7b',0,'p_paso7b','MyLittleDucky.py',1561),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',1569),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',1573),
  ('paso9 -> <empty>','paso9',0,'p_paso9','MyLittleDucky.py',1577),
  ('paso10 -> <empty>','paso10',0,'p_paso10','MyLittleDucky.py',1610),
  ('paso11 -> <empty>','paso11',0,'p_paso11','MyLittleDucky.py',1643),
  ('paso12 -> <empty>','paso12',0,'p_paso12','MyLittleDucky.py',1684),
  ('paso13 -> <empty>','paso13',0,'p_paso13','MyLittleDucky.py',1704),
  ('paso14 -> <empty>','paso14',0,'p_paso14','MyLittleDucky.py',1716),
  ('paso15 -> <empty>','paso15',0,'p_paso15','MyLittleDucky.py',1724),
  ('paso16 -> <empty>','paso16',0,'p_paso16','MyLittleDucky.py',1730),
  ('paso17 -> <empty>','paso17',0,'p_paso17','MyLittleDucky.py',1750),
  ('paso18 -> <empty>','paso18',0,'p_paso18','MyLittleDucky.py',1760),
  ('paso19 -> <empty>','paso19',0,'p_paso19','MyLittleDucky.py',1772),
  ('paso20 -> <empty>','paso20',0,'p_paso20','MyLittleDucky.py',1781),
  ('paso21 -> <empty>','paso21',0,'p_paso21','MyLittleDucky.py',1788),
  ('paso22 -> <empty>','paso22',0,'p_paso22','MyLittleDucky.py',1800),
  ('paso23 -> <empty>','paso23',0,'p_paso23','MyLittleDucky.py',1814),
  ('paso24 -> <empty>','paso24',0,'p_paso24','MyLittleDucky.py',1836),
  ('paso25 -> <empty>','paso25',0,'p_paso25','MyLittleDucky.py',1859),
  ('paso26 -> <empty>','paso26',0,'p_paso26','MyLittleDucky.py',1891),
  ('paso27 -> <empty>','paso27',0,'p_paso27','MyLittleDucky.py',1919),
  ('pasoFinal -> <empty>','pasoFinal',0,'p_pasoFinal','MyLittleDucky.py',1948),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',1959),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',1963),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',1968),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',1973),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',1978),
  ('cteLlamada -> <empty>','cteLlamada',0,'p_cteLlamada','MyLittleDucky.py',1982),
  ('mayor -> <empty>','mayor',0,'p_mayor','MyLittleDucky.py',1994),
  ('menor -> <empty>','menor',0,'p_menor','MyLittleDucky.py',1998),
  ('mayorIg -> <empty>','mayorIg',0,'p_mayorIg','MyLittleDucky.py',2002),
  ('menorIg -> <empty>','menorIg',0,'p_menorIg','MyLittleDucky.py',2006),
  ('igual -> <empty>','igual',0,'p_igual','MyLittleDucky.py',2010),
  ('diferente -> <empty>','diferente',0,'p_diferente','MyLittleDucky.py',2014),
  ('asig -> <empty>','asig',0,'p_asig','MyLittleDucky.py',2018),
]
