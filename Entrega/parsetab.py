
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0E449EFCE00098742F028B9A2D070AC4'
    
_lr_action_items = {'NOTEQUAL':([92,94,98,99,101,123,128,129,130,131,132,133,134,135,160,161,162,165,185,186,],[-75,-81,-72,-78,137,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'MULTI':([94,129,130,131,132,133,134,135,161,165,185,186,],[125,-93,-85,-92,-89,-90,-91,-96,-84,-88,-94,-95,]),'GTHAN':([92,94,98,99,101,123,128,129,130,131,132,133,134,135,160,161,162,165,185,186,],[-75,-81,-72,-78,139,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'RETURN':([53,55,56,58,61,62,76,82,111,112,151,152,153,157,158,166,168,169,171,172,175,181,187,195,],[-51,-50,-47,-49,-46,-48,-30,-37,-37,-35,-36,-35,173,-117,-55,-108,-71,-52,-109,-34,-38,-69,-70,-40,]),'READ':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,111,112,151,152,157,158,166,168,169,171,175,177,181,187,195,],[-21,50,-21,-51,50,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,50,-36,50,-117,-55,-108,-71,-52,-109,-38,-24,-69,-70,-40,]),'EQUAL':([92,94,98,99,101,123,128,129,130,131,132,133,134,135,160,161,162,165,185,186,],[-75,-81,-72,-78,140,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'GETHAN':([92,94,98,99,101,123,128,129,130,131,132,133,134,135,160,161,162,165,185,186,],[-75,-81,-72,-78,141,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'LBRACKET':([14,16,17,18,19,60,92,94,98,99,123,128,129,130,131,132,133,134,135,160,161,162,165,179,185,186,],[25,25,25,25,25,77,-75,-81,-72,-78,-73,-79,-93,-85,-92,-89,-90,-91,164,-74,-84,-80,-88,186,-94,-95,]),'WHILE':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,111,112,151,152,157,158,166,168,169,171,175,177,181,187,195,],[-21,52,-21,-51,52,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,52,-36,52,-117,-55,-108,-71,-52,-109,-38,-24,-69,-70,-40,]),'PROGRAM':([0,],[1,]),'PRINT':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,111,112,151,152,157,158,166,168,169,171,175,177,181,187,195,],[-21,51,-21,-51,51,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,51,-36,51,-117,-55,-108,-71,-52,-109,-38,-24,-69,-70,-40,]),'CTESTRING':([72,73,75,77,79,90,91,93,96,97,104,120,122,125,126,127,137,138,139,140,141,142,143,148,163,164,],[95,-87,-87,-87,-87,-86,-76,-87,129,-77,-87,95,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-87,-87,]),'LETHAN':([92,94,98,99,101,123,128,129,130,131,132,133,134,135,160,161,162,165,185,186,],[-75,-81,-72,-78,143,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'MINUS':([72,73,75,77,79,91,92,93,94,97,99,104,120,122,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,148,161,162,163,164,165,185,186,],[97,97,97,97,97,-76,97,97,-81,-77,-78,97,97,97,-82,-83,97,-79,-93,-85,-92,-89,-90,-91,-96,-65,97,-63,-68,-66,-64,-67,97,-84,-80,97,97,-88,-94,-95,]),'RBRACE':([32,39,40,53,54,55,56,58,59,61,62,63,68,74,76,157,158,166,168,169,171,177,181,187,188,],[-21,-32,-21,-51,-32,-50,-47,-49,76,-46,-48,-20,-22,-31,-30,-117,-55,-108,-71,-52,-109,-24,-69,-70,192,]),'RPAREN':([37,46,47,48,66,73,75,79,81,86,87,88,89,92,94,95,98,99,100,102,105,106,107,108,110,121,123,124,128,129,130,131,132,133,134,135,147,150,159,160,161,162,165,167,170,178,185,186,],[-102,67,-103,-101,-105,-62,-62,-111,-107,118,-59,119,-58,-75,-81,-60,-72,-78,136,144,-116,149,-110,-112,-104,-56,-73,161,-79,-93,-85,-92,-89,-90,-91,-96,-114,-106,-57,-74,-84,-80,-88,-61,-115,185,-94,-95,]),'SEMICOLON':([3,4,14,16,17,18,19,26,28,29,30,31,41,44,64,92,94,98,99,115,118,119,123,128,129,130,131,132,133,134,135,146,149,155,160,161,162,165,182,185,186,189,193,],[-2,5,-19,-19,-19,-19,-19,-15,-13,-16,-17,-14,-8,-18,80,-75,-81,-72,-78,-25,157,158,-73,-79,-93,-85,-92,-89,-90,-91,-96,169,171,177,-74,-84,-80,-88,188,-94,-95,-41,195,]),'CTEFLOAT':([72,73,75,77,79,90,91,93,96,97,104,120,122,125,126,127,137,138,139,140,141,142,143,148,163,164,],[-87,-87,-87,-87,-87,-86,-76,-87,133,-77,-87,-87,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-87,-87,]),'PLUS':([72,73,75,77,79,91,92,93,94,97,99,104,120,122,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,148,161,162,163,164,165,185,186,],[91,91,91,91,91,-76,91,91,-81,-77,-78,91,91,91,-82,-83,91,-79,-93,-85,-92,-89,-90,-91,-96,-65,91,-63,-68,-66,-64,-67,91,-84,-80,91,91,-88,-94,-95,]),'COLON':([22,24,35,42,65,69,70,85,116,156,174,176,184,190,194,],[34,-10,-12,-9,-11,84,-27,-29,-26,-28,183,-43,-45,-42,-44,]),'COMMA':([24,35,66,70,81,85,87,89,92,94,95,98,99,105,123,128,129,130,131,132,133,134,135,160,161,162,165,176,184,185,186,],[-10,43,-105,-27,109,117,-59,120,-75,-81,-60,-72,-78,148,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-43,191,-94,-95,]),'EQUALA':([60,78,145,],[-54,104,-53,]),'$end':([2,33,76,],[0,-1,-30,]),'FUNCTION':([5,6,7,9,12,23,80,83,114,192,],[-4,-4,10,-3,10,-5,-7,-100,-99,-33,]),'STRING':([10,34,37,84,109,183,],[14,14,14,14,14,14,]),'CTEINT':([25,72,73,75,77,79,90,91,93,96,97,104,120,122,125,126,127,137,138,139,140,141,142,143,148,163,164,],[36,-87,-87,-87,-87,-87,-86,-76,-87,132,-77,-87,-87,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-87,-87,]),'DIVIDE':([94,129,130,131,132,133,134,135,161,165,185,186,],[126,-93,-85,-92,-89,-90,-91,-96,-84,-88,-94,-95,]),'ELSE':([76,168,],[-30,180,]),'LTHAN':([92,94,98,99,101,123,128,129,130,131,132,133,134,135,160,161,162,165,185,186,],[-75,-81,-72,-78,142,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'LPAREN':([27,50,51,52,57,60,72,73,75,77,79,91,93,97,104,120,122,125,126,127,135,137,138,139,140,141,142,143,148,163,164,],[37,71,72,73,75,79,93,93,93,93,93,-76,93,-77,93,93,93,-82,-83,93,163,-65,93,-63,-68,-66,-64,-67,93,93,93,]),'VAR':([5,6,8,23,32,38,40,68,80,82,111,113,175,177,195,],[-6,-6,13,-5,-23,49,-23,-22,-7,-39,-39,154,-38,-24,-40,]),'CTECHAR':([72,73,75,77,79,90,91,93,96,97,104,120,122,125,126,127,137,138,139,140,141,142,143,148,163,164,],[-87,-87,-87,-87,-87,-86,-76,-87,134,-77,-87,-87,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-87,-87,]),'ID':([1,13,14,15,16,17,18,19,26,28,29,30,31,32,39,40,43,44,45,49,53,54,55,56,58,61,62,63,68,71,72,73,75,76,77,79,82,90,91,93,96,97,104,111,112,117,120,122,125,126,127,137,138,139,140,141,142,143,148,151,152,154,157,158,163,164,166,168,169,171,173,175,177,181,187,191,195,],[3,24,-19,27,-19,-19,-19,-19,-15,-13,-16,-17,-14,-21,60,-21,24,-18,66,70,-51,60,-50,-47,-49,-46,-48,-20,-22,86,-87,-87,-87,-30,-87,-87,-37,-86,-76,-87,135,-77,-87,-37,60,70,-87,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-36,60,176,-117,-55,-87,-87,-108,-71,-52,-109,182,-38,-24,-69,-70,176,-40,]),'IF':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,111,112,151,152,157,158,166,168,169,171,175,177,181,187,195,],[-21,57,-21,-51,57,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,57,-36,57,-117,-55,-108,-71,-52,-109,-38,-24,-69,-70,-40,]),'CHAR':([10,34,37,84,109,183,],[18,18,18,18,18,18,]),'LBRACE':([20,67,136,144,180,],[32,82,32,32,32,]),'INT':([10,34,37,84,109,183,],[16,16,16,16,16,16,]),'CTEBOOL':([72,73,75,77,79,90,91,93,96,97,104,120,122,125,126,127,137,138,139,140,141,142,143,148,163,164,],[-87,-87,-87,-87,-87,-86,-76,-87,131,-77,-87,-87,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-87,-87,]),'FLOAT':([10,34,37,84,109,183,],[17,17,17,17,17,17,]),'BOOL':([10,34,37,84,109,183,],[19,19,19,19,19,19,]),'RBRACKET':([36,92,94,98,99,103,123,128,129,130,131,132,133,134,135,160,161,162,165,185,186,],[44,-75,-81,-72,-78,145,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'MAIN':([5,6,7,9,11,12,21,23,80,83,114,192,],[-4,-4,-98,-3,20,-98,-97,-5,-7,-100,-99,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ambAuxTipo1':([14,16,17,18,19,],[26,28,29,30,31,]),'addParameters':([66,],[81,]),'vars':([5,6,],[6,6,]),'idVarsFuncion':([154,191,],[174,194,]),'auxVar1':([13,],[23,]),'ambAuxArgumentos1':([105,],[147,]),'ambAuxEscritura1':([89,],[121,]),'createVariableDir':([5,6,],[8,8,]),'auxVarcte':([135,],[165,]),'ambIdVars':([35,],[42,]),'termino':([72,73,75,77,79,93,104,120,122,138,148,163,164,],[92,92,92,92,92,92,92,92,92,92,92,92,92,]),'addTypeGlobalFuncion':([189,],[193,]),'cicloVarsMain':([32,40,],[39,63,]),'argumentos':([79,],[107,]),'bloque':([20,136,144,180,],[33,166,168,187,]),'addTypeGlobal':([41,],[64,]),'addProcDirectoryFunc':([83,],[114,]),'ambAuxParametros':([81,],[110,]),'createVariableDirMain':([32,40,],[38,38,]),'addVariableDir':([24,],[35,]),'ciclo':([39,54,112,152,],[53,53,53,53,]),'tipo':([10,34,37,84,109,183,],[15,41,45,115,45,189,]),'varsFuncion':([82,111,],[111,111,]),'estatuto':([39,54,112,152,],[54,54,152,152,]),'auxFunction':([37,],[46,]),'auxLlamada':([79,],[106,]),'auxParametros':([37,109,],[47,150,]),'llamada':([39,54,112,152,],[55,55,55,55,]),'condicion':([39,54,112,152,],[56,56,56,56,]),'auxVar1Funcion':([154,],[175,]),'auxVar1Main':([49,],[68,]),'factor':([72,73,75,77,79,93,104,120,122,127,138,148,163,164,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'addVariableDirFuncion':([176,],[184,]),'createVariableDirFuncion':([82,111,],[113,113,]),'auxArgumentos1':([79,148,],[108,170,]),'lectura':([39,54,112,152,],[58,58,58,58,]),'funcion':([7,12,],[12,12,]),'auxEscritura2':([72,120,],[89,89,]),'cicloBloqueFuncion':([112,152,],[153,172,]),'auxEscritura1':([72,120,],[88,159,]),'cicloVars':([5,6,],[7,9,]),'ambIdVarsMain':([85,],[116,]),'idVarsMain':([49,117,],[69,156,]),'auxExpresion':([101,],[138,]),'auxTermino':([94,],[127,]),'cicloBloque':([39,54,],[59,74,]),'auxFactor':([72,73,75,77,79,93,104,120,122,127,138,148,163,164,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'auxExp':([72,73,75,77,79,92,93,104,120,122,127,138,148,163,164,],[90,90,90,90,90,122,90,90,90,90,90,90,90,90,90,]),'varsMain':([32,40,],[40,40,]),'cicloTermino':([72,73,75,77,79,93,104,120,122,127,138,148,163,164,],[99,99,99,99,99,99,99,99,99,162,99,99,99,99,]),'auxAsignacion1':([60,],[78,]),'expresion':([73,75,],[100,102,]),'varcte':([96,],[130,]),'idVars':([13,43,],[22,65,]),'asignacion':([39,54,112,152,],[61,61,61,61,]),'bloqueFuncion':([67,],[83,]),'addProcedureDir':([3,],[4,]),'cicloExp':([72,73,75,77,79,93,104,120,122,138,148,163,164,],[98,98,98,98,98,98,98,98,160,98,98,98,98,]),'cicloVarsFuncion':([82,111,],[112,151,]),'ambExp':([92,],[123,]),'cicloFuncion':([7,12,],[11,21,]),'programa':([0,],[2,]),'exp':([72,73,75,77,79,93,104,120,138,148,163,164,],[87,101,101,103,105,124,146,87,167,105,178,179,]),'auxCondicion':([168,],[181,]),'parametros':([37,],[48,]),'addVariableDirMain':([70,],[85,]),'ambIdVarsFuncion':([184,],[190,]),'ambCicloTermino':([94,],[128,]),'addTypeGlobalMain':([115,],[155,]),'escritura':([39,54,112,152,],[62,62,62,62,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',8,'p_programa','MyLittleDucky.py',21),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',25),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',33),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',34),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',37),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',40),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',45),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',48),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',57),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',60),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',70),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',71),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',74),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',75),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',76),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',77),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',78),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',83),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',84),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',87),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',88),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',91),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',94),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',99),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',102),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',112),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',115),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',125),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',126),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',129),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',132),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',133),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN ID SEMICOLON RBRACE','bloqueFuncion',7,'p_bloqueFuncion','MyLittleDucky.py',136),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',139),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',140),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',143),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',144),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',147),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',150),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',155),
  ('addTypeGlobalFuncion -> <empty>','addTypeGlobalFuncion',0,'p_addTypeGlobalFuncion','MyLittleDucky.py',158),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',168),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',171),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',182),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',183),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',186),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',187),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',188),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',189),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',190),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',191),
  ('asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',194),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',197),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',198),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',201),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',204),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',207),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',208),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',211),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',212),
  ('expresion -> exp auxExpresion exp','expresion',3,'p_expresion','MyLittleDucky.py',215),
  ('expresion -> <empty>','expresion',0,'p_expresion','MyLittleDucky.py',216),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',219),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',220),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',221),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',222),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',223),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',224),
  ('condicion -> IF LPAREN expresion RPAREN bloque auxCondicion','condicion',6,'p_condicion','MyLittleDucky.py',227),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',230),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',231),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',234),
  ('cicloExp -> termino ambExp','cicloExp',2,'p_cicloExp','MyLittleDucky.py',237),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',240),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',241),
  ('auxExp -> PLUS','auxExp',1,'p_auxExp','MyLittleDucky.py',244),
  ('auxExp -> MINUS','auxExp',1,'p_auxExp','MyLittleDucky.py',245),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',248),
  ('cicloTermino -> factor ambCicloTermino','cicloTermino',2,'p_cicloTermino','MyLittleDucky.py',251),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',254),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',255),
  ('auxTermino -> MULTI','auxTermino',1,'p_auxTermino','MyLittleDucky.py',258),
  ('auxTermino -> DIVIDE','auxTermino',1,'p_auxTermino','MyLittleDucky.py',259),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','MyLittleDucky.py',262),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',263),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',266),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',267),
  ('varcte -> ID auxVarcte','varcte',2,'p_varcte','MyLittleDucky.py',270),
  ('varcte -> CTEINT','varcte',1,'p_varcte','MyLittleDucky.py',271),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','MyLittleDucky.py',272),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','MyLittleDucky.py',273),
  ('varcte -> CTEBOOL','varcte',1,'p_varcte','MyLittleDucky.py',274),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','MyLittleDucky.py',275),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',278),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',279),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',280),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',283),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',284),
  ('funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc','funcion',8,'p_funcion','MyLittleDucky.py',287),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',290),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',297),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',298),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',301),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',304),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',307),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',318),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',319),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','MyLittleDucky.py',322),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',325),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',328),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',329),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',332),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',333),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',336),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',339),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',340),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',343),
]
