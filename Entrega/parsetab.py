
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C5C7EAE6453113CCD67898899F9485B2'
    
_lr_action_items = {'NOTEQUAL':([83,87,88,89,99,115,118,122,123,124,125,126,127,128,155,157,164,165,166,167,168,169,190,192,195,196,197,198,199,200,201,217,220,242,243,],[-128,-82,-129,-76,135,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-148,-147,-144,-145,-146,-98,-78,-84,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'MULTI':([88,118,122,123,124,125,126,127,128,164,165,166,167,168,169,195,196,197,198,199,200,201,217,220,242,243,],[-129,156,-123,-89,-123,-123,-123,-123,-123,-148,-147,-144,-145,-146,-98,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'GTHAN':([83,87,88,89,99,115,118,122,123,124,125,126,127,128,155,157,164,165,166,167,168,169,190,192,195,196,197,198,199,200,201,217,220,242,243,],[-128,-82,-129,-76,137,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-148,-147,-144,-145,-146,-98,-78,-84,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'RETURN':([52,54,55,59,60,73,78,107,108,148,149,150,160,180,184,187,203,221,222,233,234,244,245,246,],[-50,-49,-47,-46,-48,-30,-37,-37,-35,-36,-35,185,-54,-114,-34,-38,-75,-142,-139,-113,-73,-74,-51,-40,]),'EQUAL':([83,87,88,89,99,115,118,122,123,124,125,126,127,128,155,157,164,165,166,167,168,169,190,192,195,196,197,198,199,200,201,217,220,242,243,],[-128,-82,-129,-76,138,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-148,-147,-144,-145,-146,-98,-78,-84,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'GETHAN':([83,87,88,89,99,115,118,122,123,124,125,126,127,128,155,157,164,165,166,167,168,169,190,192,195,196,197,198,199,200,201,217,220,242,243,],[-128,-82,-129,-76,139,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-148,-147,-144,-145,-146,-98,-78,-84,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'LBRACKET':([14,16,17,18,19,58,75,83,87,88,89,104,115,118,122,123,124,125,126,127,128,155,157,164,165,166,167,168,169,190,192,195,196,197,198,199,200,201,217,220,232,242,243,],[25,25,25,25,25,-123,-98,-128,-82,-129,-76,146,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-148,-147,-144,-145,-146,-98,-78,-84,-131,-97,-96,-93,-94,-95,219,-88,-92,243,-99,-100,]),'WHILE':([32,39,40,52,53,54,55,59,60,61,66,73,78,107,108,148,149,160,180,187,189,203,221,222,233,234,244,245,246,],[-21,51,-21,-50,51,-49,-47,-46,-48,-20,-22,-30,-37,-37,51,-36,51,-54,-114,-38,-24,-75,-142,-139,-113,-73,-74,-51,-40,]),'PROGRAM':([0,],[1,]),'PRINT':([32,39,40,52,53,54,55,59,60,61,66,73,78,107,108,148,149,160,180,187,189,203,221,222,233,234,244,245,246,],[-21,50,-21,-50,50,-49,-47,-46,-48,-20,-22,-30,-37,-37,50,-36,50,-54,-114,-38,-24,-75,-142,-139,-113,-73,-74,-51,-40,]),'CTESTRING':([69,72,74,84,85,86,92,93,95,116,117,121,131,133,135,137,138,139,140,141,144,146,154,156,158,159,161,172,173,174,175,176,177,178,179,182,185,191,193,212,218,219,],[82,-91,-91,-127,-90,-126,-130,122,-91,-81,-80,-91,-132,-133,-154,-149,-153,-151,-150,-152,-91,-91,-91,-124,-91,-125,82,-91,-91,-91,-91,-91,-91,-91,-91,-155,-91,-86,-87,-91,-91,-91,]),'LETHAN':([83,87,88,89,99,115,118,122,123,124,125,126,127,128,155,157,164,165,166,167,168,169,190,192,195,196,197,198,199,200,201,217,220,242,243,],[-128,-82,-129,-76,141,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-148,-147,-144,-145,-146,-98,-78,-84,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'MINUS':([69,72,74,83,84,86,87,88,92,95,115,116,117,118,121,122,123,124,125,126,127,128,131,133,135,137,138,139,140,141,144,146,154,156,157,158,159,161,164,165,166,167,168,169,172,173,174,175,176,177,178,179,182,185,191,192,193,195,196,197,198,199,200,201,212,217,218,219,220,242,243,],[84,84,84,-128,-127,-126,-82,-129,-130,84,84,-81,-80,-85,84,-123,-89,-123,-123,-123,-123,-123,-132,-133,-154,-149,-153,-151,-150,-152,84,84,84,-124,-83,84,-125,84,-148,-147,-144,-145,-146,-98,84,84,84,84,84,84,84,84,-155,84,-86,-84,-87,-131,-97,-96,-93,-94,-95,-101,84,-88,84,84,-92,-99,-100,]),'RBRACE':([32,39,40,52,53,54,55,57,59,60,61,66,71,73,160,180,189,203,221,222,227,233,234,244,245,],[-21,-32,-21,-50,-32,-49,-47,73,-46,-48,-20,-22,-31,-30,-54,-114,-24,-75,-142,-139,239,-113,-73,-74,-51,]),'RPAREN':([37,46,47,48,64,74,77,82,83,87,88,89,90,91,94,96,97,98,99,100,101,102,103,106,114,115,118,120,122,123,124,125,126,127,128,129,130,132,134,136,143,147,155,157,162,163,164,165,166,167,168,169,181,190,192,194,195,196,197,198,199,200,201,204,205,206,207,208,209,210,211,217,220,224,225,231,236,237,242,243,],[-107,65,-108,-106,-110,-116,-112,-123,-128,-82,-129,-76,119,-143,-58,-137,-63,-135,-71,-115,142,-117,-121,-109,-59,-79,-85,-57,-123,-89,-123,-123,-123,-123,-123,170,171,-72,-60,-64,-119,-111,-77,-83,-55,195,-148,-147,-144,-145,-146,-98,-120,-78,-84,-56,-131,-97,-96,-93,-94,-95,-101,-134,-134,-67,-65,-70,-68,-66,-69,-88,-92,-63,-63,242,-61,-62,-99,-100,]),'SEMICOLON':([3,4,14,16,17,18,19,26,28,29,30,31,41,44,62,83,87,88,89,99,111,115,118,119,122,123,124,125,126,127,128,136,142,152,155,157,164,165,166,167,168,169,190,192,195,196,197,198,199,200,201,206,207,208,209,210,211,214,217,220,226,228,238,240,242,243,],[-2,5,-19,-19,-19,-19,-19,-15,-13,-16,-17,-14,-8,-18,76,-128,-82,-129,-76,-71,-25,-79,-85,160,-123,-89,-123,-123,-123,-123,-123,-64,180,189,-77,-83,-148,-147,-144,-145,-146,-98,-78,-84,-131,-97,-96,-93,-94,-95,-101,-67,-65,-70,-68,-66,-69,227,-88,-92,-136,-41,245,246,-99,-100,]),'CTEFLOAT':([69,72,74,84,85,86,92,93,95,116,117,121,131,133,135,137,138,139,140,141,144,146,154,156,158,159,161,172,173,174,175,176,177,178,179,182,185,191,193,212,218,219,],[-91,-91,-91,-127,-90,-126,-130,126,-91,-81,-80,-91,-132,-133,-154,-149,-153,-151,-150,-152,-91,-91,-91,-124,-91,-125,-91,-91,-91,-91,-91,-91,-91,-91,-91,-155,-91,-86,-87,-91,-91,-91,]),'PLUS':([69,72,74,83,84,86,87,88,92,95,115,116,117,118,121,122,123,124,125,126,127,128,131,133,135,137,138,139,140,141,144,146,154,156,157,158,159,161,164,165,166,167,168,169,172,173,174,175,176,177,178,179,182,185,191,192,193,195,196,197,198,199,200,201,212,217,218,219,220,242,243,],[86,86,86,-128,-127,-126,-82,-129,-130,86,86,-81,-80,-85,86,-123,-89,-123,-123,-123,-123,-123,-132,-133,-154,-149,-153,-151,-150,-152,86,86,86,-124,-83,86,-125,86,-148,-147,-144,-145,-146,-98,86,86,86,86,86,86,86,86,-155,86,-86,-84,-87,-131,-97,-96,-93,-94,-95,-101,86,-88,86,86,-92,-99,-100,]),'COLON':([22,24,35,42,63,67,68,81,112,153,186,188,216,229,241,],[34,-10,-12,-9,-11,80,-27,-29,-26,-28,215,-43,-45,-42,-44,]),'COMMA':([24,35,64,68,77,81,82,83,87,88,89,91,94,103,114,115,118,120,122,123,124,125,126,127,128,155,157,164,165,166,167,168,169,188,190,192,195,196,197,198,199,200,201,216,217,220,242,243,],[-10,43,-110,-27,105,113,-123,-128,-82,-129,-76,-143,-58,144,-59,-79,-85,161,-123,-89,-123,-123,-123,-123,-123,-77,-83,-148,-147,-144,-145,-146,-98,-43,-78,-84,-131,-97,-96,-93,-94,-95,-101,230,-88,-92,-99,-100,]),'EQUALA':([58,75,104,145,213,],[-123,-98,-53,182,-52,]),'$end':([2,33,73,],[0,-1,-30,]),'FUNCTION':([5,6,7,9,12,23,76,79,110,239,],[-4,-4,10,-3,10,-5,-7,-105,-104,-33,]),'STRING':([10,34,37,80,105,215,],[14,14,14,14,14,14,]),'CTEINT':([25,69,72,74,84,85,86,92,93,95,116,117,121,131,133,135,137,138,139,140,141,144,146,154,156,158,159,161,172,173,174,175,176,177,178,179,182,185,191,193,212,218,219,],[36,-91,-91,-91,-127,-90,-126,-130,125,-91,-81,-80,-91,-132,-133,-154,-149,-153,-151,-150,-152,-91,-91,-91,-124,-91,-125,-91,-91,-91,-91,-91,-91,-91,-91,-91,-155,-91,-86,-87,-91,-91,-91,]),'DIVIDE':([88,118,122,123,124,125,126,127,128,164,165,166,167,168,169,195,196,197,198,199,200,201,217,220,242,243,],[-129,159,-123,-89,-123,-123,-123,-123,-123,-148,-147,-144,-145,-146,-98,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'ELSE':([73,203,],[-30,223,]),'LTHAN':([83,87,88,89,99,115,118,122,123,124,125,126,127,128,155,157,164,165,166,167,168,169,190,192,195,196,197,198,199,200,201,217,220,242,243,],[-128,-82,-129,-76,140,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-148,-147,-144,-145,-146,-98,-78,-84,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'LPAREN':([27,50,51,56,58,69,70,72,74,84,86,92,95,116,117,121,128,131,133,135,137,138,139,140,141,144,146,154,156,158,159,161,169,172,173,174,175,176,177,178,179,182,185,191,193,201,212,218,219,],[37,69,-140,72,74,92,95,92,92,-127,-126,-130,92,-81,-80,92,-123,-132,-133,-154,-149,-153,-151,-150,-152,92,92,92,-124,92,-125,92,-98,92,92,92,92,92,92,92,92,-155,92,-86,-87,218,92,92,92,]),'VAR':([5,6,8,23,32,38,40,66,76,78,107,109,187,189,246,],[-6,-6,13,-5,-23,49,-23,-22,-7,-39,-39,151,-38,-24,-40,]),'CTECHAR':([69,72,74,84,85,86,92,93,95,116,117,121,131,133,135,137,138,139,140,141,144,146,154,156,158,159,161,172,173,174,175,176,177,178,179,182,185,191,193,212,218,219,],[-91,-91,-91,-127,-90,-126,-130,127,-91,-81,-80,-91,-132,-133,-154,-149,-153,-151,-150,-152,-91,-91,-91,-124,-91,-125,-91,-91,-91,-91,-91,-91,-91,-91,-91,-155,-91,-86,-87,-91,-91,-91,]),'ID':([1,13,14,15,16,17,18,19,26,28,29,30,31,32,39,40,43,44,45,49,52,53,54,55,59,60,61,66,69,72,73,74,78,84,85,86,92,93,95,107,108,113,116,117,121,131,133,135,137,138,139,140,141,144,146,148,149,151,154,156,158,159,160,161,172,173,174,175,176,177,178,179,180,182,185,187,189,191,193,203,212,218,219,221,222,230,233,234,244,245,246,],[3,24,-19,27,-19,-19,-19,-19,-15,-13,-16,-17,-14,-21,58,-21,24,-18,64,68,-50,58,-49,-47,-46,-48,-20,-22,-91,-91,-30,-91,-37,-127,-90,-126,-130,128,-91,-37,58,68,-81,-80,-91,-132,-133,-154,-149,-153,-151,-150,-152,-91,-91,-36,58,188,-91,-124,-91,-125,-54,-91,-91,-91,-91,-91,-91,-91,-91,-91,-114,-155,-91,-38,-24,-86,-87,-75,-91,-91,-91,-142,-139,188,-113,-73,-74,-51,-40,]),'IF':([32,39,40,52,53,54,55,59,60,61,66,73,78,107,108,148,149,160,180,187,189,203,221,222,233,234,244,245,246,],[-21,56,-21,-50,56,-49,-47,-46,-48,-20,-22,-30,-37,-37,56,-36,56,-54,-114,-38,-24,-75,-142,-139,-113,-73,-74,-51,-40,]),'AND':([83,87,88,89,97,98,99,115,118,122,123,124,125,126,127,128,134,136,155,157,164,165,166,167,168,169,190,192,195,196,197,198,199,200,201,204,205,206,207,208,209,210,211,217,220,224,225,242,243,],[-128,-82,-129,-76,131,-135,-71,-79,-85,-123,-89,-123,-123,-123,-123,-123,-60,-64,-77,-83,-148,-147,-144,-145,-146,-98,-78,-84,-131,-97,-96,-93,-94,-95,-101,-134,-134,-67,-65,-70,-68,-66,-69,-88,-92,131,131,-99,-100,]),'CHAR':([10,34,37,80,105,215,],[18,18,18,18,18,18,]),'LBRACE':([20,65,170,171,202,223,235,],[32,78,-141,32,32,-138,32,]),'INT':([10,34,37,80,105,215,],[16,16,16,16,16,16,]),'CTEBOOL':([69,72,74,84,85,86,92,93,95,116,117,121,131,133,135,137,138,139,140,141,144,146,154,156,158,159,161,172,173,174,175,176,177,178,179,182,185,191,193,212,218,219,],[-91,-91,-91,-127,-90,-126,-130,124,-91,-81,-80,-91,-132,-133,-154,-149,-153,-151,-150,-152,-91,-91,-91,-124,-91,-125,-91,-91,-91,-91,-91,-91,-91,-91,-91,-155,-91,-86,-87,-91,-91,-91,]),'FLOAT':([10,34,37,80,105,215,],[17,17,17,17,17,17,]),'BOOL':([10,34,37,80,105,215,],[19,19,19,19,19,19,]),'RBRACKET':([36,83,87,88,89,115,118,122,123,124,125,126,127,128,155,157,164,165,166,167,168,169,183,190,192,195,196,197,198,199,200,201,217,220,242,243,],[44,-128,-82,-129,-76,-79,-85,-123,-89,-123,-123,-123,-123,-123,-77,-83,-148,-147,-144,-145,-146,-98,213,-78,-84,-131,-97,-96,-93,-94,-95,-101,-88,-92,-99,-100,]),'MAIN':([5,6,7,9,11,12,21,23,76,79,110,239,],[-4,-4,-103,-3,20,-103,-102,-5,-7,-105,-104,-33,]),'OR':([83,87,88,89,97,98,99,115,118,122,123,124,125,126,127,128,134,136,155,157,164,165,166,167,168,169,190,192,195,196,197,198,199,200,201,204,205,206,207,208,209,210,211,217,220,224,225,242,243,],[-128,-82,-129,-76,133,-135,-71,-79,-85,-123,-89,-123,-123,-123,-123,-123,-60,-64,-77,-83,-148,-147,-144,-145,-146,-98,-78,-84,-131,-97,-96,-93,-94,-95,-101,-134,-134,-67,-65,-70,-68,-66,-69,-88,-92,133,133,-99,-100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([5,6,],[6,6,]),'menor':([140,],[178,]),'bloque':([20,171,202,235,],[33,203,221,244,]),'mayor':([137,],[175,]),'mayorIg':([139,],[177,]),'ambCicloTermino':([118,],[157,]),'auxLlamada':([74,],[101,]),'igual':([138,],[176,]),'factor':([69,72,74,95,121,144,146,154,158,161,172,173,174,175,176,177,178,179,185,212,218,219,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'addTypeGlobalFuncion':([228,],[240,]),'idVarsMain':([49,113,],[67,153,]),'paso2_div':([159,],[193,]),'cicloBloque':([39,53,],[57,71,]),'cteChar':([168,],[200,]),'cicloTermino':([69,72,74,95,121,144,146,154,158,161,172,173,174,175,176,177,178,179,185,212,218,219,],[87,87,87,87,87,87,87,87,192,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'expresion':([72,95,172,173,185,],[98,98,98,98,214,]),'bloqueFuncion':([65,],[79,]),'parametros':([37,],[48,]),'ambExp':([115,],[155,]),'addVariableDirMain':([68,],[81,]),'paso5':([88,],[118,]),'auxVar1':([13,],[23,]),'expAndOr':([72,95,],[96,129,]),'createVariableDir':([5,6,],[8,8,]),'argumentos':([74,],[100,]),'ciclo':([39,53,108,149,],[52,52,52,52,]),'tipo':([10,34,37,80,105,215,],[15,41,45,111,45,228,]),'asig':([182,],[212,]),'llamada':([39,53,108,149,],[54,54,54,54,]),'condicion':([39,53,108,149,],[55,55,55,55,]),'cicloBloqueFuncion':([108,149,],[150,184,]),'auxArgumentos1':([74,144,],[102,181,]),'cicloExp':([69,72,74,95,121,144,146,154,161,172,173,174,175,176,177,178,179,185,212,218,219,],[89,89,89,89,89,89,89,190,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'paso12':([96,],[130,]),'auxEscritura1':([69,161,],[90,194,]),'auxEscritura2':([69,161,],[91,91,]),'ambIdVarsMain':([81,],[112,]),'paso11':([226,],[238,]),'paso8_or':([133,],[173,]),'paso16':([170,],[202,]),'auxExp':([69,72,74,95,115,121,144,146,154,158,161,172,173,174,175,176,177,178,179,185,212,218,219,],[85,85,85,85,154,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'cicloExpresion':([72,95,172,173,],[97,97,204,205,]),'auxCicloExpresion':([97,224,225,],[132,236,237,]),'auxAsignacion1':([104,],[145,]),'cicloVarsFuncion':([78,107,],[108,148,]),'escritura':([39,53,108,149,],[60,60,60,60,]),'addParameters':([64,],[77,]),'addVariableDirFuncion':([188,],[216,]),'auxCondicion':([203,],[222,]),'termino':([69,72,74,95,121,144,146,154,161,172,173,174,175,176,177,178,179,185,212,218,219,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'paso3_resta':([84,],[116,]),'addProcDirectoryFunc':([79,],[110,]),'paso13':([223,],[235,]),'paso10':([98,],[134,]),'createVariableDirMain':([32,40,],[38,38,]),'addVariableDir':([24,],[35,]),'paso17':([221,],[233,]),'paso14':([222,],[234,]),'paso15':([51,],[70,]),'paso18':([91,],[120,]),'estatuto':([39,53,108,149,],[53,53,149,149,]),'ambAuxEscritura1':([120,],[162,]),'diferente':([135,],[174,]),'cteString':([164,],[196,]),'cicloVars':([5,6,],[7,9,]),'paso9':([204,205,],[224,225,]),'paso1':([58,82,122,124,125,126,127,128,],[75,114,164,165,166,167,168,169,]),'paso4':([83,],[115,]),'varsMain':([32,40,],[40,40,]),'paso6':([92,],[121,]),'paso7':([195,],[217,]),'asignacion':([39,53,108,149,],[59,59,59,59,]),'cteBool':([165,],[197,]),'addProcedureDir':([3,],[4,]),'cteInt':([166,],[198,]),'paso8_and':([131,],[172,]),'ambAuxTipo1':([14,16,17,18,19,],[26,28,29,30,31,]),'menorIg':([141,],[179,]),'auxVar1Main':([49,],[66,]),'cteFloat':([167,],[199,]),'auxVarcte':([201,],[220,]),'ambIdVars':([35,],[42,]),'cicloVarsMain':([32,40,],[39,61,]),'addTypeGlobal':([41,],[62,]),'auxExpresion':([99,],[136,]),'varsFuncion':([78,107,],[107,107,]),'auxFunction':([37,],[46,]),'auxParametros':([37,105,],[47,147,]),'auxVar1Funcion':([151,],[187,]),'createVariableDirFuncion':([78,107,],[109,109,]),'addType':([75,169,],[104,201,]),'funcion':([7,12,],[12,12,]),'ambAuxArgumentos1':([103,],[143,]),'auxTermino':([118,],[158,]),'auxFactor':([69,72,74,95,121,144,146,154,158,161,172,173,174,175,176,177,178,179,185,212,218,219,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'varcte':([93,],[123,]),'paso3_suma':([86,],[117,]),'idVars':([13,43,],[22,63,]),'idVarsFuncion':([151,230,],[186,241,]),'paso2_mult':([156,],[191,]),'cicloFuncion':([7,12,],[11,21,]),'programa':([0,],[2,]),'exp':([69,72,74,95,121,144,146,161,172,173,174,175,176,177,178,179,185,212,218,219,],[94,99,103,99,163,103,183,94,99,99,206,207,208,209,210,211,99,226,231,232,]),'ambAuxParametros':([77,],[106,]),'ambIdVarsFuncion':([216,],[229,]),'addTypeGlobalMain':([111,],[152,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',8,'p_programa','MyLittleDucky.py',70),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',74),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',82),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',83),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',86),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',89),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',94),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',97),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',106),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',109),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',119),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',120),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',123),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',124),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',125),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',126),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',127),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',132),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',133),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',136),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',137),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',140),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',143),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',148),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',151),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',161),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',164),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',174),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',175),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',178),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',181),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',182),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE','bloqueFuncion',7,'p_bloqueFuncion','MyLittleDucky.py',185),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',188),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',189),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',192),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',193),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',196),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',199),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',204),
  ('addTypeGlobalFuncion -> <empty>','addTypeGlobalFuncion',0,'p_addTypeGlobalFuncion','MyLittleDucky.py',207),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',217),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',220),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',231),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',232),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',235),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',236),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',237),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',238),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',239),
  ('asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON','asignacion',9,'p_asignacion','MyLittleDucky.py',244),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',248),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',249),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',252),
  ('auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1','auxEscritura1',3,'p_auxEscritura1','MyLittleDucky.py',256),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',259),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',260),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',263),
  ('auxEscritura2 -> CTESTRING paso1','auxEscritura2',2,'p_auxEscritura2','MyLittleDucky.py',264),
  ('cicloExpresion -> expresion paso10','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',267),
  ('auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',271),
  ('auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',272),
  ('auxCicloExpresion -> <empty>','auxCicloExpresion',0,'p_auxCicloExpresion','MyLittleDucky.py',273),
  ('expresion -> exp auxExpresion','expresion',2,'p_expresion','MyLittleDucky.py',276),
  ('auxExpresion -> GTHAN mayor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',280),
  ('auxExpresion -> LTHAN menor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',281),
  ('auxExpresion -> NOTEQUAL diferente exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',282),
  ('auxExpresion -> GETHAN mayorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',283),
  ('auxExpresion -> LETHAN menorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',284),
  ('auxExpresion -> EQUAL igual exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',285),
  ('auxExpresion -> <empty>','auxExpresion',0,'p_auxExpresion','MyLittleDucky.py',286),
  ('expAndOr -> cicloExpresion auxCicloExpresion','expAndOr',2,'p_expAndOr','MyLittleDucky.py',289),
  ('condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14','condicion',8,'p_condicion','MyLittleDucky.py',292),
  ('auxCondicion -> ELSE paso13 bloque','auxCondicion',3,'p_auxCondicion','MyLittleDucky.py',296),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',297),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',300),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',303),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',306),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',307),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',310),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',311),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',314),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',317),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',320),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',321),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',324),
  ('auxTermino -> DIVIDE paso2_div','auxTermino',2,'p_auxTermino','MyLittleDucky.py',325),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',328),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',329),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',332),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',333),
  ('varcte -> ID paso1 addType auxVarcte','varcte',4,'p_varcte','MyLittleDucky.py',336),
  ('varcte -> CTEINT paso1 cteInt','varcte',3,'p_varcte','MyLittleDucky.py',337),
  ('varcte -> CTEFLOAT paso1 cteFloat','varcte',3,'p_varcte','MyLittleDucky.py',338),
  ('varcte -> CTECHAR paso1 cteChar','varcte',3,'p_varcte','MyLittleDucky.py',339),
  ('varcte -> CTEBOOL paso1 cteBool','varcte',3,'p_varcte','MyLittleDucky.py',340),
  ('varcte -> CTESTRING paso1 cteString','varcte',3,'p_varcte','MyLittleDucky.py',341),
  ('addType -> <empty>','addType',0,'p_addType','MyLittleDucky.py',357),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',372),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',373),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',374),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',377),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',378),
  ('funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc','funcion',8,'p_funcion','MyLittleDucky.py',381),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',384),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',391),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',392),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',395),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',398),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',401),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',412),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',413),
  ('ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17','ciclo',8,'p_ciclo','MyLittleDucky.py',416),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',420),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',424),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',425),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',428),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',429),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',432),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',435),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',436),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',439),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',445),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',450),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',454),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',458),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',462),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',466),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',494),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',525),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',529),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',536),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',540),
  ('paso9 -> <empty>','paso9',0,'p_paso9','MyLittleDucky.py',544),
  ('paso10 -> <empty>','paso10',0,'p_paso10','MyLittleDucky.py',575),
  ('paso11 -> <empty>','paso11',0,'p_paso11','MyLittleDucky.py',606),
  ('paso12 -> <empty>','paso12',0,'p_paso12','MyLittleDucky.py',645),
  ('paso13 -> <empty>','paso13',0,'p_paso13','MyLittleDucky.py',664),
  ('paso14 -> <empty>','paso14',0,'p_paso14','MyLittleDucky.py',676),
  ('paso15 -> <empty>','paso15',0,'p_paso15','MyLittleDucky.py',684),
  ('paso16 -> <empty>','paso16',0,'p_paso16','MyLittleDucky.py',690),
  ('paso17 -> <empty>','paso17',0,'p_paso17','MyLittleDucky.py',709),
  ('paso18 -> <empty>','paso18',0,'p_paso18','MyLittleDucky.py',719),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',727),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',731),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',736),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',741),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',746),
  ('mayor -> <empty>','mayor',0,'p_mayor','MyLittleDucky.py',750),
  ('menor -> <empty>','menor',0,'p_menor','MyLittleDucky.py',754),
  ('mayorIg -> <empty>','mayorIg',0,'p_mayorIg','MyLittleDucky.py',758),
  ('menorIg -> <empty>','menorIg',0,'p_menorIg','MyLittleDucky.py',762),
  ('igual -> <empty>','igual',0,'p_igual','MyLittleDucky.py',766),
  ('diferente -> <empty>','diferente',0,'p_diferente','MyLittleDucky.py',770),
  ('asig -> <empty>','asig',0,'p_asig','MyLittleDucky.py',774),
]
