
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E13F436F238CBB4025B8E6BD33E2765F'
    
_lr_action_items = {'NOTEQUAL':([85,89,90,91,102,113,116,120,121,122,123,124,125,126,128,152,154,161,162,163,164,165,167,187,189,192,193,194,195,196,197,199,216,217,218,219,220,223,225,248,249,259,261,],[-134,-81,-135,-75,137,-78,-84,-129,-129,-88,-129,-97,-129,-129,-129,-76,-82,-163,-161,-160,-159,-103,-162,-77,-83,-137,-102,-100,-99,-98,-106,-101,-87,-96,-94,-93,-92,-91,-95,-104,-105,-157,-120,]),'MULTI':([90,116,120,121,122,123,124,125,126,128,161,162,163,164,165,167,192,193,194,195,196,197,199,216,217,218,219,220,223,225,248,249,259,261,],[-135,153,-129,-129,-88,-129,-97,-129,-129,-129,-163,-161,-160,-159,-103,-162,-137,-102,-100,-99,-98,-106,-101,-87,-96,-94,-93,-92,-91,-95,-104,-105,-157,-120,]),'GTHAN':([85,89,90,91,102,113,116,120,121,122,123,124,125,126,128,152,154,161,162,163,164,165,167,187,189,192,193,194,195,196,197,199,216,217,218,219,220,223,225,248,249,259,261,],[-134,-81,-135,-75,139,-78,-84,-129,-129,-88,-129,-97,-129,-129,-129,-76,-82,-163,-161,-160,-159,-103,-162,-77,-83,-137,-102,-100,-99,-98,-106,-101,-87,-96,-94,-93,-92,-91,-95,-104,-105,-157,-120,]),'RETURN':([58,60,64,65,76,80,105,106,145,146,157,180,181,183,203,212,226,228,239,241,251,252,254,],[-49,-47,-46,-48,-30,-37,-37,-152,-36,-35,-53,-35,213,-38,-74,-34,-148,-145,-119,-72,-50,-73,-40,]),'EQUAL':([85,89,90,91,102,113,116,120,121,122,123,124,125,126,128,152,154,161,162,163,164,165,167,187,189,192,193,194,195,196,197,199,216,217,218,219,220,223,225,248,249,259,261,],[-134,-81,-135,-75,140,-78,-84,-129,-129,-88,-129,-97,-129,-129,-129,-76,-82,-163,-161,-160,-159,-103,-162,-77,-83,-137,-102,-100,-99,-98,-106,-101,-87,-96,-94,-93,-92,-91,-95,-104,-105,-157,-120,]),'GETHAN':([85,89,90,91,102,113,116,120,121,122,123,124,125,126,128,152,154,161,162,163,164,165,167,187,189,192,193,194,195,196,197,199,216,217,218,219,220,223,225,248,249,259,261,],[-134,-81,-135,-75,141,-78,-84,-129,-129,-88,-129,-97,-129,-129,-129,-76,-82,-163,-161,-160,-159,-103,-162,-77,-83,-137,-102,-100,-99,-98,-106,-101,-87,-96,-94,-93,-92,-91,-95,-104,-105,-157,-120,]),'LBRACKET':([16,17,19,20,21,62,77,85,89,90,91,98,113,116,120,121,122,123,124,125,126,128,152,154,161,162,163,164,165,167,187,189,192,193,194,195,196,197,199,216,217,218,219,220,223,225,237,248,249,259,261,],[26,26,26,26,26,-129,-103,-134,-81,-135,-75,131,-78,-84,-129,-129,-88,-129,-97,-129,-129,-129,-76,-82,-163,-161,-160,-159,-103,-162,-77,-83,-137,-102,-100,-99,-98,222,-101,-87,-96,-94,-93,-92,-91,-95,249,-104,-105,-157,-120,]),'WHILE':([38,46,47,58,59,60,64,65,66,70,76,80,105,106,145,146,157,180,183,186,203,226,228,239,241,251,252,254,],[-21,57,-21,-49,57,-47,-46,-48,-20,-22,-30,-37,-37,-152,-36,57,-53,57,-38,-24,-74,-148,-145,-119,-72,-50,-73,-40,]),'PROGRAM':([0,],[1,]),'PRINT':([38,46,47,58,59,60,64,65,66,70,76,80,105,106,145,146,157,180,183,186,203,226,228,239,241,251,252,254,],[-21,56,-21,-49,56,-47,-46,-48,-20,-22,-30,-37,-37,-152,-36,56,-53,56,-38,-24,-74,-148,-145,-119,-72,-50,-73,-40,]),'CTESTRING':([73,78,86,87,88,94,95,97,114,115,119,131,133,135,137,139,140,141,142,143,151,153,155,156,158,169,172,173,174,175,176,177,178,179,188,190,201,213,221,222,250,263,],[84,-90,-133,-89,-132,-136,120,-90,-80,-79,-90,-90,-138,-139,-170,-165,-169,-167,-166,-168,-90,-130,-90,-131,84,-171,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'LETHAN':([85,89,90,91,102,113,116,120,121,122,123,124,125,126,128,152,154,161,162,163,164,165,167,187,189,192,193,194,195,196,197,199,216,217,218,219,220,223,225,248,249,259,261,],[-134,-81,-135,-75,143,-78,-84,-129,-129,-88,-129,-97,-129,-129,-129,-76,-82,-163,-161,-160,-159,-103,-162,-77,-83,-137,-102,-100,-99,-98,-106,-101,-87,-96,-94,-93,-92,-91,-95,-104,-105,-157,-120,]),'MINUS':([73,78,85,86,88,89,90,94,97,113,114,115,116,119,120,121,122,123,124,125,126,128,131,133,135,137,139,140,141,142,143,151,153,154,155,156,158,161,162,163,164,165,167,169,172,173,174,175,176,177,178,179,188,189,190,192,193,194,195,196,197,199,201,213,216,217,218,219,220,221,222,223,225,248,249,250,259,261,263,],[86,86,-134,-133,-132,-81,-135,-136,86,86,-80,-79,-84,86,-129,-129,-88,-129,-97,-129,-129,-129,86,-138,-139,-170,-165,-169,-167,-166,-168,86,-130,-82,86,-131,86,-163,-161,-160,-159,-103,-162,-171,86,86,86,86,86,86,86,86,-85,-83,-86,-137,-102,-100,-99,-98,-106,-101,86,86,-87,-96,-94,-93,-92,86,86,-91,-95,-104,-105,86,-157,-120,86,]),'RBRACE':([38,46,47,58,59,60,61,64,65,66,70,75,76,157,186,203,226,228,239,241,245,251,252,],[-21,-32,-21,-49,-32,-47,76,-46,-48,-20,-22,-31,-30,-53,-24,-74,-148,-145,-119,-72,253,-50,-73,]),'RPAREN':([44,52,53,54,68,79,84,85,89,90,91,92,93,96,99,100,101,102,104,112,113,116,118,120,121,122,123,124,125,126,128,129,132,134,136,138,144,152,154,159,160,161,162,163,164,165,167,187,189,191,192,193,194,195,196,197,199,204,205,206,207,208,209,210,211,216,217,218,219,220,223,225,230,231,236,243,244,248,249,250,255,256,257,258,259,260,261,262,264,],[-113,69,-114,-112,-116,-118,-129,-134,-81,-135,-75,117,-149,-57,-143,-62,-141,-70,-115,-58,-78,-84,-56,-129,-129,-88,-129,-97,-129,-129,-129,168,171,-71,-59,-63,-117,-76,-82,-54,192,-163,-161,-160,-159,-103,-162,-77,-83,-55,-137,-102,-100,-99,-98,-106,-101,-140,-140,-66,-64,-69,-67,-65,-68,-87,-96,-94,-93,-92,-91,-95,-62,-62,248,-60,-61,-104,-105,-122,-121,259,-123,-156,-157,-127,-120,-125,-126,]),'SEMICOLON':([3,4,16,17,19,20,21,27,28,30,31,32,40,43,49,85,89,90,91,102,109,113,116,117,120,121,122,123,124,125,126,128,138,149,152,154,161,162,163,164,165,167,187,189,192,193,194,195,196,197,199,206,207,208,209,210,211,216,217,218,219,220,223,225,227,232,233,240,246,248,249,259,261,],[-2,5,-19,-19,-19,-19,-19,-16,-15,-17,-13,-14,-8,-18,67,-134,-81,-135,-75,-70,-25,-78,-84,157,-129,-129,-88,-129,-97,-129,-129,-129,-63,186,-76,-82,-163,-161,-160,-159,-103,-162,-77,-83,-137,-102,-100,-99,-98,-106,-101,-66,-64,-69,-67,-65,-68,-87,-96,-94,-93,-92,-91,-95,-142,245,-41,251,254,-104,-105,-157,-120,]),'CTEFLOAT':([73,78,86,87,88,94,95,97,114,115,119,131,133,135,137,139,140,141,142,143,151,153,155,156,158,169,172,173,174,175,176,177,178,179,188,190,201,213,221,222,250,263,],[-90,-90,-133,-89,-132,-136,123,-90,-80,-79,-90,-90,-138,-139,-170,-165,-169,-167,-166,-168,-90,-130,-90,-131,-90,-171,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'CALL':([73,78,86,87,88,94,95,97,114,115,119,131,133,135,137,139,140,141,142,143,151,153,155,156,158,169,172,173,174,175,176,177,178,179,188,190,201,213,221,222,250,263,],[-90,-90,-133,-89,-132,-136,127,-90,-80,-79,-90,-90,-138,-139,-170,-165,-169,-167,-166,-168,-90,-130,-90,-131,-90,-171,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'PLUS':([73,78,85,86,88,89,90,94,97,113,114,115,116,119,120,121,122,123,124,125,126,128,131,133,135,137,139,140,141,142,143,151,153,154,155,156,158,161,162,163,164,165,167,169,172,173,174,175,176,177,178,179,188,189,190,192,193,194,195,196,197,199,201,213,216,217,218,219,220,221,222,223,225,248,249,250,259,261,263,],[88,88,-134,-133,-132,-81,-135,-136,88,88,-80,-79,-84,88,-129,-129,-88,-129,-97,-129,-129,-129,88,-138,-139,-170,-165,-169,-167,-166,-168,88,-130,-82,88,-131,88,-163,-161,-160,-159,-103,-162,-171,88,88,88,88,88,88,88,88,-85,-83,-86,-137,-102,-100,-99,-98,-106,-101,88,88,-87,-96,-94,-93,-92,88,88,-91,-95,-104,-105,88,-157,-120,88,]),'COLON':([23,25,35,41,50,71,72,83,110,127,150,182,184,215,234,247,],[34,-10,-12,-9,-11,82,-27,-29,-26,166,-28,214,-43,-45,-42,-44,]),'COMMA':([25,35,68,72,79,83,84,85,89,90,91,93,96,112,113,116,118,120,121,122,123,124,125,126,128,152,154,161,162,163,164,165,167,184,187,189,192,193,194,195,196,197,199,215,216,217,218,219,220,223,225,248,249,258,259,260,261,],[-10,42,-116,-27,103,111,-129,-134,-81,-135,-75,-149,-57,-58,-78,-84,158,-129,-129,-88,-129,-97,-129,-129,-129,-76,-82,-163,-161,-160,-159,-103,-162,-43,-77,-83,-137,-102,-100,-99,-98,-106,-101,235,-87,-96,-94,-93,-92,-91,-95,-104,-105,-156,-157,263,-120,]),'EQUALA':([62,77,98,130,202,],[-129,-103,-52,169,-51,]),'$end':([2,39,48,76,],[0,-158,-1,-30,]),'FUNCTION':([5,6,7,8,10,13,24,67,81,108,148,185,253,],[-150,-4,11,-4,11,-3,-5,-7,-110,-153,-154,-109,-33,]),'STRING':([11,34,44,82,103,214,],[17,17,17,17,17,17,]),'CTEINT':([26,73,78,86,87,88,94,95,97,114,115,119,131,133,135,137,139,140,141,142,143,151,153,155,156,158,169,172,173,174,175,176,177,178,179,188,190,201,213,221,222,250,263,],[36,-90,-90,-133,-89,-132,-136,125,-90,-80,-79,-90,-90,-138,-139,-170,-165,-169,-167,-166,-168,-90,-130,-90,-131,-90,-171,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'DIVIDE':([90,116,120,121,122,123,124,125,126,128,161,162,163,164,165,167,192,193,194,195,196,197,199,216,217,218,219,220,223,225,248,249,259,261,],[-135,156,-129,-129,-88,-129,-97,-129,-129,-129,-163,-161,-160,-159,-103,-162,-137,-102,-100,-99,-98,-106,-101,-87,-96,-94,-93,-92,-91,-95,-104,-105,-157,-120,]),'ELSE':([76,203,],[-30,229,]),'LTHAN':([85,89,90,91,102,113,116,120,121,122,123,124,125,126,128,152,154,161,162,163,164,165,167,187,189,192,193,194,195,196,197,199,216,217,218,219,220,223,225,248,249,259,261,],[-134,-81,-135,-75,142,-78,-84,-129,-129,-88,-129,-97,-129,-129,-129,-76,-82,-163,-161,-160,-159,-103,-162,-77,-83,-137,-102,-100,-99,-98,-106,-101,-87,-96,-94,-93,-92,-91,-95,-104,-105,-157,-120,]),'LPAREN':([29,37,56,57,63,73,74,78,86,88,94,97,114,115,119,126,131,133,135,137,139,140,141,142,143,151,153,155,156,158,165,169,172,173,174,175,176,177,178,179,188,190,197,198,201,213,221,222,224,238,250,263,],[-111,44,73,-146,78,94,97,94,-133,-132,-136,94,-80,-79,94,-129,94,-138,-139,-170,-165,-169,-167,-166,-168,94,-130,94,-131,94,-103,-171,94,94,94,94,94,94,94,94,-85,-86,221,-155,94,94,94,94,-164,250,94,94,]),'VAR':([5,6,8,9,24,38,45,47,67,70,80,105,107,183,186,254,],[-150,-6,-6,14,-5,-23,55,-23,-7,-22,-39,-39,147,-38,-24,-40,]),'CTECHAR':([73,78,86,87,88,94,95,97,114,115,119,131,133,135,137,139,140,141,142,143,151,153,155,156,158,169,172,173,174,175,176,177,178,179,188,190,201,213,221,222,250,263,],[-90,-90,-133,-89,-132,-136,121,-90,-80,-79,-90,-90,-138,-139,-170,-165,-169,-167,-166,-168,-90,-130,-90,-131,-90,-171,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'ID':([1,14,16,17,18,19,20,21,27,28,30,31,32,38,42,43,46,47,51,55,58,59,60,64,65,66,70,73,76,78,80,86,87,88,94,95,97,105,106,111,114,115,119,131,133,135,137,139,140,141,142,143,145,146,147,151,153,155,156,157,158,166,169,172,173,174,175,176,177,178,179,180,183,186,188,190,201,203,213,221,222,226,228,235,239,241,250,251,252,254,263,],[3,25,-19,-19,29,-19,-19,-19,-16,-15,-17,-13,-14,-21,25,-18,62,-21,68,72,-49,62,-47,-46,-48,-20,-22,-90,-30,-90,-37,-133,-89,-132,-136,126,-90,-37,-152,72,-80,-79,-90,-90,-138,-139,-170,-165,-169,-167,-166,-168,-36,62,184,-90,-130,-90,-131,-53,-90,198,-171,-90,-90,-90,-90,-90,-90,-90,-90,62,-38,-24,-85,-86,-90,-74,-90,-90,-90,-148,-145,184,-119,-72,-90,-50,-73,-40,-90,]),'IF':([38,46,47,58,59,60,64,65,66,70,76,80,105,106,145,146,157,180,183,186,203,226,228,239,241,251,252,254,],[-21,63,-21,-49,63,-47,-46,-48,-20,-22,-30,-37,-37,-152,-36,63,-53,63,-38,-24,-74,-148,-145,-119,-72,-50,-73,-40,]),'AND':([85,89,90,91,100,101,102,113,116,120,121,122,123,124,125,126,128,136,138,152,154,161,162,163,164,165,167,187,189,192,193,194,195,196,197,199,204,205,206,207,208,209,210,211,216,217,218,219,220,223,225,230,231,248,249,259,261,],[-134,-81,-135,-75,133,-141,-70,-78,-84,-129,-129,-88,-129,-97,-129,-129,-129,-59,-63,-76,-82,-163,-161,-160,-159,-103,-162,-77,-83,-137,-102,-100,-99,-98,-106,-101,-140,-140,-66,-64,-69,-67,-65,-68,-87,-96,-94,-93,-92,-91,-95,133,133,-104,-105,-157,-120,]),'CHAR':([11,34,44,82,103,214,],[19,19,19,19,19,19,]),'LBRACE':([22,33,69,168,171,200,229,242,],[-151,38,80,-147,38,38,-144,38,]),'INT':([11,34,44,82,103,214,],[20,20,20,20,20,20,]),'CTEBOOL':([73,78,86,87,88,94,95,97,114,115,119,131,133,135,137,139,140,141,142,143,151,153,155,156,158,169,172,173,174,175,176,177,178,179,188,190,201,213,221,222,250,263,],[-90,-90,-133,-89,-132,-136,128,-90,-80,-79,-90,-90,-138,-139,-170,-165,-169,-167,-166,-168,-90,-130,-90,-131,-90,-171,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'FLOAT':([11,34,44,82,103,214,],[16,16,16,16,16,16,]),'BOOL':([11,34,44,82,103,214,],[21,21,21,21,21,21,]),'RBRACKET':([36,85,89,90,91,113,116,120,121,122,123,124,125,126,128,152,154,161,162,163,164,165,167,170,187,189,192,193,194,195,196,197,199,216,217,218,219,220,223,225,248,249,259,261,],[43,-134,-81,-135,-75,-78,-84,-129,-129,-88,-129,-97,-129,-129,-129,-76,-82,-163,-161,-160,-159,-103,-162,202,-77,-83,-137,-102,-100,-99,-98,-106,-101,-87,-96,-94,-93,-92,-91,-95,-104,-105,-157,-120,]),'MAIN':([5,6,7,8,10,12,13,15,24,67,81,108,148,185,253,],[-150,-4,-108,-4,-108,22,-3,-107,-5,-7,-110,-153,-154,-109,-33,]),'OR':([85,89,90,91,100,101,102,113,116,120,121,122,123,124,125,126,128,136,138,152,154,161,162,163,164,165,167,187,189,192,193,194,195,196,197,199,204,205,206,207,208,209,210,211,216,217,218,219,220,223,225,230,231,248,249,259,261,],[-134,-81,-135,-75,135,-141,-70,-78,-84,-129,-129,-88,-129,-97,-129,-129,-129,-59,-63,-76,-82,-163,-161,-160,-159,-103,-162,-77,-83,-137,-102,-100,-99,-98,-106,-101,-140,-140,-66,-64,-69,-67,-65,-68,-87,-96,-94,-93,-92,-91,-95,135,135,-104,-105,-157,-120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([6,8,],[8,8,]),'menor':([142,],[178,]),'bloque':([33,171,200,242,],[39,203,226,252,]),'mayor':([139,],[175,]),'mayorIg':([141,],[177,]),'ambCicloTermino':([116,],[154,]),'auxLlamada':([250,],[256,]),'igual':([140,],[176,]),'factor':([73,78,97,119,131,151,155,158,172,173,174,175,176,177,178,179,201,213,221,222,250,263,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'assignDirectionCteInt':([196,],[220,]),'initDicFunc':([29,],[37,]),'idVarsMain':([55,111,],[71,150,]),'paso2_div':([156,],[190,]),'addTypeMain':([109,],[149,]),'cteLlamada':([224,],[238,]),'cicloBloque':([46,59,],[61,75,]),'cteChar':([162,],[194,]),'assignDirectionCteBool':([199,],[225,]),'cicloTermino':([73,78,97,119,131,151,155,158,172,173,174,175,176,177,178,179,201,213,221,222,250,263,],[89,89,89,89,89,89,189,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'expresion':([78,97,172,173,213,],[101,101,101,101,232,]),'bloqueFuncion':([69,],[81,]),'assignDirectionCteChar':([194,],[218,]),'parametros':([44,],[54,]),'ambExp':([113,],[152,]),'addVariableDirMain':([72,],[83,]),'paso5':([90,],[116,]),'auxVar1':([14,],[24,]),'expAndOr':([78,97,],[99,129,]),'createVariableDir':([6,8,],[9,9,]),'assignDirectionCteString':([193,],[217,]),'argumentos':([250,],[255,]),'ciclo':([46,59,146,180,],[58,58,58,58,]),'tipo':([11,34,44,82,103,214,],[18,40,51,109,51,233,]),'asig':([169,],[201,]),'llamada':([95,],[124,]),'condicion':([46,59,146,180,],[60,60,60,60,]),'cicloBloqueFuncion':([146,180,],[181,212,]),'auxArgumentos1':([250,263,],[257,264,]),'cicloExp':([73,78,97,119,131,151,158,172,173,174,175,176,177,178,179,201,213,221,222,250,263,],[91,91,91,91,91,187,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'paso12':([99,],[132,]),'auxEscritura1':([73,158,],[92,191,]),'auxEscritura2':([73,158,],[93,93,]),'ambIdVarsMain':([83,],[110,]),'paso11':([227,],[240,]),'paso8_or':([135,],[173,]),'paso16':([168,],[200,]),'auxExp':([73,78,97,113,119,131,151,155,158,172,173,174,175,176,177,178,179,201,213,221,222,250,263,],[87,87,87,151,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'cicloExpresion':([78,97,172,173,],[100,100,204,205,]),'auxCicloExpresion':([100,230,231,],[134,243,244,]),'auxAsignacion1':([98,],[130,]),'cicloVarsFuncion':([80,105,],[106,145,]),'escritura':([46,59,146,180,],[65,65,65,65,]),'paso19':([5,],[6,]),'addParameters':([68,],[79,]),'addVariableDirFuncion':([184,],[215,]),'auxCondicion':([203,],[228,]),'termino':([73,78,97,119,131,151,158,172,173,174,175,176,177,178,179,201,213,221,222,250,263,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'paso3_resta':([86,],[114,]),'addProcDirectoryFunc':([81,],[108,]),'paso13':([229,],[242,]),'paso10':([101,],[136,]),'createVariableDirMain':([38,47,],[45,45,]),'addVariableDir':([25,],[35,]),'paso17':([226,],[239,]),'paso14':([228,],[241,]),'paso15':([57,],[74,]),'paso18':([93,],[118,]),'estatuto':([46,59,146,180,],[59,59,180,180,]),'ambAuxEscritura1':([118,],[159,]),'diferente':([137,],[174,]),'cteString':([161,],[193,]),'addTypeFuncion':([233,],[246,]),'cicloVars':([6,8,],[7,13,]),'paso9':([204,205,],[230,231,]),'paso1':([62,84,120,121,123,125,126,128,],[77,112,161,162,163,164,165,167,]),'paso4':([85,],[113,]),'varsMain':([38,47,],[47,47,]),'paso6':([94,],[119,]),'paso7':([192,],[216,]),'asignacion':([46,59,146,180,],[64,64,64,64,]),'cteBool':([167,],[199,]),'addProcedureDir':([3,],[4,]),'cteInt':([164,],[196,]),'paso21':([106,],[146,]),'ambAuxTipo1':([16,17,19,20,21,],[27,28,30,31,32,]),'menorIg':([143,],[179,]),'auxVar1Main':([55,],[70,]),'cteFloat':([163,],[195,]),'auxVarcte':([197,],[223,]),'ambIdVars':([35,],[41,]),'paso25':([258,],[260,]),'cicloVarsMain':([38,47,],[46,66,]),'addTypeGlobal':([40,],[49,]),'auxExpresion':([102,],[138,]),'varsFuncion':([80,105,],[105,105,]),'auxFunction':([44,],[52,]),'auxParametros':([44,103,],[53,144,]),'idVarsFuncion':([147,235,],[182,247,]),'auxVar1Funcion':([147,],[183,]),'createVariableDirFuncion':([80,105,],[107,107,]),'addType':([77,165,],[98,197,]),'funcion':([7,10,],[10,10,]),'ambAuxArgumentos1':([260,],[262,]),'pasoFinal':([39,],[48,]),'auxTermino':([116,],[155,]),'auxFactor':([73,78,97,119,131,151,155,158,172,173,174,175,176,177,178,179,201,213,221,222,250,263,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'varcte':([95,],[122,]),'paso3_suma':([88,],[115,]),'idVars':([14,42,],[23,50,]),'paso23':([148,],[185,]),'paso22':([108,],[148,]),'paso8_and':([133,],[172,]),'paso20':([22,],[33,]),'paso26':([259,],[261,]),'paso2_mult':([153,],[188,]),'paso24':([198,],[224,]),'cicloFuncion':([7,10,],[12,15,]),'programa':([0,],[2,]),'exp':([73,78,97,119,131,158,172,173,174,175,176,177,178,179,201,213,221,222,250,263,],[96,102,102,160,170,96,102,102,206,207,208,209,210,211,227,102,236,237,258,258,]),'ambAuxParametros':([79,],[104,]),'ambIdVarsFuncion':([215,],[234,]),'assignDirectionCteFloat':([195,],[219,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal','programa',11,'p_programa','MyLittleDucky.py',198),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',202),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',210),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',211),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',214),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',217),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',222),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',225),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',260),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',263),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',275),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',276),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',279),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',280),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',281),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',282),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',283),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',288),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',289),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',292),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',293),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',296),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',299),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',304),
  ('addTypeMain -> <empty>','addTypeMain',0,'p_addTypeMain','MyLittleDucky.py',307),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',341),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',344),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',355),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',356),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',359),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',362),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',363),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE','bloqueFuncion',8,'p_bloqueFuncion','MyLittleDucky.py',366),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',369),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',370),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',373),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',374),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',377),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',380),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',385),
  ('addTypeFuncion -> <empty>','addTypeFuncion',0,'p_addTypeFuncion','MyLittleDucky.py',388),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',422),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',425),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',439),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',440),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',443),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',444),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',445),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',446),
  ('asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON','asignacion',9,'p_asignacion','MyLittleDucky.py',451),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',455),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',456),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',459),
  ('auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1','auxEscritura1',3,'p_auxEscritura1','MyLittleDucky.py',463),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',466),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',467),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',470),
  ('auxEscritura2 -> CTESTRING paso1','auxEscritura2',2,'p_auxEscritura2','MyLittleDucky.py',471),
  ('cicloExpresion -> expresion paso10','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',474),
  ('auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',478),
  ('auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',479),
  ('auxCicloExpresion -> <empty>','auxCicloExpresion',0,'p_auxCicloExpresion','MyLittleDucky.py',480),
  ('expresion -> exp auxExpresion','expresion',2,'p_expresion','MyLittleDucky.py',483),
  ('auxExpresion -> GTHAN mayor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',487),
  ('auxExpresion -> LTHAN menor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',488),
  ('auxExpresion -> NOTEQUAL diferente exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',489),
  ('auxExpresion -> GETHAN mayorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',490),
  ('auxExpresion -> LETHAN menorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',491),
  ('auxExpresion -> EQUAL igual exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',492),
  ('auxExpresion -> <empty>','auxExpresion',0,'p_auxExpresion','MyLittleDucky.py',493),
  ('expAndOr -> cicloExpresion auxCicloExpresion','expAndOr',2,'p_expAndOr','MyLittleDucky.py',496),
  ('condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14','condicion',8,'p_condicion','MyLittleDucky.py',499),
  ('auxCondicion -> ELSE paso13 bloque','auxCondicion',3,'p_auxCondicion','MyLittleDucky.py',503),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',504),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',507),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',510),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',513),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',514),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',517),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',518),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',521),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',524),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',527),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',528),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',531),
  ('auxTermino -> DIVIDE paso2_div','auxTermino',2,'p_auxTermino','MyLittleDucky.py',532),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',535),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',536),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',539),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',540),
  ('varcte -> ID paso1 addType auxVarcte','varcte',4,'p_varcte','MyLittleDucky.py',543),
  ('varcte -> CTEINT paso1 cteInt assignDirectionCteInt','varcte',4,'p_varcte','MyLittleDucky.py',544),
  ('varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat','varcte',4,'p_varcte','MyLittleDucky.py',545),
  ('varcte -> CTECHAR paso1 cteChar assignDirectionCteChar','varcte',4,'p_varcte','MyLittleDucky.py',546),
  ('varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool','varcte',4,'p_varcte','MyLittleDucky.py',547),
  ('varcte -> CTESTRING paso1 cteString assignDirectionCteString','varcte',4,'p_varcte','MyLittleDucky.py',548),
  ('varcte -> llamada','varcte',1,'p_varcte','MyLittleDucky.py',549),
  ('assignDirectionCteInt -> <empty>','assignDirectionCteInt',0,'p_assignDirectionCteInt','MyLittleDucky.py',552),
  ('assignDirectionCteFloat -> <empty>','assignDirectionCteFloat',0,'p_assignDirectionCteFloat','MyLittleDucky.py',563),
  ('assignDirectionCteChar -> <empty>','assignDirectionCteChar',0,'p_assignDirectionCteChar','MyLittleDucky.py',571),
  ('assignDirectionCteBool -> <empty>','assignDirectionCteBool',0,'p_assignDirectionCteBool','MyLittleDucky.py',579),
  ('assignDirectionCteString -> <empty>','assignDirectionCteString',0,'p_assignDirectionCteString','MyLittleDucky.py',587),
  ('addType -> <empty>','addType',0,'p_addType','MyLittleDucky.py',609),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',624),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',625),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',626),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',629),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',630),
  ('funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23','funcion',11,'p_funcion','MyLittleDucky.py',633),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',636),
  ('initDicFunc -> <empty>','initDicFunc',0,'p_initDicFunc','MyLittleDucky.py',652),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',658),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',659),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',662),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',665),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',668),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',689),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',690),
  ('ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17','ciclo',8,'p_ciclo','MyLittleDucky.py',693),
  ('llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26','llamada',9,'p_llamada','MyLittleDucky.py',697),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',701),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',702),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',705),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',706),
  ('auxArgumentos1 -> exp paso25 ambAuxArgumentos1','auxArgumentos1',3,'p_auxArgumentos1','MyLittleDucky.py',709),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',712),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',713),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',716),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',729),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',735),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',739),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',743),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',747),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',885),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',916),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',949),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',953),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',961),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',965),
  ('paso9 -> <empty>','paso9',0,'p_paso9','MyLittleDucky.py',969),
  ('paso10 -> <empty>','paso10',0,'p_paso10','MyLittleDucky.py',1002),
  ('paso11 -> <empty>','paso11',0,'p_paso11','MyLittleDucky.py',1035),
  ('paso12 -> <empty>','paso12',0,'p_paso12','MyLittleDucky.py',1076),
  ('paso13 -> <empty>','paso13',0,'p_paso13','MyLittleDucky.py',1096),
  ('paso14 -> <empty>','paso14',0,'p_paso14','MyLittleDucky.py',1108),
  ('paso15 -> <empty>','paso15',0,'p_paso15','MyLittleDucky.py',1116),
  ('paso16 -> <empty>','paso16',0,'p_paso16','MyLittleDucky.py',1122),
  ('paso17 -> <empty>','paso17',0,'p_paso17','MyLittleDucky.py',1142),
  ('paso18 -> <empty>','paso18',0,'p_paso18','MyLittleDucky.py',1152),
  ('paso19 -> <empty>','paso19',0,'p_paso19','MyLittleDucky.py',1164),
  ('paso20 -> <empty>','paso20',0,'p_paso20','MyLittleDucky.py',1173),
  ('paso21 -> <empty>','paso21',0,'p_paso21','MyLittleDucky.py',1180),
  ('paso22 -> <empty>','paso22',0,'p_paso22','MyLittleDucky.py',1192),
  ('paso23 -> <empty>','paso23',0,'p_paso23','MyLittleDucky.py',1206),
  ('paso24 -> <empty>','paso24',0,'p_paso24','MyLittleDucky.py',1228),
  ('paso25 -> <empty>','paso25',0,'p_paso25','MyLittleDucky.py',1251),
  ('paso26 -> <empty>','paso26',0,'p_paso26','MyLittleDucky.py',1281),
  ('pasoFinal -> <empty>','pasoFinal',0,'p_pasoFinal','MyLittleDucky.py',1289),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',1296),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',1300),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',1305),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',1310),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',1315),
  ('cteLlamada -> <empty>','cteLlamada',0,'p_cteLlamada','MyLittleDucky.py',1319),
  ('mayor -> <empty>','mayor',0,'p_mayor','MyLittleDucky.py',1331),
  ('menor -> <empty>','menor',0,'p_menor','MyLittleDucky.py',1335),
  ('mayorIg -> <empty>','mayorIg',0,'p_mayorIg','MyLittleDucky.py',1339),
  ('menorIg -> <empty>','menorIg',0,'p_menorIg','MyLittleDucky.py',1343),
  ('igual -> <empty>','igual',0,'p_igual','MyLittleDucky.py',1347),
  ('diferente -> <empty>','diferente',0,'p_diferente','MyLittleDucky.py',1351),
  ('asig -> <empty>','asig',0,'p_asig','MyLittleDucky.py',1355),
]
