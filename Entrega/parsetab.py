
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9B730CE0042E0D4F519F75B1A7A7B195'
    
_lr_action_items = {'NOTEQUAL':([84,88,89,90,101,112,115,119,120,121,122,123,124,125,126,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,253,255,],[-129,-81,-130,-75,136,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-157,-155,-154,-153,-98,-156,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-152,-115,]),'MULTI':([89,115,119,120,121,122,123,124,125,126,160,161,162,163,164,165,191,192,193,194,195,196,197,215,218,242,243,253,255,],[-130,152,-124,-124,-88,-124,-97,-124,-124,-124,-157,-155,-154,-153,-98,-156,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-152,-115,]),'GTHAN':([84,88,89,90,101,112,115,119,120,121,122,123,124,125,126,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,253,255,],[-129,-81,-130,-75,138,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-157,-155,-154,-153,-98,-156,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-152,-115,]),'RETURN':([57,59,63,64,75,79,104,105,144,145,156,179,180,182,202,211,220,222,233,235,245,246,248,],[-49,-47,-46,-48,-30,-37,-37,-147,-36,-35,-53,-35,212,-38,-74,-34,-143,-140,-114,-72,-50,-73,-40,]),'EQUAL':([84,88,89,90,101,112,115,119,120,121,122,123,124,125,126,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,253,255,],[-129,-81,-130,-75,139,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-157,-155,-154,-153,-98,-156,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-152,-115,]),'GETHAN':([84,88,89,90,101,112,115,119,120,121,122,123,124,125,126,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,253,255,],[-129,-81,-130,-75,140,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-157,-155,-154,-153,-98,-156,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-152,-115,]),'LBRACKET':([15,16,18,19,20,61,76,84,88,89,90,97,112,115,119,120,121,122,123,124,125,126,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,231,242,243,253,255,],[26,26,26,26,26,-124,-98,-129,-81,-130,-75,130,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-157,-155,-154,-153,-98,-156,-77,-83,-132,-96,-94,-93,-92,217,-95,-87,-91,243,-99,-100,-152,-115,]),'WHILE':([38,46,47,57,58,59,63,64,65,69,75,79,104,105,144,145,156,179,182,185,202,220,222,233,235,245,246,248,],[-21,56,-21,-49,56,-47,-46,-48,-20,-22,-30,-37,-37,-147,-36,56,-53,56,-38,-24,-74,-143,-140,-114,-72,-50,-73,-40,]),'PROGRAM':([0,],[1,]),'PRINT':([38,46,47,57,58,59,63,64,65,69,75,79,104,105,144,145,156,179,182,185,202,220,222,233,235,245,246,248,],[-21,55,-21,-49,55,-47,-46,-48,-20,-22,-30,-37,-37,-147,-36,55,-53,55,-38,-24,-74,-143,-140,-114,-72,-50,-73,-40,]),'CTESTRING':([72,77,85,86,87,93,94,96,113,114,118,130,132,134,136,138,139,140,141,142,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,244,257,],[83,-90,-128,-89,-127,-131,119,-90,-80,-79,-90,-90,-133,-134,-164,-159,-163,-161,-160,-162,-90,-125,-90,-126,83,-165,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'LETHAN':([84,88,89,90,101,112,115,119,120,121,122,123,124,125,126,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,253,255,],[-129,-81,-130,-75,142,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-157,-155,-154,-153,-98,-156,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-152,-115,]),'MINUS':([72,77,84,85,87,88,89,93,96,112,113,114,115,118,119,120,121,122,123,124,125,126,130,132,134,136,138,139,140,141,142,150,152,153,154,155,157,160,161,162,163,164,165,168,171,172,173,174,175,176,177,178,187,188,189,191,192,193,194,195,196,197,200,212,215,216,217,218,242,243,244,253,255,257,],[85,85,-129,-128,-127,-81,-130,-131,85,85,-80,-79,-84,85,-124,-124,-88,-124,-97,-124,-124,-124,85,-133,-134,-164,-159,-163,-161,-160,-162,85,-125,-82,85,-126,85,-157,-155,-154,-153,-98,-156,-165,85,85,85,85,85,85,85,85,-85,-83,-86,-132,-96,-94,-93,-92,-101,-95,85,85,-87,85,85,-91,-99,-100,85,-152,-115,85,]),'RBRACE':([38,46,47,57,58,59,60,63,64,65,69,74,75,156,185,202,220,222,233,235,239,245,246,],[-21,-32,-21,-49,-32,-47,75,-46,-48,-20,-22,-31,-30,-53,-24,-74,-143,-140,-114,-72,247,-50,-73,]),'RPAREN':([44,51,52,53,67,78,83,84,88,89,90,91,92,95,98,99,100,101,103,111,112,115,117,119,120,121,122,123,124,125,126,128,131,133,135,137,143,151,153,158,159,160,161,162,163,164,165,186,188,190,191,192,193,194,195,196,197,203,204,205,206,207,208,209,210,215,218,224,225,230,237,238,242,243,244,249,250,251,252,253,254,255,256,258,],[-108,68,-109,-107,-111,-113,-124,-129,-81,-130,-75,116,-144,-57,-138,-62,-136,-70,-110,-58,-78,-84,-56,-124,-124,-88,-124,-97,-124,-124,-124,167,170,-71,-59,-63,-112,-76,-82,-54,191,-157,-155,-154,-153,-98,-156,-77,-83,-55,-132,-96,-94,-93,-92,-101,-95,-135,-135,-66,-64,-69,-67,-65,-68,-87,-91,-62,-62,242,-60,-61,-99,-100,-117,-116,253,-118,-151,-152,-122,-115,-120,-121,]),'SEMICOLON':([3,4,15,16,18,19,20,27,28,30,31,32,40,43,48,84,88,89,90,101,108,112,115,116,119,120,121,122,123,124,125,126,137,148,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,205,206,207,208,209,210,215,218,221,226,227,234,240,242,243,253,255,],[-2,5,-19,-19,-19,-19,-19,-16,-15,-17,-13,-14,-8,-18,66,-129,-81,-130,-75,-70,-25,-78,-84,156,-124,-124,-88,-124,-97,-124,-124,-124,-63,185,-76,-82,-157,-155,-154,-153,-98,-156,-77,-83,-132,-96,-94,-93,-92,-101,-95,-66,-64,-69,-67,-65,-68,-87,-91,-137,239,-41,245,248,-99,-100,-152,-115,]),'CTEFLOAT':([72,77,85,86,87,93,94,96,113,114,118,130,132,134,136,138,139,140,141,142,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,244,257,],[-90,-90,-128,-89,-127,-131,122,-90,-80,-79,-90,-90,-133,-134,-164,-159,-163,-161,-160,-162,-90,-125,-90,-126,-90,-165,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'CALL':([72,77,85,86,87,93,94,96,113,114,118,130,132,134,136,138,139,140,141,142,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,244,257,],[-90,-90,-128,-89,-127,-131,127,-90,-80,-79,-90,-90,-133,-134,-164,-159,-163,-161,-160,-162,-90,-125,-90,-126,-90,-165,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'PLUS':([72,77,84,85,87,88,89,93,96,112,113,114,115,118,119,120,121,122,123,124,125,126,130,132,134,136,138,139,140,141,142,150,152,153,154,155,157,160,161,162,163,164,165,168,171,172,173,174,175,176,177,178,187,188,189,191,192,193,194,195,196,197,200,212,215,216,217,218,242,243,244,253,255,257,],[87,87,-129,-128,-127,-81,-130,-131,87,87,-80,-79,-84,87,-124,-124,-88,-124,-97,-124,-124,-124,87,-133,-134,-164,-159,-163,-161,-160,-162,87,-125,-82,87,-126,87,-157,-155,-154,-153,-98,-156,-165,87,87,87,87,87,87,87,87,-85,-83,-86,-132,-96,-94,-93,-92,-101,-95,87,87,-87,87,87,-91,-99,-100,87,-152,-115,87,]),'COLON':([23,25,35,41,49,70,71,82,109,127,149,181,183,214,228,241,],[34,-10,-12,-9,-11,81,-27,-29,-26,166,-28,213,-43,-45,-42,-44,]),'COMMA':([25,35,67,71,78,82,83,84,88,89,90,92,95,111,112,115,117,119,120,121,122,123,124,125,126,151,153,160,161,162,163,164,165,183,186,188,191,192,193,194,195,196,197,214,215,218,242,243,252,253,254,255,],[-10,42,-111,-27,102,110,-124,-129,-81,-130,-75,-144,-57,-58,-78,-84,157,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-157,-155,-154,-153,-98,-156,-43,-77,-83,-132,-96,-94,-93,-92,-101,-95,229,-87,-91,-99,-100,-151,-152,257,-115,]),'EQUALA':([61,76,97,129,201,],[-124,-98,-52,168,-51,]),'$end':([2,39,75,],[0,-1,-30,]),'FUNCTION':([5,6,7,8,12,13,24,66,80,107,147,184,247,],[-145,-4,10,-4,10,-3,-5,-7,-105,-148,-149,-104,-33,]),'STRING':([10,34,44,81,102,213,],[16,16,16,16,16,16,]),'CTEINT':([26,72,77,85,86,87,93,94,96,113,114,118,130,132,134,136,138,139,140,141,142,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,244,257,],[36,-90,-90,-128,-89,-127,-131,124,-90,-80,-79,-90,-90,-133,-134,-164,-159,-163,-161,-160,-162,-90,-125,-90,-126,-90,-165,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'DIVIDE':([89,115,119,120,121,122,123,124,125,126,160,161,162,163,164,165,191,192,193,194,195,196,197,215,218,242,243,253,255,],[-130,155,-124,-124,-88,-124,-97,-124,-124,-124,-157,-155,-154,-153,-98,-156,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-152,-115,]),'ELSE':([75,202,],[-30,223,]),'LTHAN':([84,88,89,90,101,112,115,119,120,121,122,123,124,125,126,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,253,255,],[-129,-81,-130,-75,141,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-157,-155,-154,-153,-98,-156,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-152,-115,]),'LPAREN':([29,37,55,56,62,72,73,77,85,87,93,96,113,114,118,125,130,132,134,136,138,139,140,141,142,150,152,154,155,157,164,168,171,172,173,174,175,176,177,178,187,189,196,198,200,212,216,217,219,232,244,257,],[-106,44,72,-141,77,93,96,93,-128,-127,-131,93,-80,-79,93,-124,93,-133,-134,-164,-159,-163,-161,-160,-162,93,-125,93,-126,93,-98,-165,93,93,93,93,93,93,93,93,-85,-86,216,-150,93,93,93,93,-158,244,93,93,]),'VAR':([5,6,8,9,24,38,45,47,66,69,79,104,106,182,185,248,],[-145,-6,-6,14,-5,-23,54,-23,-7,-22,-39,-39,146,-38,-24,-40,]),'CTECHAR':([72,77,85,86,87,93,94,96,113,114,118,130,132,134,136,138,139,140,141,142,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,244,257,],[-90,-90,-128,-89,-127,-131,120,-90,-80,-79,-90,-90,-133,-134,-164,-159,-163,-161,-160,-162,-90,-125,-90,-126,-90,-165,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'ID':([1,14,15,16,17,18,19,20,27,28,30,31,32,38,42,43,46,47,50,54,57,58,59,63,64,65,69,72,75,77,79,85,86,87,93,94,96,104,105,110,113,114,118,130,132,134,136,138,139,140,141,142,144,145,146,150,152,154,155,156,157,166,168,171,172,173,174,175,176,177,178,179,182,185,187,189,200,202,212,216,217,220,222,229,233,235,244,245,246,248,257,],[3,25,-19,-19,29,-19,-19,-19,-16,-15,-17,-13,-14,-21,25,-18,61,-21,67,71,-49,61,-47,-46,-48,-20,-22,-90,-30,-90,-37,-128,-89,-127,-131,125,-90,-37,-147,71,-80,-79,-90,-90,-133,-134,-164,-159,-163,-161,-160,-162,-36,61,183,-90,-125,-90,-126,-53,-90,198,-165,-90,-90,-90,-90,-90,-90,-90,-90,61,-38,-24,-85,-86,-90,-74,-90,-90,-90,-143,-140,183,-114,-72,-90,-50,-73,-40,-90,]),'IF':([38,46,47,57,58,59,63,64,65,69,75,79,104,105,144,145,156,179,182,185,202,220,222,233,235,245,246,248,],[-21,62,-21,-49,62,-47,-46,-48,-20,-22,-30,-37,-37,-147,-36,62,-53,62,-38,-24,-74,-143,-140,-114,-72,-50,-73,-40,]),'AND':([84,88,89,90,99,100,101,112,115,119,120,121,122,123,124,125,126,135,137,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,203,204,205,206,207,208,209,210,215,218,224,225,242,243,253,255,],[-129,-81,-130,-75,132,-136,-70,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-59,-63,-76,-82,-157,-155,-154,-153,-98,-156,-77,-83,-132,-96,-94,-93,-92,-101,-95,-135,-135,-66,-64,-69,-67,-65,-68,-87,-91,132,132,-99,-100,-152,-115,]),'CHAR':([10,34,44,81,102,213,],[18,18,18,18,18,18,]),'LBRACE':([21,33,68,167,170,199,223,236,],[-146,38,79,-142,38,38,-139,38,]),'INT':([10,34,44,81,102,213,],[19,19,19,19,19,19,]),'CTEBOOL':([72,77,85,86,87,93,94,96,113,114,118,130,132,134,136,138,139,140,141,142,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,244,257,],[-90,-90,-128,-89,-127,-131,126,-90,-80,-79,-90,-90,-133,-134,-164,-159,-163,-161,-160,-162,-90,-125,-90,-126,-90,-165,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,-90,-90,]),'FLOAT':([10,34,44,81,102,213,],[15,15,15,15,15,15,]),'BOOL':([10,34,44,81,102,213,],[20,20,20,20,20,20,]),'RBRACKET':([36,84,88,89,90,112,115,119,120,121,122,123,124,125,126,151,153,160,161,162,163,164,165,169,186,188,191,192,193,194,195,196,197,215,218,242,243,253,255,],[43,-129,-81,-130,-75,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-157,-155,-154,-153,-98,-156,201,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-152,-115,]),'MAIN':([5,6,7,8,11,12,13,22,24,66,80,107,147,184,247,],[-145,-4,-103,-4,21,-103,-3,-102,-5,-7,-105,-148,-149,-104,-33,]),'OR':([84,88,89,90,99,100,101,112,115,119,120,121,122,123,124,125,126,135,137,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,203,204,205,206,207,208,209,210,215,218,224,225,242,243,253,255,],[-129,-81,-130,-75,134,-136,-70,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-59,-63,-76,-82,-157,-155,-154,-153,-98,-156,-77,-83,-132,-96,-94,-93,-92,-101,-95,-135,-135,-66,-64,-69,-67,-65,-68,-87,-91,134,134,-99,-100,-152,-115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([6,8,],[8,8,]),'menor':([141,],[177,]),'bloque':([33,170,199,236,],[39,202,220,246,]),'mayor':([138,],[174,]),'mayorIg':([140,],[176,]),'ambCicloTermino':([115,],[153,]),'auxLlamada':([244,],[250,]),'igual':([139,],[175,]),'factor':([72,77,96,118,130,150,154,157,171,172,173,174,175,176,177,178,200,212,216,217,244,257,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'addTypeGlobalFuncion':([227,],[240,]),'initDicFunc':([29,],[37,]),'idVarsMain':([54,110,],[70,149,]),'paso2_div':([155,],[189,]),'cteLlamada':([219,],[232,]),'cicloBloque':([46,58,],[60,74,]),'cteChar':([161,],[193,]),'cicloTermino':([72,77,96,118,130,150,154,157,171,172,173,174,175,176,177,178,200,212,216,217,244,257,],[88,88,88,88,88,88,188,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'expresion':([77,96,171,172,212,],[100,100,100,100,226,]),'bloqueFuncion':([68,],[80,]),'parametros':([44,],[53,]),'ambExp':([112,],[151,]),'addVariableDirMain':([71,],[82,]),'paso5':([89,],[115,]),'auxVar1':([14,],[24,]),'expAndOr':([77,96,],[98,128,]),'createVariableDir':([6,8,],[9,9,]),'argumentos':([244,],[249,]),'ciclo':([46,58,145,179,],[57,57,57,57,]),'tipo':([10,34,44,81,102,213,],[17,40,50,108,50,227,]),'asig':([168,],[200,]),'llamada':([94,],[123,]),'condicion':([46,58,145,179,],[59,59,59,59,]),'cicloBloqueFuncion':([145,179,],[180,211,]),'auxArgumentos1':([244,257,],[251,258,]),'cicloExp':([72,77,96,118,130,150,157,171,172,173,174,175,176,177,178,200,212,216,217,244,257,],[90,90,90,90,90,186,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'paso12':([98,],[131,]),'auxEscritura1':([72,157,],[91,190,]),'auxEscritura2':([72,157,],[92,92,]),'ambIdVarsMain':([82,],[109,]),'paso11':([221,],[234,]),'paso8_or':([134,],[172,]),'paso16':([167,],[199,]),'auxExp':([72,77,96,112,118,130,150,154,157,171,172,173,174,175,176,177,178,200,212,216,217,244,257,],[86,86,86,150,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'cicloExpresion':([77,96,171,172,],[99,99,203,204,]),'auxCicloExpresion':([99,224,225,],[133,237,238,]),'auxAsignacion1':([97,],[129,]),'cicloVarsFuncion':([79,104,],[105,144,]),'escritura':([46,58,145,179,],[64,64,64,64,]),'paso19':([5,],[6,]),'addParameters':([67,],[78,]),'addVariableDirFuncion':([183,],[214,]),'auxCondicion':([202,],[222,]),'termino':([72,77,96,118,130,150,157,171,172,173,174,175,176,177,178,200,212,216,217,244,257,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'paso3_resta':([85,],[113,]),'addProcDirectoryFunc':([80,],[107,]),'paso13':([223,],[236,]),'paso10':([100,],[135,]),'createVariableDirMain':([38,47,],[45,45,]),'addVariableDir':([25,],[35,]),'paso17':([220,],[233,]),'paso14':([222,],[235,]),'paso15':([56,],[73,]),'paso18':([92,],[117,]),'estatuto':([46,58,145,179,],[58,58,179,179,]),'ambAuxEscritura1':([117,],[158,]),'diferente':([136,],[173,]),'cteString':([160,],[192,]),'cicloVars':([6,8,],[7,13,]),'paso9':([203,204,],[224,225,]),'paso1':([61,83,119,120,122,124,125,126,],[76,111,160,161,162,163,164,165,]),'paso4':([84,],[112,]),'varsMain':([38,47,],[47,47,]),'paso6':([93,],[118,]),'paso7':([191,],[215,]),'asignacion':([46,58,145,179,],[63,63,63,63,]),'cteBool':([165,],[197,]),'addProcedureDir':([3,],[4,]),'cteInt':([163,],[195,]),'paso8_and':([132,],[171,]),'ambAuxTipo1':([15,16,18,19,20,],[27,28,30,31,32,]),'menorIg':([142,],[178,]),'auxVar1Main':([54,],[69,]),'cteFloat':([162,],[194,]),'auxVarcte':([196,],[218,]),'ambIdVars':([35,],[41,]),'paso25':([252,],[254,]),'cicloVarsMain':([38,47,],[46,65,]),'addTypeGlobal':([40,],[48,]),'auxExpresion':([101,],[137,]),'varsFuncion':([79,104,],[104,104,]),'auxFunction':([44,],[51,]),'auxParametros':([44,102,],[52,143,]),'auxVar1Funcion':([146,],[182,]),'createVariableDirFuncion':([79,104,],[106,106,]),'addType':([76,164,],[97,196,]),'funcion':([7,12,],[12,12,]),'ambAuxArgumentos1':([254,],[256,]),'auxTermino':([115,],[154,]),'auxFactor':([72,77,96,118,130,150,154,157,171,172,173,174,175,176,177,178,200,212,216,217,244,257,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'varcte':([94,],[121,]),'paso3_suma':([87,],[114,]),'idVars':([14,42,],[23,49,]),'paso23':([147,],[184,]),'paso22':([107,],[147,]),'idVarsFuncion':([146,229,],[181,241,]),'paso20':([21,],[33,]),'paso26':([253,],[255,]),'paso2_mult':([152,],[187,]),'paso24':([198,],[219,]),'paso21':([105,],[145,]),'cicloFuncion':([7,12,],[11,22,]),'programa':([0,],[2,]),'exp':([72,77,96,118,130,157,171,172,173,174,175,176,177,178,200,212,216,217,244,257,],[95,101,101,159,169,95,101,101,205,206,207,208,209,210,221,101,230,231,252,252,]),'ambAuxParametros':([78,],[103,]),'ambIdVarsFuncion':([214,],[228,]),'addTypeGlobalMain':([108,],[148,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque','programa',10,'p_programa','MyLittleDucky.py',82),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',86),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',94),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',95),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',98),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',101),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',106),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',109),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',118),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',121),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',131),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',132),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',135),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',136),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',137),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',138),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',139),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',144),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',145),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',148),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',149),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',152),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',155),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',160),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',163),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',173),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',176),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',186),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',187),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',190),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',193),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',194),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE','bloqueFuncion',8,'p_bloqueFuncion','MyLittleDucky.py',197),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',200),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',201),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',204),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',205),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',208),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',211),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',216),
  ('addTypeGlobalFuncion -> <empty>','addTypeGlobalFuncion',0,'p_addTypeGlobalFuncion','MyLittleDucky.py',219),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',229),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',232),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',245),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',246),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',249),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',250),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',251),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',252),
  ('asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON','asignacion',9,'p_asignacion','MyLittleDucky.py',257),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',261),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',262),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',265),
  ('auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1','auxEscritura1',3,'p_auxEscritura1','MyLittleDucky.py',269),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',272),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',273),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',276),
  ('auxEscritura2 -> CTESTRING paso1','auxEscritura2',2,'p_auxEscritura2','MyLittleDucky.py',277),
  ('cicloExpresion -> expresion paso10','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',280),
  ('auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',284),
  ('auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',285),
  ('auxCicloExpresion -> <empty>','auxCicloExpresion',0,'p_auxCicloExpresion','MyLittleDucky.py',286),
  ('expresion -> exp auxExpresion','expresion',2,'p_expresion','MyLittleDucky.py',289),
  ('auxExpresion -> GTHAN mayor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',293),
  ('auxExpresion -> LTHAN menor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',294),
  ('auxExpresion -> NOTEQUAL diferente exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',295),
  ('auxExpresion -> GETHAN mayorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',296),
  ('auxExpresion -> LETHAN menorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',297),
  ('auxExpresion -> EQUAL igual exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',298),
  ('auxExpresion -> <empty>','auxExpresion',0,'p_auxExpresion','MyLittleDucky.py',299),
  ('expAndOr -> cicloExpresion auxCicloExpresion','expAndOr',2,'p_expAndOr','MyLittleDucky.py',302),
  ('condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14','condicion',8,'p_condicion','MyLittleDucky.py',305),
  ('auxCondicion -> ELSE paso13 bloque','auxCondicion',3,'p_auxCondicion','MyLittleDucky.py',309),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',310),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',313),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',316),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',319),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',320),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',323),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',324),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',327),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',330),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',333),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',334),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',337),
  ('auxTermino -> DIVIDE paso2_div','auxTermino',2,'p_auxTermino','MyLittleDucky.py',338),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',341),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',342),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',345),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',346),
  ('varcte -> ID paso1 addType auxVarcte','varcte',4,'p_varcte','MyLittleDucky.py',349),
  ('varcte -> CTEINT paso1 cteInt','varcte',3,'p_varcte','MyLittleDucky.py',350),
  ('varcte -> CTEFLOAT paso1 cteFloat','varcte',3,'p_varcte','MyLittleDucky.py',351),
  ('varcte -> CTECHAR paso1 cteChar','varcte',3,'p_varcte','MyLittleDucky.py',352),
  ('varcte -> CTEBOOL paso1 cteBool','varcte',3,'p_varcte','MyLittleDucky.py',353),
  ('varcte -> CTESTRING paso1 cteString','varcte',3,'p_varcte','MyLittleDucky.py',354),
  ('varcte -> llamada','varcte',1,'p_varcte','MyLittleDucky.py',355),
  ('addType -> <empty>','addType',0,'p_addType','MyLittleDucky.py',372),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',387),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',388),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',389),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',392),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',393),
  ('funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23','funcion',11,'p_funcion','MyLittleDucky.py',396),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',399),
  ('initDicFunc -> <empty>','initDicFunc',0,'p_initDicFunc','MyLittleDucky.py',415),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',421),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',422),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',425),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',428),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',431),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',451),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',452),
  ('ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17','ciclo',8,'p_ciclo','MyLittleDucky.py',455),
  ('llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26','llamada',9,'p_llamada','MyLittleDucky.py',459),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',463),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',464),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',467),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',468),
  ('auxArgumentos1 -> exp paso25 ambAuxArgumentos1','auxArgumentos1',3,'p_auxArgumentos1','MyLittleDucky.py',471),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',474),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',475),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',478),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',484),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',489),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',493),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',497),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',501),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',505),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',533),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',564),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',568),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',576),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',580),
  ('paso9 -> <empty>','paso9',0,'p_paso9','MyLittleDucky.py',584),
  ('paso10 -> <empty>','paso10',0,'p_paso10','MyLittleDucky.py',615),
  ('paso11 -> <empty>','paso11',0,'p_paso11','MyLittleDucky.py',646),
  ('paso12 -> <empty>','paso12',0,'p_paso12','MyLittleDucky.py',685),
  ('paso13 -> <empty>','paso13',0,'p_paso13','MyLittleDucky.py',705),
  ('paso14 -> <empty>','paso14',0,'p_paso14','MyLittleDucky.py',717),
  ('paso15 -> <empty>','paso15',0,'p_paso15','MyLittleDucky.py',725),
  ('paso16 -> <empty>','paso16',0,'p_paso16','MyLittleDucky.py',731),
  ('paso17 -> <empty>','paso17',0,'p_paso17','MyLittleDucky.py',751),
  ('paso18 -> <empty>','paso18',0,'p_paso18','MyLittleDucky.py',761),
  ('paso19 -> <empty>','paso19',0,'p_paso19','MyLittleDucky.py',773),
  ('paso20 -> <empty>','paso20',0,'p_paso20','MyLittleDucky.py',782),
  ('paso21 -> <empty>','paso21',0,'p_paso21','MyLittleDucky.py',789),
  ('paso22 -> <empty>','paso22',0,'p_paso22','MyLittleDucky.py',801),
  ('paso23 -> <empty>','paso23',0,'p_paso23','MyLittleDucky.py',816),
  ('paso24 -> <empty>','paso24',0,'p_paso24','MyLittleDucky.py',835),
  ('paso25 -> <empty>','paso25',0,'p_paso25','MyLittleDucky.py',852),
  ('paso26 -> <empty>','paso26',0,'p_paso26','MyLittleDucky.py',868),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',878),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',882),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',887),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',892),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',897),
  ('cteLlamada -> <empty>','cteLlamada',0,'p_cteLlamada','MyLittleDucky.py',901),
  ('mayor -> <empty>','mayor',0,'p_mayor','MyLittleDucky.py',912),
  ('menor -> <empty>','menor',0,'p_menor','MyLittleDucky.py',916),
  ('mayorIg -> <empty>','mayorIg',0,'p_mayorIg','MyLittleDucky.py',920),
  ('menorIg -> <empty>','menorIg',0,'p_menorIg','MyLittleDucky.py',924),
  ('igual -> <empty>','igual',0,'p_igual','MyLittleDucky.py',928),
  ('diferente -> <empty>','diferente',0,'p_diferente','MyLittleDucky.py',932),
  ('asig -> <empty>','asig',0,'p_asig','MyLittleDucky.py',936),
]
