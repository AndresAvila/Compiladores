
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1F302E7E7D768FECA110CB3CABA14872'
    
_lr_action_items = {'NOTEQUAL':([87,91,92,93,104,115,118,122,123,124,125,126,127,128,130,154,156,163,164,165,166,167,169,189,191,194,195,196,197,198,199,201,218,219,220,221,222,225,227,252,260,265,266,268,269,],[-136,-83,-137,-77,139,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-161,-107,-122,]),'MULTI':([92,118,122,123,124,125,126,127,128,130,163,164,165,166,167,169,194,195,196,197,198,199,201,218,219,220,221,222,225,227,252,260,265,266,268,269,],[-137,155,-131,-131,-90,-131,-99,-131,-131,-131,-168,-166,-165,-164,-105,-167,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-161,-107,-122,]),'GTHAN':([87,91,92,93,104,115,118,122,123,124,125,126,127,128,130,154,156,163,164,165,166,167,169,189,191,194,195,196,197,198,199,201,218,219,220,221,222,225,227,252,260,265,266,268,269,],[-136,-83,-137,-77,141,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-161,-107,-122,]),'RETURN':([60,62,66,67,78,82,107,108,147,148,159,182,183,185,205,214,228,231,242,245,255,257,259,],[-51,-49,-48,-50,-32,-39,-39,-156,-38,-37,-55,-37,215,-40,-76,-36,-152,-149,-121,-74,-52,-75,-42,]),'EQUAL':([87,91,92,93,104,115,118,122,123,124,125,126,127,128,130,154,156,163,164,165,166,167,169,189,191,194,195,196,197,198,199,201,218,219,220,221,222,225,227,252,260,265,266,268,269,],[-136,-83,-137,-77,142,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-161,-107,-122,]),'GETHAN':([87,91,92,93,104,115,118,122,123,124,125,126,127,128,130,154,156,163,164,165,166,167,169,189,191,194,195,196,197,198,199,201,218,219,220,221,222,225,227,252,260,265,266,268,269,],[-136,-83,-137,-77,143,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-161,-107,-122,]),'LBRACKET':([16,17,19,20,21,64,79,100,128,167,199,],[27,27,27,27,27,-131,-105,133,-131,-105,224,]),'WHILE':([39,47,48,60,61,62,66,67,68,72,78,82,107,108,147,148,159,182,185,188,205,228,231,242,245,255,257,259,],[-23,59,-23,-51,59,-49,-48,-50,-22,-24,-32,-39,-39,-156,-38,59,-55,59,-40,-26,-76,-152,-149,-121,-74,-52,-75,-42,]),'PROGRAM':([0,],[1,]),'PRINT':([39,47,48,60,61,62,66,67,68,72,78,82,107,108,147,148,159,182,185,188,205,228,231,242,245,255,257,259,],[-23,58,-23,-51,58,-49,-48,-50,-22,-24,-32,-39,-39,-156,-38,58,-55,58,-40,-26,-76,-152,-149,-121,-74,-52,-75,-42,]),'CTESTRING':([75,80,88,89,90,96,97,99,116,117,121,133,135,137,139,141,142,143,144,145,153,155,157,158,160,171,172,174,175,176,177,178,179,180,181,190,192,203,215,223,224,240,254,271,],[86,-92,-135,-91,-134,-138,122,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,86,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-92,-92,]),'LETHAN':([87,91,92,93,104,115,118,122,123,124,125,126,127,128,130,154,156,163,164,165,166,167,169,189,191,194,195,196,197,198,199,201,218,219,220,221,222,225,227,252,260,265,266,268,269,],[-136,-83,-137,-77,145,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-161,-107,-122,]),'MINUS':([75,80,87,88,90,91,92,96,99,115,116,117,118,121,122,123,124,125,126,127,128,130,133,135,137,139,141,142,143,144,145,153,155,156,157,158,160,163,164,165,166,167,169,171,172,174,175,176,177,178,179,180,181,190,191,192,194,195,196,197,198,199,201,203,215,218,219,220,221,222,223,224,225,227,240,252,254,260,265,266,268,269,271,],[88,88,-136,-135,-134,-83,-137,-138,88,88,-82,-81,-86,88,-131,-131,-90,-131,-99,-131,-131,-131,-140,-142,-143,-175,-170,-174,-172,-171,-173,88,-132,-84,88,-133,88,-168,-166,-165,-164,-105,-167,-176,88,88,88,88,88,88,88,88,88,-87,-85,-88,-139,-104,-102,-101,-100,-108,-103,88,88,-89,-98,-96,-95,-94,88,-140,-93,-97,88,-106,88,-141,-162,-161,-107,-122,88,]),'RBRACE':([39,47,48,60,61,62,63,66,67,68,72,77,78,159,188,205,228,231,242,245,249,255,257,],[-23,-34,-23,-51,-34,-49,78,-48,-50,-22,-24,-33,-32,-55,-26,-76,-152,-149,-121,-74,258,-52,-75,]),'RPAREN':([45,54,55,56,70,81,86,87,91,92,93,94,95,98,101,102,103,104,106,114,115,118,120,122,123,124,125,126,127,128,130,131,134,136,138,140,146,154,156,161,162,163,164,165,166,167,169,189,191,193,194,195,196,197,198,199,201,206,207,208,209,210,211,212,213,218,219,220,221,222,225,227,233,234,239,247,248,252,254,260,261,262,263,264,265,266,267,268,269,270,272,],[-115,71,-116,-114,-118,-120,-131,-136,-83,-137,-77,119,-153,-59,-147,-64,-145,-72,-117,-60,-80,-86,-58,-131,-131,-90,-131,-99,-131,-131,-131,170,173,-73,-61,-65,-119,-78,-84,-56,194,-168,-166,-165,-164,-105,-167,-79,-85,-57,-139,-104,-102,-101,-100,-108,-103,-144,-144,-68,-66,-71,-69,-67,-70,-89,-98,-96,-95,-94,-93,-97,-64,-64,252,-62,-63,-106,-124,-141,-123,266,-125,-160,-162,-161,-129,-107,-122,-127,-128,]),'SEMICOLON':([3,4,16,17,19,20,21,26,28,29,31,32,33,41,44,50,52,87,91,92,93,104,111,115,118,119,122,123,124,125,126,127,128,130,140,151,154,156,163,164,165,166,167,169,189,191,194,195,196,197,198,199,201,208,209,210,211,212,213,218,219,220,221,222,225,227,229,235,236,243,250,252,260,265,266,268,269,],[-2,5,-21,-21,-21,-21,-21,-16,-19,-15,-17,-13,-14,-8,-20,69,-18,-136,-83,-137,-77,-72,-27,-80,-86,159,-131,-131,-90,-131,-99,-131,-131,-131,-65,188,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-68,-66,-71,-69,-67,-70,-89,-98,-96,-95,-94,-93,-97,-146,249,-43,255,259,-106,-141,-162,-161,-107,-122,]),'CTEFLOAT':([75,80,88,89,90,96,97,99,116,117,121,133,135,137,139,141,142,143,144,145,153,155,157,158,160,171,172,174,175,176,177,178,179,180,181,190,192,203,215,223,224,240,254,271,],[-92,-92,-135,-91,-134,-138,125,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,-92,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-92,-92,]),'CALL':([75,80,88,89,90,96,97,99,116,117,121,133,135,137,139,141,142,143,144,145,153,155,157,158,160,171,172,174,175,176,177,178,179,180,181,190,192,203,215,223,224,240,254,271,],[-92,-92,-135,-91,-134,-138,129,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,-92,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-92,-92,]),'PLUS':([75,80,87,88,90,91,92,96,99,115,116,117,118,121,122,123,124,125,126,127,128,130,133,135,137,139,141,142,143,144,145,153,155,156,157,158,160,163,164,165,166,167,169,171,172,174,175,176,177,178,179,180,181,190,191,192,194,195,196,197,198,199,201,203,215,218,219,220,221,222,223,224,225,227,240,252,254,260,265,266,268,269,271,],[90,90,-136,-135,-134,-83,-137,-138,90,90,-82,-81,-86,90,-131,-131,-90,-131,-99,-131,-131,-131,-140,-142,-143,-175,-170,-174,-172,-171,-173,90,-132,-84,90,-133,90,-168,-166,-165,-164,-105,-167,-176,90,90,90,90,90,90,90,90,90,-87,-85,-88,-139,-104,-102,-101,-100,-108,-103,90,90,-89,-98,-96,-95,-94,90,-140,-93,-97,90,-106,90,-141,-162,-161,-107,-122,90,]),'COLON':([23,25,36,42,51,73,74,85,112,129,152,184,186,217,237,251,],[35,-10,-12,-9,-11,84,-29,-31,-28,168,-30,216,-45,-47,-44,-46,]),'COMMA':([25,36,70,74,81,85,86,87,91,92,93,95,98,114,115,118,120,122,123,124,125,126,127,128,130,154,156,163,164,165,166,167,169,186,189,191,194,195,196,197,198,199,201,217,218,219,220,221,222,225,227,252,260,264,265,266,267,268,269,],[-10,43,-118,-29,105,113,-131,-136,-83,-137,-77,-153,-59,-60,-80,-86,160,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-45,-79,-85,-139,-104,-102,-101,-100,-108,-103,238,-89,-98,-96,-95,-94,-93,-97,-106,-141,-160,-162,-161,271,-107,-122,]),'EQUALA':([64,79,100,132,230,244,256,],[-131,-105,-54,171,-141,-162,-53,]),'$end':([2,40,49,78,],[0,-163,-1,-32,]),'FUNCTION':([5,6,7,8,10,13,24,69,83,110,150,187,258,],[-154,-4,11,-4,11,-3,-5,-7,-112,-157,-158,-111,-35,]),'STRING':([11,35,45,84,105,216,],[17,17,17,17,17,17,]),'CTEINT':([27,75,80,88,89,90,96,97,99,116,117,121,133,135,137,139,141,142,143,144,145,153,155,157,158,160,171,172,174,175,176,177,178,179,180,181,190,192,203,215,223,224,240,254,271,],[37,-92,-92,-135,-91,-134,-138,127,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,-92,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-92,-92,]),'DIVIDE':([92,118,122,123,124,125,126,127,128,130,163,164,165,166,167,169,194,195,196,197,198,199,201,218,219,220,221,222,225,227,252,260,265,266,268,269,],[-137,158,-131,-131,-90,-131,-99,-131,-131,-131,-168,-166,-165,-164,-105,-167,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-161,-107,-122,]),'ELSE':([78,205,],[-32,232,]),'LTHAN':([87,91,92,93,104,115,118,122,123,124,125,126,127,128,130,154,156,163,164,165,166,167,169,189,191,194,195,196,197,198,199,201,218,219,220,221,222,225,227,252,260,265,266,268,269,],[-136,-83,-137,-77,144,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-89,-98,-96,-95,-94,-93,-97,-106,-141,-162,-161,-107,-122,]),'LPAREN':([30,38,58,59,65,75,76,80,88,90,96,99,116,117,121,128,133,135,137,139,141,142,143,144,145,153,155,157,158,160,167,171,172,174,175,176,177,178,179,180,181,190,192,199,200,203,215,223,224,226,240,241,254,271,],[-113,45,75,-150,80,96,99,96,-135,-134,-138,96,-82,-81,96,-131,-140,-142,-143,-175,-170,-174,-172,-171,-173,96,-132,96,-133,96,-105,-176,96,96,96,96,96,96,96,96,96,-87,-88,223,-159,96,96,96,-140,-169,96,254,96,96,]),'VAR':([5,6,8,9,24,39,46,48,69,72,82,107,109,185,188,259,],[-154,-6,-6,14,-5,-25,57,-25,-7,-24,-41,-41,149,-40,-26,-42,]),'CTECHAR':([75,80,88,89,90,96,97,99,116,117,121,133,135,137,139,141,142,143,144,145,153,155,157,158,160,171,172,174,175,176,177,178,179,180,181,190,192,203,215,223,224,240,254,271,],[-92,-92,-135,-91,-134,-138,123,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,-92,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-92,-92,]),'ID':([1,14,16,17,18,19,20,21,26,28,29,31,32,33,39,43,44,47,48,52,53,57,60,61,62,66,67,68,72,75,78,80,82,88,89,90,96,97,99,107,108,113,116,117,121,133,135,137,139,141,142,143,144,145,147,148,149,153,155,157,158,159,160,168,171,172,174,175,176,177,178,179,180,181,182,185,188,190,192,203,205,215,223,224,228,231,238,240,242,245,254,255,257,259,271,],[3,25,-21,-21,30,-21,-21,-21,-16,-19,-15,-17,-13,-14,-23,25,-20,64,-23,-18,70,74,-51,64,-49,-48,-50,-22,-24,-92,-32,-92,-39,-135,-91,-134,-138,128,-92,-39,-156,74,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-38,64,186,-92,-132,-92,-133,-55,-92,200,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,64,-40,-26,-87,-88,-92,-76,-92,-92,-140,-152,-149,186,-92,-121,-74,-92,-52,-75,-42,-92,]),'IF':([39,47,48,60,61,62,66,67,68,72,78,82,107,108,147,148,159,182,185,188,205,228,231,242,245,255,257,259,],[-23,65,-23,-51,65,-49,-48,-50,-22,-24,-32,-39,-39,-156,-38,65,-55,65,-40,-26,-76,-152,-149,-121,-74,-52,-75,-42,]),'AND':([87,91,92,93,102,103,104,115,118,122,123,124,125,126,127,128,130,138,140,154,156,163,164,165,166,167,169,189,191,194,195,196,197,198,199,201,206,207,208,209,210,211,212,213,218,219,220,221,222,225,227,233,234,252,260,265,266,268,269,],[-136,-83,-137,-77,135,-145,-72,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-61,-65,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-144,-144,-68,-66,-71,-69,-67,-70,-89,-98,-96,-95,-94,-93,-97,135,135,-106,-141,-162,-161,-107,-122,]),'CHAR':([11,35,45,84,105,216,],[19,19,19,19,19,19,]),'LBRACE':([22,34,71,170,173,202,232,246,],[-155,39,82,-151,39,39,-148,39,]),'INT':([11,35,45,84,105,216,],[20,20,20,20,20,20,]),'CTEBOOL':([75,80,88,89,90,96,97,99,116,117,121,133,135,137,139,141,142,143,144,145,153,155,157,158,160,171,172,174,175,176,177,178,179,180,181,190,192,203,215,223,224,240,254,271,],[-92,-92,-135,-91,-134,-138,130,-92,-82,-81,-92,-140,-142,-143,-175,-170,-174,-172,-171,-173,-92,-132,-92,-133,-92,-176,-92,-92,-92,-92,-92,-92,-92,-92,-92,-87,-88,-92,-92,-92,-140,-92,-92,-92,]),'FLOAT':([11,35,45,84,105,216,],[16,16,16,16,16,16,]),'BOOL':([11,35,45,84,105,216,],[21,21,21,21,21,21,]),'RBRACKET':([37,87,91,92,93,115,118,122,123,124,125,126,127,128,130,154,156,163,164,165,166,167,169,189,191,194,195,196,197,198,199,201,204,218,219,220,221,222,225,227,252,253,260,265,266,268,269,],[44,-136,-83,-137,-77,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,230,-89,-98,-96,-95,-94,-93,-97,-106,260,-141,-162,-161,-107,-122,]),'MAIN':([5,6,7,8,10,12,13,15,24,69,83,110,150,187,258,],[-154,-4,-110,-4,-110,22,-3,-109,-5,-7,-112,-157,-158,-111,-35,]),'OR':([87,91,92,93,102,103,104,115,118,122,123,124,125,126,127,128,130,138,140,154,156,163,164,165,166,167,169,189,191,194,195,196,197,198,199,201,206,207,208,209,210,211,212,213,218,219,220,221,222,225,227,233,234,252,260,265,266,268,269,],[-136,-83,-137,-77,137,-145,-72,-80,-86,-131,-131,-90,-131,-99,-131,-131,-131,-61,-65,-78,-84,-168,-166,-165,-164,-105,-167,-79,-85,-139,-104,-102,-101,-100,-108,-103,-144,-144,-68,-66,-71,-69,-67,-70,-89,-98,-96,-95,-94,-93,-97,137,137,-106,-141,-162,-161,-107,-122,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([6,8,],[8,8,]),'menor':([144,],[180,]),'bloque':([34,173,202,246,],[40,205,228,257,]),'mayor':([141,],[177,]),'mayorIg':([143,],[179,]),'ambCicloTermino':([118,],[156,]),'auxLlamada':([254,],[262,]),'igual':([142,],[178,]),'factor':([75,80,99,121,153,157,160,172,174,175,176,177,178,179,180,181,203,215,223,240,254,271,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'paso6b':([133,224,],[172,240,]),'assignDirectionCteInt':([198,],[222,]),'initDicFunc':([30,],[38,]),'idVarsMain':([57,113,],[73,152,]),'paso2_div':([158,],[192,]),'addTypeMain':([111,],[151,]),'cteLlamada':([226,],[241,]),'cicloBloque':([47,61,],[63,77,]),'cteChar':([164,],[196,]),'assignDirectionCteBool':([201,],[227,]),'cicloTermino':([75,80,99,121,153,157,160,172,174,175,176,177,178,179,180,181,203,215,223,240,254,271,],[91,91,91,91,91,191,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'expresion':([80,99,174,175,215,],[103,103,103,103,235,]),'bloqueFuncion':([71,],[83,]),'assignDirectionCteChar':([196,],[220,]),'parametros':([45,],[56,]),'ambExp':([115,],[154,]),'addVariableDirMain':([74,],[85,]),'paso5':([92,],[118,]),'auxVar1':([14,],[24,]),'expAndOr':([80,99,],[101,131,]),'createVariableDir':([6,8,],[9,9,]),'assignDirectionCteString':([195,],[219,]),'argumentos':([254,],[261,]),'ciclo':([47,61,148,182,],[60,60,60,60,]),'tipo':([11,35,45,84,105,216,],[18,41,53,111,53,236,]),'asig':([171,],[203,]),'llamada':([97,],[126,]),'condicion':([47,61,148,182,],[62,62,62,62,]),'noEsArr':([16,17,19,20,21,],[28,28,28,28,28,]),'cicloBloqueFuncion':([148,182,],[183,214,]),'auxArgumentos1':([254,271,],[263,272,]),'cicloExp':([75,80,99,121,153,160,172,174,175,176,177,178,179,180,181,203,215,223,240,254,271,],[93,93,93,93,189,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'addProcDirectoryFunc':([83,],[110,]),'auxEscritura1':([75,160,],[94,193,]),'auxEscritura2':([75,160,],[95,95,]),'ambIdVarsMain':([85,],[112,]),'paso11':([229,],[243,]),'paso8_or':([137,],[175,]),'paso16':([170,],[202,]),'auxExp':([75,80,99,115,121,153,157,160,172,174,175,176,177,178,179,180,181,203,215,223,240,254,271,],[89,89,89,153,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'paso7b':([230,260,],[244,265,]),'cicloExpresion':([80,99,174,175,],[102,102,206,207,]),'auxCicloExpresion':([102,233,234,],[136,247,248,]),'auxAsignacion1':([100,],[132,]),'cicloVarsFuncion':([82,107,],[108,147,]),'escritura':([47,61,148,182,],[67,67,67,67,]),'paso19':([5,],[6,]),'addParameters':([70,],[81,]),'addVariableDirFuncion':([186,],[217,]),'auxCondicion':([205,],[231,]),'termino':([75,80,99,121,153,160,172,174,175,176,177,178,179,180,181,203,215,223,240,254,271,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'paso3_resta':([88,],[116,]),'paso12':([101,],[134,]),'paso13':([232,],[246,]),'paso10':([103,],[138,]),'createVariableDirMain':([39,48,],[46,46,]),'addVariableDir':([25,],[36,]),'paso17':([228,],[242,]),'paso14':([231,],[245,]),'paso15':([59,],[76,]),'paso18':([95,],[120,]),'estatuto':([47,61,148,182,],[61,61,182,182,]),'ambAuxEscritura1':([120,],[161,]),'diferente':([139,],[176,]),'cteString':([163,],[195,]),'addTypeFuncion':([236,],[250,]),'cicloVars':([6,8,],[7,13,]),'paso9':([206,207,],[233,234,]),'paso1':([64,86,122,123,125,127,128,130,],[79,114,163,164,165,166,167,169,]),'paso4':([87,],[115,]),'varsMain':([39,48,],[48,48,]),'paso6':([96,],[121,]),'paso7':([194,],[218,]),'esArr':([44,],[52,]),'asignacion':([47,61,148,182,],[66,66,66,66,]),'cteBool':([169,],[201,]),'addProcedureDir':([3,],[4,]),'cteInt':([166,],[198,]),'paso21':([108,],[148,]),'ambAuxTipo1':([16,17,19,20,21,],[26,29,31,32,33,]),'menorIg':([145,],[181,]),'auxVar1Main':([57,],[72,]),'cteFloat':([165,],[197,]),'auxVarcte':([199,],[225,]),'ambIdVars':([36,],[42,]),'paso25':([264,],[267,]),'cicloVarsMain':([39,48,],[47,68,]),'addTypeGlobal':([41,],[50,]),'auxExpresion':([104,],[140,]),'varsFuncion':([82,107,],[107,107,]),'auxFunction':([45,],[54,]),'auxParametros':([45,105,],[55,146,]),'idVarsFuncion':([149,238,],[184,251,]),'auxVar1Funcion':([149,],[185,]),'createVariableDirFuncion':([82,107,],[109,109,]),'addType':([79,167,],[100,199,]),'funcion':([7,10,],[10,10,]),'ambAuxArgumentos1':([267,],[270,]),'pasoFinal':([40,],[49,]),'auxTermino':([118,],[157,]),'auxFactor':([75,80,99,121,153,157,160,172,174,175,176,177,178,179,180,181,203,215,223,240,254,271,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'varcte':([97,],[124,]),'paso3_suma':([90,],[117,]),'idVars':([14,43,],[23,51,]),'paso23':([150,],[187,]),'paso22':([110,],[150,]),'paso8_and':([135,],[174,]),'paso20':([22,],[34,]),'paso27':([244,265,],[256,268,]),'paso26':([266,],[269,]),'paso2_mult':([155,],[190,]),'paso24':([200,],[226,]),'cicloFuncion':([7,10,],[12,15,]),'programa':([0,],[2,]),'exp':([75,80,99,121,160,172,174,175,176,177,178,179,180,181,203,215,223,240,254,271,],[98,104,104,162,98,204,104,104,208,209,210,211,212,213,229,104,239,253,264,264,]),'ambAuxParametros':([81,],[106,]),'ambIdVarsFuncion':([217,],[237,]),'assignDirectionCteFloat':([197,],[221,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal','programa',11,'p_programa','MyLittleDucky.py',486),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',490),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',498),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',499),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',502),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',505),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',510),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',513),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',582),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',585),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',597),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',598),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',601),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',602),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',603),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',604),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',605),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr','ambAuxTipo1',4,'p_ambAuxTipo1','MyLittleDucky.py',610),
  ('ambAuxTipo1 -> noEsArr','ambAuxTipo1',1,'p_ambAuxTipo1','MyLittleDucky.py',611),
  ('esArr -> <empty>','esArr',0,'p_esArr','MyLittleDucky.py',614),
  ('noEsArr -> <empty>','noEsArr',0,'p_noEsArr','MyLittleDucky.py',621),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',626),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',627),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',630),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',633),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',638),
  ('addTypeMain -> <empty>','addTypeMain',0,'p_addTypeMain','MyLittleDucky.py',641),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',710),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',713),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',724),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',725),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',728),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',731),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',732),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE','bloqueFuncion',8,'p_bloqueFuncion','MyLittleDucky.py',735),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',738),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',739),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',742),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',743),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',746),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',749),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',754),
  ('addTypeFuncion -> <empty>','addTypeFuncion',0,'p_addTypeFuncion','MyLittleDucky.py',757),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',827),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',830),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',844),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',845),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',848),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',849),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',850),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',851),
  ('asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON','asignacion',9,'p_asignacion','MyLittleDucky.py',856),
  ('auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b paso27','auxAsignacion1',6,'p_auxAsignacion1','MyLittleDucky.py',860),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',861),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',864),
  ('auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1','auxEscritura1',3,'p_auxEscritura1','MyLittleDucky.py',868),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',871),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',872),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',875),
  ('auxEscritura2 -> CTESTRING paso1','auxEscritura2',2,'p_auxEscritura2','MyLittleDucky.py',876),
  ('cicloExpresion -> expresion paso10','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',879),
  ('auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',883),
  ('auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',884),
  ('auxCicloExpresion -> <empty>','auxCicloExpresion',0,'p_auxCicloExpresion','MyLittleDucky.py',885),
  ('expresion -> exp auxExpresion','expresion',2,'p_expresion','MyLittleDucky.py',888),
  ('auxExpresion -> GTHAN mayor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',892),
  ('auxExpresion -> LTHAN menor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',893),
  ('auxExpresion -> NOTEQUAL diferente exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',894),
  ('auxExpresion -> GETHAN mayorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',895),
  ('auxExpresion -> LETHAN menorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',896),
  ('auxExpresion -> EQUAL igual exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',897),
  ('auxExpresion -> <empty>','auxExpresion',0,'p_auxExpresion','MyLittleDucky.py',898),
  ('expAndOr -> cicloExpresion auxCicloExpresion','expAndOr',2,'p_expAndOr','MyLittleDucky.py',901),
  ('condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14','condicion',8,'p_condicion','MyLittleDucky.py',904),
  ('auxCondicion -> ELSE paso13 bloque','auxCondicion',3,'p_auxCondicion','MyLittleDucky.py',908),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',909),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',912),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',915),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',918),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',919),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',922),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',923),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',926),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',929),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',932),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',933),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',936),
  ('auxTermino -> DIVIDE paso2_div','auxTermino',2,'p_auxTermino','MyLittleDucky.py',937),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',940),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',941),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',944),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',945),
  ('varcte -> ID paso1 addType auxVarcte','varcte',4,'p_varcte','MyLittleDucky.py',948),
  ('varcte -> CTEINT paso1 cteInt assignDirectionCteInt','varcte',4,'p_varcte','MyLittleDucky.py',949),
  ('varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat','varcte',4,'p_varcte','MyLittleDucky.py',950),
  ('varcte -> CTECHAR paso1 cteChar assignDirectionCteChar','varcte',4,'p_varcte','MyLittleDucky.py',951),
  ('varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool','varcte',4,'p_varcte','MyLittleDucky.py',952),
  ('varcte -> CTESTRING paso1 cteString assignDirectionCteString','varcte',4,'p_varcte','MyLittleDucky.py',953),
  ('varcte -> llamada','varcte',1,'p_varcte','MyLittleDucky.py',954),
  ('assignDirectionCteInt -> <empty>','assignDirectionCteInt',0,'p_assignDirectionCteInt','MyLittleDucky.py',959),
  ('assignDirectionCteFloat -> <empty>','assignDirectionCteFloat',0,'p_assignDirectionCteFloat','MyLittleDucky.py',970),
  ('assignDirectionCteChar -> <empty>','assignDirectionCteChar',0,'p_assignDirectionCteChar','MyLittleDucky.py',978),
  ('assignDirectionCteBool -> <empty>','assignDirectionCteBool',0,'p_assignDirectionCteBool','MyLittleDucky.py',986),
  ('assignDirectionCteString -> <empty>','assignDirectionCteString',0,'p_assignDirectionCteString','MyLittleDucky.py',995),
  ('addType -> <empty>','addType',0,'p_addType','MyLittleDucky.py',1017),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',1044),
  ('auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27','auxVarcte',6,'p_auxVarcte','MyLittleDucky.py',1045),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',1046),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',1049),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',1050),
  ('funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso22 paso23','funcion',11,'p_funcion','MyLittleDucky.py',1053),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',1056),
  ('initDicFunc -> <empty>','initDicFunc',0,'p_initDicFunc','MyLittleDucky.py',1072),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',1078),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',1079),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',1082),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',1085),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',1088),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',1109),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',1110),
  ('ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17','ciclo',8,'p_ciclo','MyLittleDucky.py',1113),
  ('llamada -> CALL COLON ID paso24 cteLlamada LPAREN auxLlamada RPAREN paso26','llamada',9,'p_llamada','MyLittleDucky.py',1117),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',1121),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',1122),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',1125),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',1126),
  ('auxArgumentos1 -> exp paso25 ambAuxArgumentos1','auxArgumentos1',3,'p_auxArgumentos1','MyLittleDucky.py',1129),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',1132),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',1133),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',1136),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',1149),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',1157),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',1161),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',1165),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',1169),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',1307),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',1338),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',1375),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',1379),
  ('paso6b -> <empty>','paso6b',0,'p_paso6b','MyLittleDucky.py',1387),
  ('paso7b -> <empty>','paso7b',0,'p_paso7b','MyLittleDucky.py',1391),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',1399),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',1403),
  ('paso9 -> <empty>','paso9',0,'p_paso9','MyLittleDucky.py',1407),
  ('paso10 -> <empty>','paso10',0,'p_paso10','MyLittleDucky.py',1440),
  ('paso11 -> <empty>','paso11',0,'p_paso11','MyLittleDucky.py',1473),
  ('paso12 -> <empty>','paso12',0,'p_paso12','MyLittleDucky.py',1514),
  ('paso13 -> <empty>','paso13',0,'p_paso13','MyLittleDucky.py',1534),
  ('paso14 -> <empty>','paso14',0,'p_paso14','MyLittleDucky.py',1546),
  ('paso15 -> <empty>','paso15',0,'p_paso15','MyLittleDucky.py',1554),
  ('paso16 -> <empty>','paso16',0,'p_paso16','MyLittleDucky.py',1560),
  ('paso17 -> <empty>','paso17',0,'p_paso17','MyLittleDucky.py',1580),
  ('paso18 -> <empty>','paso18',0,'p_paso18','MyLittleDucky.py',1590),
  ('paso19 -> <empty>','paso19',0,'p_paso19','MyLittleDucky.py',1602),
  ('paso20 -> <empty>','paso20',0,'p_paso20','MyLittleDucky.py',1611),
  ('paso21 -> <empty>','paso21',0,'p_paso21','MyLittleDucky.py',1618),
  ('paso22 -> <empty>','paso22',0,'p_paso22','MyLittleDucky.py',1630),
  ('paso23 -> <empty>','paso23',0,'p_paso23','MyLittleDucky.py',1644),
  ('paso24 -> <empty>','paso24',0,'p_paso24','MyLittleDucky.py',1666),
  ('paso25 -> <empty>','paso25',0,'p_paso25','MyLittleDucky.py',1689),
  ('paso26 -> <empty>','paso26',0,'p_paso26','MyLittleDucky.py',1719),
  ('paso27 -> <empty>','paso27',0,'p_paso27','MyLittleDucky.py',1747),
  ('pasoFinal -> <empty>','pasoFinal',0,'p_pasoFinal','MyLittleDucky.py',1771),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',1778),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',1782),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',1787),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',1792),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',1797),
  ('cteLlamada -> <empty>','cteLlamada',0,'p_cteLlamada','MyLittleDucky.py',1801),
  ('mayor -> <empty>','mayor',0,'p_mayor','MyLittleDucky.py',1813),
  ('menor -> <empty>','menor',0,'p_menor','MyLittleDucky.py',1817),
  ('mayorIg -> <empty>','mayorIg',0,'p_mayorIg','MyLittleDucky.py',1821),
  ('menorIg -> <empty>','menorIg',0,'p_menorIg','MyLittleDucky.py',1825),
  ('igual -> <empty>','igual',0,'p_igual','MyLittleDucky.py',1829),
  ('diferente -> <empty>','diferente',0,'p_diferente','MyLittleDucky.py',1833),
  ('asig -> <empty>','asig',0,'p_asig','MyLittleDucky.py',1837),
]
