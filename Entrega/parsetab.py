
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BC6A5E441AC728F97094EDCC56376719'
    
_lr_action_items = {'NOTEQUAL':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,160,162,169,170,171,172,173,175,196,198,201,202,203,204,205,206,208,225,226,227,228,229,232,234,259,267,269,274,275,277,280,282,],[-138,-85,-139,-79,144,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'MULTI':([94,122,126,127,128,129,130,131,132,134,169,170,171,172,173,175,201,202,203,204,205,206,208,225,226,227,228,229,232,234,259,267,269,274,275,277,280,282,],[-139,161,-133,-133,-92,-133,-101,-133,-133,-133,-171,-169,-168,-167,-107,-170,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'GTHAN':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,160,162,169,170,171,172,173,175,196,198,201,202,203,204,205,206,208,225,226,227,228,229,232,234,259,267,269,274,275,277,280,282,],[-138,-85,-139,-79,146,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'RETURN':([39,47,48,60,61,62,63,66,67,68,73,78,84,103,111,112,152,153,165,189,190,192,195,212,221,235,238,249,252,262,264,266,],[-23,-36,-23,-53,-36,-51,79,-50,-52,-22,-24,-35,-41,-32,-41,-158,-40,-39,-57,-39,222,-42,-26,-78,-38,-154,-151,-123,-76,-54,-77,-44,]),'EQUAL':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,160,162,169,170,171,172,173,175,196,198,201,202,203,204,205,206,208,225,226,227,228,229,232,234,259,267,269,274,275,277,280,282,],[-138,-85,-139,-79,147,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'GETHAN':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,160,162,169,170,171,172,173,175,196,198,201,202,203,204,205,206,208,225,226,227,228,229,232,234,259,267,269,274,275,277,280,282,],[-138,-85,-139,-79,148,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'LBRACKET':([16,17,19,20,21,64,81,104,132,173,206,],[27,27,27,27,27,-133,-107,138,-133,-107,231,]),'WHILE':([39,47,48,60,61,62,66,67,68,73,84,103,111,112,152,153,165,189,192,195,212,235,238,249,252,262,264,266,],[-23,59,-23,-53,59,-51,-50,-52,-22,-24,-41,-32,-41,-158,-40,59,-57,59,-42,-26,-78,-154,-151,-123,-76,-54,-77,-44,]),'PROGRAM':([0,],[1,]),'PRINT':([39,47,48,60,61,62,66,67,68,73,84,103,111,112,152,153,165,189,192,195,212,235,238,249,252,262,264,266,],[-23,58,-23,-53,58,-51,-50,-52,-22,-24,-41,-32,-41,-158,-40,58,-57,58,-42,-26,-78,-154,-151,-123,-76,-54,-77,-44,]),'CTESTRING':([76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,159,161,163,164,166,178,179,181,182,183,184,185,186,187,188,197,199,210,222,230,231,247,261,268,279,],[88,-94,-94,-137,-93,-136,-140,126,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,88,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'LETHAN':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,160,162,169,170,171,172,173,175,196,198,201,202,203,204,205,206,208,225,226,227,228,229,232,234,259,267,269,274,275,277,280,282,],[-138,-85,-139,-79,150,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'MINUS':([76,79,82,89,90,92,93,94,98,101,119,120,121,122,125,126,127,128,129,130,131,132,134,138,140,142,144,146,147,148,149,150,159,161,162,163,164,166,169,170,171,172,173,175,178,179,181,182,183,184,185,186,187,188,197,198,199,201,202,203,204,205,206,208,210,222,225,226,227,228,229,230,231,232,234,247,259,261,267,268,269,274,275,277,279,280,282,],[90,90,90,-138,-137,-136,-85,-139,-140,90,90,-84,-83,-88,90,-133,-133,-92,-133,-101,-133,-133,-133,-142,-144,-145,-178,-173,-177,-175,-174,-176,90,-134,-86,90,-135,90,-171,-169,-168,-167,-107,-170,-179,90,90,90,90,90,90,90,90,90,-89,-87,-90,-141,-106,-104,-103,-102,-110,-105,90,90,-91,-100,-98,-97,-96,90,-142,-95,-99,90,-108,-140,-143,90,-164,-109,-141,-163,90,-165,-124,]),'RBRACE':([39,47,48,60,61,62,63,66,67,68,73,78,80,103,136,165,177,195,212,235,238,249,252,256,262,264,],[-23,-36,-23,-53,-36,-51,-34,-50,-52,-22,-24,-35,103,-32,-160,-57,-33,-26,-78,-154,-151,-123,-76,265,-54,-77,]),'RPAREN':([45,54,55,56,71,83,88,89,93,94,95,96,97,100,105,106,107,108,110,118,119,122,124,126,127,128,129,130,131,132,134,135,139,141,143,145,151,158,160,162,167,168,169,170,171,172,173,175,196,198,200,201,202,203,204,205,206,208,213,214,215,216,217,218,219,220,225,226,227,228,229,232,234,240,241,246,254,255,259,261,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,],[-117,72,-118,-116,-120,-122,-133,-138,-85,-139,-79,123,-155,-61,-149,-66,-147,-74,-119,-106,-82,-88,-60,-133,-133,-92,-133,-101,-133,-133,-133,176,180,-75,-63,-67,-121,-62,-80,-86,-58,201,-171,-169,-168,-167,-107,-170,-81,-87,-59,-141,-106,-104,-103,-102,-110,-105,-146,-146,-70,-68,-73,-71,-69,-72,-91,-100,-98,-97,-96,-95,-99,-66,-66,259,-64,-65,-108,-140,-143,-126,-164,-125,275,-127,-162,-109,-141,-131,-163,-129,-165,-130,-124,]),'SEMICOLON':([3,4,16,17,19,20,21,26,28,29,31,32,33,41,44,50,52,70,89,93,94,95,102,115,119,122,123,126,127,128,129,130,131,132,134,156,160,162,169,170,171,172,173,175,196,198,201,202,203,204,205,206,208,225,226,227,228,229,232,234,236,242,243,250,257,259,267,269,274,275,277,280,282,],[-2,5,-21,-21,-21,-21,-21,-16,-19,-15,-17,-13,-14,-8,-20,69,-102,-18,-138,-85,-139,-79,136,-27,-82,-88,165,-133,-133,-92,-133,-101,-133,-133,-133,195,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-148,256,-45,262,266,-108,-143,-164,-109,-141,-163,-165,-124,]),'CTEFLOAT':([76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,159,161,163,164,166,178,179,181,182,183,184,185,186,187,188,197,199,210,222,230,231,247,261,268,279,],[-94,-94,-94,-137,-93,-136,-140,129,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,-94,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'CALL':([76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,159,161,163,164,166,178,179,181,182,183,184,185,186,187,188,197,199,210,222,230,231,247,261,268,279,],[-94,-94,-94,-137,-93,-136,-140,133,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,-94,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'PLUS':([76,79,82,89,90,92,93,94,98,101,119,120,121,122,125,126,127,128,129,130,131,132,134,138,140,142,144,146,147,148,149,150,159,161,162,163,164,166,169,170,171,172,173,175,178,179,181,182,183,184,185,186,187,188,197,198,199,201,202,203,204,205,206,208,210,222,225,226,227,228,229,230,231,232,234,247,259,261,267,268,269,274,275,277,279,280,282,],[92,92,92,-138,-137,-136,-85,-139,-140,92,92,-84,-83,-88,92,-133,-133,-92,-133,-101,-133,-133,-133,-142,-144,-145,-178,-173,-177,-175,-174,-176,92,-134,-86,92,-135,92,-171,-169,-168,-167,-107,-170,-179,92,92,92,92,92,92,92,92,92,-89,-87,-90,-141,-106,-104,-103,-102,-110,-105,92,92,-91,-100,-98,-97,-96,92,-142,-95,-99,92,-108,-140,-143,92,-164,-109,-141,-163,92,-165,-124,]),'COLON':([23,25,36,42,51,74,75,87,116,133,157,191,193,224,244,258,],[35,-10,-12,-9,-11,86,-29,-31,-28,174,-30,223,-47,-49,-46,-48,]),'COMMA':([25,36,71,75,83,87,88,89,93,94,95,97,100,118,119,122,124,126,127,128,129,130,131,132,134,158,160,162,169,170,171,172,173,175,193,196,198,201,202,203,204,205,206,208,224,225,226,227,228,229,232,234,259,267,269,273,274,275,276,277,280,282,],[-10,43,-120,-29,109,117,-133,-138,-85,-139,-79,-155,-61,-106,-82,-88,166,-133,-133,-92,-133,-101,-133,-133,-133,-62,-80,-86,-171,-169,-168,-167,-107,-170,-47,-81,-87,-141,-106,-104,-103,-102,-110,-105,245,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-162,-109,-141,279,-163,-165,-124,]),'EQUALA':([64,81,104,137,237,251,263,],[-133,-107,-56,178,-143,-164,-55,]),'$end':([2,40,49,103,],[0,-166,-1,-32,]),'FUNCTION':([5,6,7,8,10,13,24,69,85,114,155,194,265,],[-156,-4,11,-4,11,-3,-5,-7,-114,-160,-159,-113,-37,]),'STRING':([11,35,45,86,109,223,],[17,17,17,17,17,17,]),'CTEINT':([27,76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,159,161,163,164,166,178,179,181,182,183,184,185,186,187,188,197,199,210,222,230,231,247,261,268,279,],[37,-94,-94,-94,-137,-93,-136,-140,131,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,-94,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'DIVIDE':([94,122,126,127,128,129,130,131,132,134,169,170,171,172,173,175,201,202,203,204,205,206,208,225,226,227,228,229,232,234,259,267,269,274,275,277,280,282,],[-139,164,-133,-133,-92,-133,-101,-133,-133,-133,-171,-169,-168,-167,-107,-170,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'ELSE':([103,212,],[-32,239,]),'LTHAN':([89,93,94,95,108,119,122,126,127,128,129,130,131,132,134,160,162,169,170,171,172,173,175,196,198,201,202,203,204,205,206,208,225,226,227,228,229,232,234,259,267,269,274,275,277,280,282,],[-138,-85,-139,-79,149,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-91,-100,-98,-97,-96,-95,-99,-108,-143,-164,-109,-141,-163,-165,-124,]),'LPAREN':([30,38,58,59,65,76,77,79,82,90,92,98,101,120,121,125,132,138,140,142,144,146,147,148,149,150,159,161,163,164,166,173,178,179,181,182,183,184,185,186,187,188,197,199,206,207,210,222,230,231,233,247,248,261,268,279,],[-115,45,76,-152,82,98,101,98,98,-137,-136,-140,98,-84,-83,98,-133,-142,-144,-145,-178,-173,-177,-175,-174,-176,98,-134,98,-135,98,-107,-179,98,98,98,98,98,98,98,98,98,-89,-90,230,-161,98,98,98,-142,-172,98,261,-140,98,98,]),'VAR':([5,6,8,9,24,39,46,48,69,73,84,111,113,192,195,266,],[-156,-6,-6,14,-5,-25,57,-25,-7,-24,-43,-43,154,-42,-26,-44,]),'CTECHAR':([76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,159,161,163,164,166,178,179,181,182,183,184,185,186,187,188,197,199,210,222,230,231,247,261,268,279,],[-94,-94,-94,-137,-93,-136,-140,127,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,-94,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'ID':([1,14,16,17,18,19,20,21,26,28,29,31,32,33,39,43,44,47,48,52,53,57,60,61,62,66,67,68,70,73,76,79,82,84,90,91,92,98,99,101,103,111,112,117,120,121,125,138,140,142,144,146,147,148,149,150,152,153,154,159,161,163,164,165,166,174,178,179,181,182,183,184,185,186,187,188,189,192,195,197,199,210,212,222,230,231,235,238,245,247,249,252,261,262,264,266,268,279,],[3,25,-21,-21,30,-21,-21,-21,-16,-19,-15,-17,-13,-14,-23,25,-20,64,-23,-102,71,75,-53,64,-51,-50,-52,-22,-18,-24,-94,-94,-94,-41,-137,-93,-136,-140,132,-94,-32,-41,-158,75,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-40,64,193,-94,-134,-94,-135,-57,-94,207,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,64,-42,-26,-89,-90,-94,-78,-94,-94,-142,-154,-151,193,-94,-123,-76,-140,-54,-77,-44,-94,-94,]),'IF':([39,47,48,60,61,62,66,67,68,73,84,103,111,112,152,153,165,189,192,195,212,235,238,249,252,262,264,266,],[-23,65,-23,-53,65,-51,-50,-52,-22,-24,-41,-32,-41,-158,-40,65,-57,65,-42,-26,-78,-154,-151,-123,-76,-54,-77,-44,]),'AND':([89,93,94,95,106,107,108,119,122,126,127,128,129,130,131,132,134,143,145,160,162,169,170,171,172,173,175,196,198,201,202,203,204,205,206,208,213,214,215,216,217,218,219,220,225,226,227,228,229,232,234,240,241,259,267,269,274,275,277,280,282,],[-138,-85,-139,-79,140,-147,-74,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-63,-67,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-146,-146,-70,-68,-73,-71,-69,-72,-91,-100,-98,-97,-96,-95,-99,140,140,-108,-143,-164,-109,-141,-163,-165,-124,]),'CHAR':([11,35,45,86,109,223,],[19,19,19,19,19,19,]),'LBRACE':([22,34,72,176,180,209,239,253,],[-157,39,84,-153,39,39,-150,39,]),'INT':([11,35,45,86,109,223,],[20,20,20,20,20,20,]),'CTEBOOL':([76,79,82,90,91,92,98,99,101,120,121,125,138,140,142,144,146,147,148,149,150,159,161,163,164,166,178,179,181,182,183,184,185,186,187,188,197,199,210,222,230,231,247,261,268,279,],[-94,-94,-94,-137,-93,-136,-140,134,-94,-84,-83,-94,-142,-144,-145,-178,-173,-177,-175,-174,-176,-94,-134,-94,-135,-94,-179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-89,-90,-94,-94,-94,-142,-94,-140,-94,-94,]),'FLOAT':([11,35,45,86,109,223,],[16,16,16,16,16,16,]),'BOOL':([11,35,45,86,109,223,],[21,21,21,21,21,21,]),'RBRACKET':([37,89,93,94,95,119,122,126,127,128,129,130,131,132,134,160,162,169,170,171,172,173,175,196,198,201,202,203,204,205,206,208,211,225,226,227,228,229,232,234,259,260,267,269,274,275,277,280,282,],[44,-138,-85,-139,-79,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,237,-91,-100,-98,-97,-96,-95,-99,-108,267,-143,-164,-109,-141,-163,-165,-124,]),'MAIN':([5,6,7,8,10,12,13,15,24,69,85,114,155,194,265,],[-156,-4,-112,-4,-112,22,-3,-111,-5,-7,-114,-160,-159,-113,-37,]),'OR':([89,93,94,95,106,107,108,119,122,126,127,128,129,130,131,132,134,143,145,160,162,169,170,171,172,173,175,196,198,201,202,203,204,205,206,208,213,214,215,216,217,218,219,220,225,226,227,228,229,232,234,240,241,259,267,269,274,275,277,280,282,],[-138,-85,-139,-79,142,-147,-74,-82,-88,-133,-133,-92,-133,-101,-133,-133,-133,-63,-67,-80,-86,-171,-169,-168,-167,-107,-170,-81,-87,-141,-106,-104,-103,-102,-110,-105,-146,-146,-70,-68,-73,-71,-69,-72,-91,-100,-98,-97,-96,-95,-99,142,142,-108,-143,-164,-109,-141,-163,-165,-124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([6,8,],[8,8,]),'menor':([149,],[187,]),'bloque':([34,180,209,253,],[40,212,235,264,]),'auxParametros':([45,109,],[55,151,]),'mayor':([146,],[184,]),'mayorIg':([148,],[186,]),'ambCicloTermino':([122,],[162,]),'auxLlamada':([268,],[271,]),'paso5':([94,],[122,]),'factor':([76,79,82,101,125,159,163,166,179,181,182,183,184,185,186,187,188,210,222,230,247,268,279,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'paso6b':([138,231,],[179,247,]),'assignDirectionCteInt':([52,205,],[70,229,]),'initDicFunc':([30,],[38,]),'idVarsMain':([57,117,],[74,157,]),'paso2_div':([164,],[199,]),'addTypeMain':([115,],[156,]),'cteLlamada':([233,],[248,]),'cicloBloque':([47,61,],[63,78,]),'cteChar':([170,],[203,]),'assignDirectionCteBool':([208,],[234,]),'cicloTermino':([76,79,82,101,125,159,163,166,179,181,182,183,184,185,186,187,188,210,222,230,247,268,279,],[93,93,93,93,93,93,198,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'expresion':([82,101,181,182,],[107,107,107,107,]),'bloqueFuncion':([72,],[85,]),'assignDirectionCteChar':([203,],[227,]),'parametros':([45,],[56,]),'ambExp':([119,],[160,]),'addVariableDirMain':([75,],[87,]),'auxVar1':([14,],[24,]),'expAndOr':([82,101,],[105,135,]),'createVariableDir':([6,8,],[9,9,]),'assignDirectionCteString':([118,202,],[158,226,]),'argumentos':([268,],[270,]),'ciclo':([47,61,153,189,],[60,60,60,60,]),'tipo':([11,35,45,86,109,223,],[18,41,53,115,53,243,]),'asig':([178,],[210,]),'llamada':([99,],[130,]),'condicion':([47,61,153,189,],[62,62,62,62,]),'noEsArr':([16,17,19,20,21,],[28,28,28,28,28,]),'cicloBloqueFuncion':([153,189,],[190,221,]),'auxArgumentos1':([268,279,],[272,281,]),'cicloExp':([76,79,82,101,125,159,166,179,181,182,183,184,185,186,187,188,210,222,230,247,268,279,],[95,95,95,95,95,196,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'addProcDirectoryFunc':([85,],[114,]),'auxEscritura1':([76,166,],[96,200,]),'auxEscritura2':([76,166,],[97,97,]),'ambIdVarsMain':([87,],[116,]),'paso11':([236,],[250,]),'paso8_or':([142,],[182,]),'paso16':([176,],[209,]),'auxExp':([76,79,82,101,119,125,159,163,166,179,181,182,183,184,185,186,187,188,210,222,230,247,268,279,],[91,91,91,91,159,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'paso7b':([237,267,],[251,269,]),'cicloExpresion':([82,101,181,182,],[106,106,213,214,]),'auxCicloExpresion':([106,240,241,],[141,254,255,]),'auxAsignacion1':([104,],[137,]),'cicloVarsFuncion':([84,111,],[112,152,]),'escritura':([47,61,153,189,],[67,67,67,67,]),'paso19':([5,],[6,]),'addParameters':([71,],[83,]),'addVariableDirFuncion':([193,],[224,]),'auxCondicion':([212,],[238,]),'termino':([76,79,82,101,125,159,166,179,181,182,183,184,185,186,187,188,210,222,230,247,268,279,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'paso3_resta':([90,],[120,]),'paso12':([105,],[139,]),'paso13':([239,],[253,]),'paso10':([107,],[143,]),'createVariableDirMain':([39,48,],[46,46,]),'addVariableDir':([25,],[36,]),'paso17':([235,],[249,]),'paso14':([238,],[252,]),'paso15':([59,],[77,]),'paso18':([97,],[124,]),'estatuto':([47,61,153,189,],[61,61,189,189,]),'ambAuxEscritura1':([124,],[167,]),'diferente':([144,],[183,]),'cteString':([169,],[202,]),'addTypeFuncion':([243,],[257,]),'cicloVars':([6,8,],[7,13,]),'paso9':([213,214,],[240,241,]),'paso28':([280,],[282,]),'paso1':([64,88,126,127,129,131,132,134,],[81,118,169,170,171,172,173,175,]),'paso4':([89,],[119,]),'varsMain':([39,48,],[48,48,]),'paso6':([98,261,],[125,268,]),'paso7':([201,275,],[225,277,]),'esArr':([44,],[52,]),'asignacion':([47,61,153,189,],[66,66,66,66,]),'cteBool':([175,],[208,]),'addProcedureDir':([3,],[4,]),'cteInt':([172,],[205,]),'paso21':([112,],[153,]),'ambAuxTipo1':([16,17,19,20,21,],[26,29,31,32,33,]),'menorIg':([150,],[188,]),'auxVar1Main':([57,],[73,]),'igual':([147,],[185,]),'cteFloat':([171,],[204,]),'auxVarcte':([206,],[232,]),'ambIdVars':([36,],[42,]),'paso25':([273,],[276,]),'cicloVarsMain':([39,48,],[47,68,]),'addTypeGlobal':([41,],[50,]),'auxExpresion':([108,],[145,]),'varsFuncion':([84,111,],[111,111,]),'auxFunction':([45,],[54,]),'recursivo':([63,],[80,]),'idVarsFuncion':([154,245,],[191,258,]),'auxVar1Funcion':([154,],[192,]),'createVariableDirFuncion':([84,111,],[113,113,]),'addType':([81,173,],[104,206,]),'funcion':([7,10,],[10,10,]),'ambAuxArgumentos1':([276,],[278,]),'pasoFinal':([40,],[49,]),'auxTermino':([122,],[163,]),'auxFactor':([76,79,82,101,125,159,163,166,179,181,182,183,184,185,186,187,188,210,222,230,247,268,279,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'varcte':([99,],[128,]),'paso3_suma':([92,],[121,]),'idVars':([14,43,],[23,51,]),'paso23':([114,136,],[155,177,]),'paso22':([155,],[194,]),'paso8_and':([140,],[181,]),'paso20':([22,],[34,]),'paso27':([251,269,],[263,274,]),'paso26':([277,],[280,]),'paso2_mult':([161,],[197,]),'paso24':([207,],[233,]),'cicloFuncion':([7,10,],[12,15,]),'programa':([0,],[2,]),'exp':([76,79,82,101,125,166,179,181,182,183,184,185,186,187,188,210,222,230,247,268,279,],[100,102,108,108,168,100,211,108,108,215,216,217,218,219,220,236,242,246,260,273,273,]),'ambAuxParametros':([83,],[110,]),'ambIdVarsFuncion':([224,],[244,]),'assignDirectionCteFloat':([204,],[228,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque pasoFinal','programa',11,'p_programa','MyLittleDucky.py',982),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',986),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',996),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',997),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',1000),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',1003),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',1008),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',1011),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',1094),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',1097),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',1109),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',1110),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',1113),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',1114),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',1115),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',1116),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',1117),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET esArr assignDirectionCteInt','ambAuxTipo1',5,'p_ambAuxTipo1','MyLittleDucky.py',1122),
  ('ambAuxTipo1 -> noEsArr','ambAuxTipo1',1,'p_ambAuxTipo1','MyLittleDucky.py',1123),
  ('esArr -> <empty>','esArr',0,'p_esArr','MyLittleDucky.py',1126),
  ('noEsArr -> <empty>','noEsArr',0,'p_noEsArr','MyLittleDucky.py',1133),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',1138),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',1139),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',1142),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',1145),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',1150),
  ('addTypeMain -> <empty>','addTypeMain',0,'p_addTypeMain','MyLittleDucky.py',1153),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',1235),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',1238),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',1249),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',1250),
  ('bloque -> LBRACE cicloVarsMain cicloBloque recursivo RBRACE','bloque',5,'p_bloque','MyLittleDucky.py',1253),
  ('recursivo -> RETURN exp SEMICOLON paso23','recursivo',4,'p_recursivo','MyLittleDucky.py',1256),
  ('recursivo -> <empty>','recursivo',0,'p_recursivo','MyLittleDucky.py',1257),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',1260),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',1261),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN exp SEMICOLON RBRACE','bloqueFuncion',8,'p_bloqueFuncion','MyLittleDucky.py',1264),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',1267),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',1268),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',1271),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',1272),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',1275),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',1278),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',1283),
  ('addTypeFuncion -> <empty>','addTypeFuncion',0,'p_addTypeFuncion','MyLittleDucky.py',1286),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',1369),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',1372),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',1388),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',1389),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',1392),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',1393),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',1394),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',1395),
  ('asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON','asignacion',9,'p_asignacion','MyLittleDucky.py',1400),
  ('auxAsignacion1 -> LBRACKET paso6b exp RBRACKET paso7b paso27','auxAsignacion1',6,'p_auxAsignacion1','MyLittleDucky.py',1404),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',1405),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',1408),
  ('auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1','auxEscritura1',3,'p_auxEscritura1','MyLittleDucky.py',1412),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',1415),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',1416),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',1419),
  ('auxEscritura2 -> CTESTRING paso1 assignDirectionCteString','auxEscritura2',3,'p_auxEscritura2','MyLittleDucky.py',1420),
  ('cicloExpresion -> expresion paso10','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',1423),
  ('auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',1427),
  ('auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',1428),
  ('auxCicloExpresion -> <empty>','auxCicloExpresion',0,'p_auxCicloExpresion','MyLittleDucky.py',1429),
  ('expresion -> exp auxExpresion','expresion',2,'p_expresion','MyLittleDucky.py',1432),
  ('auxExpresion -> GTHAN mayor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1436),
  ('auxExpresion -> LTHAN menor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1437),
  ('auxExpresion -> NOTEQUAL diferente exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1438),
  ('auxExpresion -> GETHAN mayorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1439),
  ('auxExpresion -> LETHAN menorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1440),
  ('auxExpresion -> EQUAL igual exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',1441),
  ('auxExpresion -> <empty>','auxExpresion',0,'p_auxExpresion','MyLittleDucky.py',1442),
  ('expAndOr -> cicloExpresion auxCicloExpresion','expAndOr',2,'p_expAndOr','MyLittleDucky.py',1445),
  ('condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14','condicion',8,'p_condicion','MyLittleDucky.py',1448),
  ('auxCondicion -> ELSE paso13 bloque','auxCondicion',3,'p_auxCondicion','MyLittleDucky.py',1452),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',1453),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',1456),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',1459),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',1462),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',1463),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',1466),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',1467),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',1470),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',1473),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',1476),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',1477),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',1480),
  ('auxTermino -> DIVIDE paso2_div','auxTermino',2,'p_auxTermino','MyLittleDucky.py',1481),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',1484),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',1485),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',1488),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',1489),
  ('varcte -> ID paso1 addType auxVarcte','varcte',4,'p_varcte','MyLittleDucky.py',1492),
  ('varcte -> CTEINT paso1 cteInt assignDirectionCteInt','varcte',4,'p_varcte','MyLittleDucky.py',1493),
  ('varcte -> CTEFLOAT paso1 cteFloat assignDirectionCteFloat','varcte',4,'p_varcte','MyLittleDucky.py',1494),
  ('varcte -> CTECHAR paso1 cteChar assignDirectionCteChar','varcte',4,'p_varcte','MyLittleDucky.py',1495),
  ('varcte -> CTEBOOL paso1 cteBool assignDirectionCteBool','varcte',4,'p_varcte','MyLittleDucky.py',1496),
  ('varcte -> CTESTRING paso1 cteString assignDirectionCteString','varcte',4,'p_varcte','MyLittleDucky.py',1497),
  ('varcte -> llamada','varcte',1,'p_varcte','MyLittleDucky.py',1498),
  ('assignDirectionCteInt -> <empty>','assignDirectionCteInt',0,'p_assignDirectionCteInt','MyLittleDucky.py',1503),
  ('assignDirectionCteFloat -> <empty>','assignDirectionCteFloat',0,'p_assignDirectionCteFloat','MyLittleDucky.py',1514),
  ('assignDirectionCteChar -> <empty>','assignDirectionCteChar',0,'p_assignDirectionCteChar','MyLittleDucky.py',1522),
  ('assignDirectionCteBool -> <empty>','assignDirectionCteBool',0,'p_assignDirectionCteBool','MyLittleDucky.py',1530),
  ('assignDirectionCteString -> <empty>','assignDirectionCteString',0,'p_assignDirectionCteString','MyLittleDucky.py',1538),
  ('addType -> <empty>','addType',0,'p_addType','MyLittleDucky.py',1560),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',1587),
  ('auxVarcte -> LBRACKET paso6b exp RBRACKET paso7b paso27','auxVarcte',6,'p_auxVarcte','MyLittleDucky.py',1588),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',1589),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',1592),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',1593),
  ('funcion -> FUNCTION tipo ID initDicFunc LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc paso23 paso22','funcion',11,'p_funcion','MyLittleDucky.py',1596),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',1599),
  ('initDicFunc -> <empty>','initDicFunc',0,'p_initDicFunc','MyLittleDucky.py',1627),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',1633),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',1634),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',1637),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',1640),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',1643),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',1680),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',1681),
  ('ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17','ciclo',8,'p_ciclo','MyLittleDucky.py',1684),
  ('llamada -> CALL COLON ID paso24 cteLlamada LPAREN paso6 auxLlamada RPAREN paso7 paso26 paso28','llamada',12,'p_llamada','MyLittleDucky.py',1688),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',1692),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',1693),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',1696),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',1697),
  ('auxArgumentos1 -> exp paso25 ambAuxArgumentos1','auxArgumentos1',3,'p_auxArgumentos1','MyLittleDucky.py',1700),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',1703),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',1704),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',1707),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',1720),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',1728),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',1732),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',1736),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',1740),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',1878),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',1910),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',1947),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',1951),
  ('paso6b -> <empty>','paso6b',0,'p_paso6b','MyLittleDucky.py',1959),
  ('paso7b -> <empty>','paso7b',0,'p_paso7b','MyLittleDucky.py',1965),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',1973),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',1977),
  ('paso9 -> <empty>','paso9',0,'p_paso9','MyLittleDucky.py',1981),
  ('paso10 -> <empty>','paso10',0,'p_paso10','MyLittleDucky.py',2014),
  ('paso11 -> <empty>','paso11',0,'p_paso11','MyLittleDucky.py',2051),
  ('paso12 -> <empty>','paso12',0,'p_paso12','MyLittleDucky.py',2092),
  ('paso13 -> <empty>','paso13',0,'p_paso13','MyLittleDucky.py',2112),
  ('paso14 -> <empty>','paso14',0,'p_paso14','MyLittleDucky.py',2124),
  ('paso15 -> <empty>','paso15',0,'p_paso15','MyLittleDucky.py',2132),
  ('paso16 -> <empty>','paso16',0,'p_paso16','MyLittleDucky.py',2138),
  ('paso17 -> <empty>','paso17',0,'p_paso17','MyLittleDucky.py',2158),
  ('paso18 -> <empty>','paso18',0,'p_paso18','MyLittleDucky.py',2168),
  ('paso19 -> <empty>','paso19',0,'p_paso19','MyLittleDucky.py',2180),
  ('paso20 -> <empty>','paso20',0,'p_paso20','MyLittleDucky.py',2189),
  ('paso21 -> <empty>','paso21',0,'p_paso21','MyLittleDucky.py',2196),
  ('paso22 -> <empty>','paso22',0,'p_paso22','MyLittleDucky.py',2208),
  ('paso23 -> <empty>','paso23',0,'p_paso23','MyLittleDucky.py',2225),
  ('paso24 -> <empty>','paso24',0,'p_paso24','MyLittleDucky.py',2258),
  ('paso25 -> <empty>','paso25',0,'p_paso25','MyLittleDucky.py',2282),
  ('paso26 -> <empty>','paso26',0,'p_paso26','MyLittleDucky.py',2326),
  ('paso27 -> <empty>','paso27',0,'p_paso27','MyLittleDucky.py',2356),
  ('paso28 -> <empty>','paso28',0,'p_paso28','MyLittleDucky.py',2385),
  ('pasoFinal -> <empty>','pasoFinal',0,'p_pasoFinal','MyLittleDucky.py',2403),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',2415),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',2419),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',2424),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',2429),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',2434),
  ('cteLlamada -> <empty>','cteLlamada',0,'p_cteLlamada','MyLittleDucky.py',2438),
  ('mayor -> <empty>','mayor',0,'p_mayor','MyLittleDucky.py',2454),
  ('menor -> <empty>','menor',0,'p_menor','MyLittleDucky.py',2458),
  ('mayorIg -> <empty>','mayorIg',0,'p_mayorIg','MyLittleDucky.py',2462),
  ('menorIg -> <empty>','menorIg',0,'p_menorIg','MyLittleDucky.py',2466),
  ('igual -> <empty>','igual',0,'p_igual','MyLittleDucky.py',2470),
  ('diferente -> <empty>','diferente',0,'p_diferente','MyLittleDucky.py',2474),
  ('asig -> <empty>','asig',0,'p_asig','MyLittleDucky.py',2478),
]
