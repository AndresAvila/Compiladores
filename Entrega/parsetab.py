
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '68D88A00E1C37BFABD715B04C586FEEA'
    
_lr_action_items = {'NOTEQUAL':([86,90,91,92,103,113,116,120,121,122,123,124,125,126,127,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,249,],[-129,-81,-130,-75,137,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-156,-154,-153,-152,-98,-155,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-115,]),'MULTI':([91,116,120,121,122,123,124,125,126,127,160,161,162,163,164,165,191,192,193,194,195,196,197,215,218,242,243,249,],[-130,152,-124,-124,-88,-124,-97,-124,-124,-124,-156,-154,-153,-152,-98,-155,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-115,]),'GTHAN':([86,90,91,92,103,113,116,120,121,122,123,124,125,126,127,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,249,],[-129,-81,-130,-75,139,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-156,-154,-153,-152,-98,-155,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-115,]),'RETURN':([58,60,64,65,76,81,105,106,144,145,156,179,180,182,202,211,220,222,233,235,245,246,248,],[-49,-47,-46,-48,-30,-37,-37,-147,-36,-35,-53,-35,212,-38,-74,-34,-143,-140,-114,-72,-50,-73,-40,]),'EQUAL':([86,90,91,92,103,113,116,120,121,122,123,124,125,126,127,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,249,],[-129,-81,-130,-75,140,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-156,-154,-153,-152,-98,-155,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-115,]),'GETHAN':([86,90,91,92,103,113,116,120,121,122,123,124,125,126,127,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,249,],[-129,-81,-130,-75,141,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-156,-154,-153,-152,-98,-155,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-115,]),'LBRACKET':([15,16,18,19,20,62,77,86,90,91,92,99,113,116,120,121,122,123,124,125,126,127,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,231,242,243,249,],[26,26,26,26,26,-124,-98,-129,-81,-130,-75,131,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-156,-154,-153,-152,-98,-155,-77,-83,-132,-96,-94,-93,-92,217,-95,-87,-91,243,-99,-100,-115,]),'WHILE':([38,49,50,58,59,60,64,65,66,70,76,81,105,106,144,145,156,179,182,185,202,220,222,233,235,245,246,248,],[-21,57,-21,-49,57,-47,-46,-48,-20,-22,-30,-37,-37,-147,-36,57,-53,57,-38,-24,-74,-143,-140,-114,-72,-50,-73,-40,]),'PROGRAM':([0,],[1,]),'PRINT':([38,49,50,58,59,60,64,65,66,70,76,81,105,106,144,145,156,179,182,185,202,220,222,233,235,245,246,248,],[-21,56,-21,-49,56,-47,-46,-48,-20,-22,-30,-37,-37,-147,-36,56,-53,56,-38,-24,-74,-143,-140,-114,-72,-50,-73,-40,]),'CTESTRING':([73,78,87,88,89,95,96,98,114,115,119,131,133,135,137,139,140,141,142,143,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,],[85,-90,-128,-89,-127,-131,120,-90,-80,-79,-90,-90,-133,-134,-163,-158,-162,-160,-159,-161,-90,-125,-90,-126,85,-164,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,]),'LETHAN':([86,90,91,92,103,113,116,120,121,122,123,124,125,126,127,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,249,],[-129,-81,-130,-75,143,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-156,-154,-153,-152,-98,-155,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-115,]),'MINUS':([73,78,86,87,89,90,91,95,98,113,114,115,116,119,120,121,122,123,124,125,126,127,131,133,135,137,139,140,141,142,143,150,152,153,154,155,157,160,161,162,163,164,165,168,171,172,173,174,175,176,177,178,187,188,189,191,192,193,194,195,196,197,200,212,215,216,217,218,242,243,249,],[87,87,-129,-128,-127,-81,-130,-131,87,87,-80,-79,-84,87,-124,-124,-88,-124,-97,-124,-124,-124,87,-133,-134,-163,-158,-162,-160,-159,-161,87,-125,-82,87,-126,87,-156,-154,-153,-152,-98,-155,-164,87,87,87,87,87,87,87,87,-85,-83,-86,-132,-96,-94,-93,-92,-101,-95,87,87,-87,87,87,-91,-99,-100,-115,]),'RBRACE':([38,49,50,58,59,60,61,64,65,66,70,75,76,156,185,202,220,222,233,235,239,245,246,],[-21,-32,-21,-49,-32,-47,76,-46,-48,-20,-22,-31,-30,-53,-24,-74,-143,-140,-114,-72,247,-50,-73,]),'RPAREN':([37,45,46,47,53,68,80,85,86,90,91,92,93,94,97,100,101,102,103,104,112,113,116,118,120,121,122,123,124,125,126,127,129,132,134,136,138,151,153,158,159,160,161,162,163,164,165,186,188,190,191,192,193,194,195,196,197,203,204,205,206,207,208,209,210,215,218,224,225,230,237,238,242,243,244,249,],[-108,54,-109,-107,-111,-113,-110,-124,-129,-81,-130,-75,117,-144,-57,-138,-62,-136,-70,-112,-58,-78,-84,-56,-124,-124,-88,-124,-97,-124,-124,-124,167,170,-71,-59,-63,-76,-82,-54,191,-156,-154,-153,-152,-98,-155,-77,-83,-55,-132,-96,-94,-93,-92,-101,-95,-135,-135,-66,-64,-69,-67,-65,-68,-87,-91,-62,-62,242,-60,-61,-99,-100,249,-115,]),'SEMICOLON':([3,4,15,16,18,19,20,27,28,30,31,32,40,43,51,86,90,91,92,103,109,113,116,117,120,121,122,123,124,125,126,127,138,148,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,205,206,207,208,209,210,215,218,221,226,227,234,240,242,243,249,],[-2,5,-19,-19,-19,-19,-19,-16,-15,-17,-13,-14,-8,-18,67,-129,-81,-130,-75,-70,-25,-78,-84,156,-124,-124,-88,-124,-97,-124,-124,-124,-63,185,-76,-82,-156,-154,-153,-152,-98,-155,-77,-83,-132,-96,-94,-93,-92,-101,-95,-66,-64,-69,-67,-65,-68,-87,-91,-137,239,-41,245,248,-99,-100,-115,]),'CTEFLOAT':([73,78,87,88,89,95,96,98,114,115,119,131,133,135,137,139,140,141,142,143,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,],[-90,-90,-128,-89,-127,-131,123,-90,-80,-79,-90,-90,-133,-134,-163,-158,-162,-160,-159,-161,-90,-125,-90,-126,-90,-164,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,]),'CALL':([73,78,87,88,89,95,96,98,114,115,119,131,133,135,137,139,140,141,142,143,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,],[-90,-90,-128,-89,-127,-131,128,-90,-80,-79,-90,-90,-133,-134,-163,-158,-162,-160,-159,-161,-90,-125,-90,-126,-90,-164,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,]),'PLUS':([73,78,86,87,89,90,91,95,98,113,114,115,116,119,120,121,122,123,124,125,126,127,131,133,135,137,139,140,141,142,143,150,152,153,154,155,157,160,161,162,163,164,165,168,171,172,173,174,175,176,177,178,187,188,189,191,192,193,194,195,196,197,200,212,215,216,217,218,242,243,249,],[89,89,-129,-128,-127,-81,-130,-131,89,89,-80,-79,-84,89,-124,-124,-88,-124,-97,-124,-124,-124,89,-133,-134,-163,-158,-162,-160,-159,-161,89,-125,-82,89,-126,89,-156,-154,-153,-152,-98,-155,-164,89,89,89,89,89,89,89,89,-85,-83,-86,-132,-96,-94,-93,-92,-101,-95,89,89,-87,89,89,-91,-99,-100,-115,]),'COLON':([23,25,35,41,52,71,72,84,110,128,149,181,183,214,228,241,],[34,-10,-12,-9,-11,83,-27,-29,-26,166,-28,213,-43,-45,-42,-44,]),'COMMA':([25,35,53,68,72,84,85,86,90,91,92,94,97,112,113,116,118,120,121,122,123,124,125,126,127,151,153,160,161,162,163,164,165,183,186,188,191,192,193,194,195,196,197,214,215,218,242,243,249,],[-10,42,-111,79,-27,111,-124,-129,-81,-130,-75,-144,-57,-58,-78,-84,157,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-156,-154,-153,-152,-98,-155,-43,-77,-83,-132,-96,-94,-93,-92,-101,-95,229,-87,-91,-99,-100,-115,]),'EQUALA':([62,77,99,130,201,],[-124,-98,-52,168,-51,]),'$end':([2,39,76,],[0,-1,-30,]),'FUNCTION':([5,6,7,8,12,13,24,67,82,108,147,184,247,],[-145,-4,10,-4,10,-3,-5,-7,-105,-148,-149,-104,-33,]),'STRING':([10,34,37,79,83,213,],[16,16,16,16,16,16,]),'CTEINT':([26,73,78,87,88,89,95,96,98,114,115,119,131,133,135,137,139,140,141,142,143,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,],[36,-90,-90,-128,-89,-127,-131,125,-90,-80,-79,-90,-90,-133,-134,-163,-158,-162,-160,-159,-161,-90,-125,-90,-126,-90,-164,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,]),'DIVIDE':([91,116,120,121,122,123,124,125,126,127,160,161,162,163,164,165,191,192,193,194,195,196,197,215,218,242,243,249,],[-130,155,-124,-124,-88,-124,-97,-124,-124,-124,-156,-154,-153,-152,-98,-155,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-115,]),'ELSE':([76,202,],[-30,223,]),'LTHAN':([86,90,91,92,103,113,116,120,121,122,123,124,125,126,127,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,215,218,242,243,249,],[-129,-81,-130,-75,142,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-156,-154,-153,-152,-98,-155,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-115,]),'LPAREN':([29,56,57,63,73,74,78,87,89,95,98,114,115,119,126,131,133,135,137,139,140,141,142,143,150,152,154,155,157,164,168,171,172,173,174,175,176,177,178,187,189,196,198,200,212,216,217,219,232,],[37,73,-141,78,95,98,95,-128,-127,-131,95,-80,-79,95,-124,95,-133,-134,-163,-158,-162,-160,-159,-161,95,-125,95,-126,95,-98,-164,95,95,95,95,95,95,95,95,-85,-86,216,-150,95,95,95,95,-157,244,]),'VAR':([5,6,8,9,24,38,48,50,67,70,81,105,107,182,185,248,],[-145,-6,-6,14,-5,-23,55,-23,-7,-22,-39,-39,146,-38,-24,-40,]),'CTECHAR':([73,78,87,88,89,95,96,98,114,115,119,131,133,135,137,139,140,141,142,143,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,],[-90,-90,-128,-89,-127,-131,121,-90,-80,-79,-90,-90,-133,-134,-163,-158,-162,-160,-159,-161,-90,-125,-90,-126,-90,-164,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,]),'ID':([1,14,15,16,17,18,19,20,27,28,30,31,32,38,42,43,44,49,50,55,58,59,60,64,65,66,70,73,76,78,81,87,88,89,95,96,98,105,106,111,114,115,119,131,133,135,137,139,140,141,142,143,144,145,146,150,152,154,155,156,157,166,168,171,172,173,174,175,176,177,178,179,182,185,187,189,200,202,212,216,217,220,222,229,233,235,245,246,248,],[3,25,-19,-19,29,-19,-19,-19,-16,-15,-17,-13,-14,-21,25,-18,53,62,-21,72,-49,62,-47,-46,-48,-20,-22,-90,-30,-90,-37,-128,-89,-127,-131,126,-90,-37,-147,72,-80,-79,-90,-90,-133,-134,-163,-158,-162,-160,-159,-161,-36,62,183,-90,-125,-90,-126,-53,-90,198,-164,-90,-90,-90,-90,-90,-90,-90,-90,62,-38,-24,-85,-86,-90,-74,-90,-90,-90,-143,-140,183,-114,-72,-50,-73,-40,]),'IF':([38,49,50,58,59,60,64,65,66,70,76,81,105,106,144,145,156,179,182,185,202,220,222,233,235,245,246,248,],[-21,63,-21,-49,63,-47,-46,-48,-20,-22,-30,-37,-37,-147,-36,63,-53,63,-38,-24,-74,-143,-140,-114,-72,-50,-73,-40,]),'AND':([86,90,91,92,101,102,103,113,116,120,121,122,123,124,125,126,127,136,138,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,203,204,205,206,207,208,209,210,215,218,224,225,242,243,249,],[-129,-81,-130,-75,133,-136,-70,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-59,-63,-76,-82,-156,-154,-153,-152,-98,-155,-77,-83,-132,-96,-94,-93,-92,-101,-95,-135,-135,-66,-64,-69,-67,-65,-68,-87,-91,133,133,-99,-100,-115,]),'CHAR':([10,34,37,79,83,213,],[18,18,18,18,18,18,]),'LBRACE':([21,33,54,69,167,170,199,223,236,],[-146,38,-106,81,-142,38,38,-139,38,]),'INT':([10,34,37,79,83,213,],[19,19,19,19,19,19,]),'CTEBOOL':([73,78,87,88,89,95,96,98,114,115,119,131,133,135,137,139,140,141,142,143,150,152,154,155,157,168,171,172,173,174,175,176,177,178,187,189,200,212,216,217,],[-90,-90,-128,-89,-127,-131,127,-90,-80,-79,-90,-90,-133,-134,-163,-158,-162,-160,-159,-161,-90,-125,-90,-126,-90,-164,-90,-90,-90,-90,-90,-90,-90,-90,-85,-86,-90,-90,-90,-90,]),'FLOAT':([10,34,37,79,83,213,],[15,15,15,15,15,15,]),'BOOL':([10,34,37,79,83,213,],[20,20,20,20,20,20,]),'RBRACKET':([36,86,90,91,92,113,116,120,121,122,123,124,125,126,127,151,153,160,161,162,163,164,165,169,186,188,191,192,193,194,195,196,197,215,218,242,243,249,],[43,-129,-81,-130,-75,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-76,-82,-156,-154,-153,-152,-98,-155,201,-77,-83,-132,-96,-94,-93,-92,-101,-95,-87,-91,-99,-100,-115,]),'MAIN':([5,6,7,8,11,12,13,22,24,67,82,108,147,184,247,],[-145,-4,-103,-4,21,-103,-3,-102,-5,-7,-105,-148,-149,-104,-33,]),'OR':([86,90,91,92,101,102,103,113,116,120,121,122,123,124,125,126,127,136,138,151,153,160,161,162,163,164,165,186,188,191,192,193,194,195,196,197,203,204,205,206,207,208,209,210,215,218,224,225,242,243,249,],[-129,-81,-130,-75,135,-136,-70,-78,-84,-124,-124,-88,-124,-97,-124,-124,-124,-59,-63,-76,-82,-156,-154,-153,-152,-98,-155,-77,-83,-132,-96,-94,-93,-92,-101,-95,-135,-135,-66,-64,-69,-67,-65,-68,-87,-91,135,135,-99,-100,-115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([6,8,],[8,8,]),'menor':([142,],[177,]),'bloque':([33,170,199,236,],[39,202,220,246,]),'mayor':([139,],[174,]),'mayorIg':([141,],[176,]),'ambCicloTermino':([116,],[153,]),'igual':([140,],[175,]),'factor':([73,78,98,119,131,150,154,157,171,172,173,174,175,176,177,178,200,212,216,217,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'addTypeGlobalFuncion':([227,],[240,]),'initDicFunc':([54,],[69,]),'idVarsMain':([55,111,],[71,149,]),'paso2_div':([155,],[189,]),'cteLlamada':([219,],[232,]),'cicloBloque':([49,59,],[61,75,]),'cteChar':([161,],[193,]),'cicloTermino':([73,78,98,119,131,150,154,157,171,172,173,174,175,176,177,178,200,212,216,217,],[90,90,90,90,90,90,188,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'expresion':([78,98,171,172,212,],[102,102,102,102,226,]),'bloqueFuncion':([69,],[82,]),'parametros':([37,],[47,]),'ambExp':([113,],[151,]),'addVariableDirMain':([72,],[84,]),'paso5':([91,],[116,]),'auxVar1':([14,],[24,]),'expAndOr':([78,98,],[100,129,]),'createVariableDir':([6,8,],[9,9,]),'ciclo':([49,59,145,179,],[58,58,58,58,]),'tipo':([10,34,37,79,83,213,],[17,40,44,44,109,227,]),'asig':([168,],[200,]),'llamada':([96,],[124,]),'condicion':([49,59,145,179,],[60,60,60,60,]),'cicloBloqueFuncion':([145,179,],[180,211,]),'cicloExp':([73,78,98,119,131,150,157,171,172,173,174,175,176,177,178,200,212,216,217,],[92,92,92,92,92,186,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'paso12':([100,],[132,]),'auxEscritura1':([73,157,],[93,190,]),'auxEscritura2':([73,157,],[94,94,]),'ambIdVarsMain':([84,],[110,]),'paso11':([221,],[234,]),'paso8_or':([135,],[172,]),'paso16':([167,],[199,]),'auxExp':([73,78,98,113,119,131,150,154,157,171,172,173,174,175,176,177,178,200,212,216,217,],[88,88,88,150,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'cicloExpresion':([78,98,171,172,],[101,101,203,204,]),'auxCicloExpresion':([101,224,225,],[134,237,238,]),'auxAsignacion1':([99,],[130,]),'cicloVarsFuncion':([81,105,],[106,144,]),'escritura':([49,59,145,179,],[65,65,65,65,]),'paso19':([5,],[6,]),'addParameters':([53,],[68,]),'addVariableDirFuncion':([183,],[214,]),'auxCondicion':([202,],[222,]),'termino':([73,78,98,119,131,150,157,171,172,173,174,175,176,177,178,200,212,216,217,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'paso3_resta':([87,],[114,]),'addProcDirectoryFunc':([82,],[108,]),'paso13':([223,],[236,]),'paso10':([102,],[136,]),'createVariableDirMain':([38,50,],[48,48,]),'addVariableDir':([25,],[35,]),'paso17':([220,],[233,]),'paso14':([222,],[235,]),'paso15':([57,],[74,]),'paso18':([94,],[118,]),'estatuto':([49,59,145,179,],[59,59,179,179,]),'ambAuxEscritura1':([118,],[158,]),'diferente':([137,],[173,]),'cteString':([160,],[192,]),'cicloVars':([6,8,],[7,13,]),'paso9':([203,204,],[224,225,]),'paso1':([62,85,120,121,123,125,126,127,],[77,112,160,161,162,163,164,165,]),'paso4':([86,],[113,]),'varsMain':([38,50,],[50,50,]),'paso6':([95,],[119,]),'paso7':([191,],[215,]),'asignacion':([49,59,145,179,],[64,64,64,64,]),'cteBool':([165,],[197,]),'addProcedureDir':([3,],[4,]),'cteInt':([163,],[195,]),'paso8_and':([133,],[171,]),'ambAuxTipo1':([15,16,18,19,20,],[27,28,30,31,32,]),'menorIg':([143,],[178,]),'auxVar1Main':([55,],[70,]),'cteFloat':([162,],[194,]),'auxVarcte':([196,],[218,]),'ambIdVars':([35,],[41,]),'cicloVarsMain':([38,50,],[49,66,]),'addTypeGlobal':([40,],[51,]),'auxExpresion':([103,],[138,]),'varsFuncion':([81,105,],[105,105,]),'auxFunction':([37,],[45,]),'auxParametros':([37,79,],[46,104,]),'auxVar1Funcion':([146,],[182,]),'createVariableDirFuncion':([81,105,],[107,107,]),'addType':([77,164,],[99,196,]),'funcion':([7,12,],[12,12,]),'auxTermino':([116,],[154,]),'auxFactor':([73,78,98,119,131,150,154,157,171,172,173,174,175,176,177,178,200,212,216,217,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'varcte':([96,],[122,]),'paso3_suma':([89,],[115,]),'idVars':([14,42,],[23,52,]),'paso23':([147,],[184,]),'paso22':([108,],[147,]),'idVarsFuncion':([146,229,],[181,241,]),'paso20':([21,],[33,]),'paso2_mult':([152,],[187,]),'paso24':([198,],[219,]),'paso21':([106,],[145,]),'cicloFuncion':([7,12,],[11,22,]),'programa':([0,],[2,]),'exp':([73,78,98,119,131,157,171,172,173,174,175,176,177,178,200,212,216,217,],[97,103,103,159,169,97,103,103,205,206,207,208,209,210,221,103,230,231,]),'ambAuxParametros':([68,],[80,]),'ambIdVarsFuncion':([214,],[228,]),'addTypeGlobalMain':([109,],[148,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON paso19 cicloVars cicloFuncion MAIN paso20 bloque','programa',10,'p_programa','MyLittleDucky.py',78),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',82),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',90),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',91),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',94),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',97),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',102),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',105),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',114),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',117),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',127),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',128),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',131),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',132),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',133),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',134),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',135),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',140),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',141),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',144),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',145),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',148),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',151),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',156),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',159),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',169),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',172),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',182),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',183),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',186),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',189),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',190),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion paso21 cicloBloqueFuncion RETURN expresion SEMICOLON RBRACE','bloqueFuncion',8,'p_bloqueFuncion','MyLittleDucky.py',193),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',196),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',197),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',200),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',201),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',204),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',207),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',212),
  ('addTypeGlobalFuncion -> <empty>','addTypeGlobalFuncion',0,'p_addTypeGlobalFuncion','MyLittleDucky.py',215),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',225),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',228),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',241),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',242),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',245),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',246),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',247),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',248),
  ('asignacion -> ID paso1 addType auxAsignacion1 EQUALA asig exp paso11 SEMICOLON','asignacion',9,'p_asignacion','MyLittleDucky.py',253),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',257),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',258),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',261),
  ('auxEscritura1 -> auxEscritura2 paso18 ambAuxEscritura1','auxEscritura1',3,'p_auxEscritura1','MyLittleDucky.py',265),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',268),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',269),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',272),
  ('auxEscritura2 -> CTESTRING paso1','auxEscritura2',2,'p_auxEscritura2','MyLittleDucky.py',273),
  ('cicloExpresion -> expresion paso10','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',276),
  ('auxCicloExpresion -> AND paso8_and cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',280),
  ('auxCicloExpresion -> OR paso8_or cicloExpresion paso9 auxCicloExpresion','auxCicloExpresion',5,'p_auxCicloExpresion','MyLittleDucky.py',281),
  ('auxCicloExpresion -> <empty>','auxCicloExpresion',0,'p_auxCicloExpresion','MyLittleDucky.py',282),
  ('expresion -> exp auxExpresion','expresion',2,'p_expresion','MyLittleDucky.py',285),
  ('auxExpresion -> GTHAN mayor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',289),
  ('auxExpresion -> LTHAN menor exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',290),
  ('auxExpresion -> NOTEQUAL diferente exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',291),
  ('auxExpresion -> GETHAN mayorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',292),
  ('auxExpresion -> LETHAN menorIg exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',293),
  ('auxExpresion -> EQUAL igual exp','auxExpresion',3,'p_auxExpresion','MyLittleDucky.py',294),
  ('auxExpresion -> <empty>','auxExpresion',0,'p_auxExpresion','MyLittleDucky.py',295),
  ('expAndOr -> cicloExpresion auxCicloExpresion','expAndOr',2,'p_expAndOr','MyLittleDucky.py',298),
  ('condicion -> IF LPAREN expAndOr paso12 RPAREN bloque auxCondicion paso14','condicion',8,'p_condicion','MyLittleDucky.py',301),
  ('auxCondicion -> ELSE paso13 bloque','auxCondicion',3,'p_auxCondicion','MyLittleDucky.py',305),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',306),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',309),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',312),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',315),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',316),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',319),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',320),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',323),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',326),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',329),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',330),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',333),
  ('auxTermino -> DIVIDE paso2_div','auxTermino',2,'p_auxTermino','MyLittleDucky.py',334),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',337),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',338),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',341),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',342),
  ('varcte -> ID paso1 addType auxVarcte','varcte',4,'p_varcte','MyLittleDucky.py',345),
  ('varcte -> CTEINT paso1 cteInt','varcte',3,'p_varcte','MyLittleDucky.py',346),
  ('varcte -> CTEFLOAT paso1 cteFloat','varcte',3,'p_varcte','MyLittleDucky.py',347),
  ('varcte -> CTECHAR paso1 cteChar','varcte',3,'p_varcte','MyLittleDucky.py',348),
  ('varcte -> CTEBOOL paso1 cteBool','varcte',3,'p_varcte','MyLittleDucky.py',349),
  ('varcte -> CTESTRING paso1 cteString','varcte',3,'p_varcte','MyLittleDucky.py',350),
  ('varcte -> llamada','varcte',1,'p_varcte','MyLittleDucky.py',351),
  ('addType -> <empty>','addType',0,'p_addType','MyLittleDucky.py',368),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',383),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',384),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',385),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',388),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',389),
  ('funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN initDicFunc bloqueFuncion addProcDirectoryFunc paso22 paso23','funcion',11,'p_funcion','MyLittleDucky.py',392),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',395),
  ('initDicFunc -> <empty>','initDicFunc',0,'p_initDicFunc','MyLittleDucky.py',411),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',417),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',418),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',421),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',424),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',427),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',441),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',442),
  ('ciclo -> WHILE paso15 LPAREN expAndOr RPAREN paso16 bloque paso17','ciclo',8,'p_ciclo','MyLittleDucky.py',445),
  ('llamada -> CALL COLON ID paso24 cteLlamada LPAREN RPAREN','llamada',7,'p_llamada','MyLittleDucky.py',449),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',453),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',454),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',457),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',458),
  ('auxArgumentos1 -> exp','auxArgumentos1',1,'p_auxArgumentos1','MyLittleDucky.py',461),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',464),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',465),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',468),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',474),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',479),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',483),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',487),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',491),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',495),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',523),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',554),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',558),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',566),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',570),
  ('paso9 -> <empty>','paso9',0,'p_paso9','MyLittleDucky.py',574),
  ('paso10 -> <empty>','paso10',0,'p_paso10','MyLittleDucky.py',605),
  ('paso11 -> <empty>','paso11',0,'p_paso11','MyLittleDucky.py',636),
  ('paso12 -> <empty>','paso12',0,'p_paso12','MyLittleDucky.py',675),
  ('paso13 -> <empty>','paso13',0,'p_paso13','MyLittleDucky.py',695),
  ('paso14 -> <empty>','paso14',0,'p_paso14','MyLittleDucky.py',707),
  ('paso15 -> <empty>','paso15',0,'p_paso15','MyLittleDucky.py',715),
  ('paso16 -> <empty>','paso16',0,'p_paso16','MyLittleDucky.py',721),
  ('paso17 -> <empty>','paso17',0,'p_paso17','MyLittleDucky.py',741),
  ('paso18 -> <empty>','paso18',0,'p_paso18','MyLittleDucky.py',751),
  ('paso19 -> <empty>','paso19',0,'p_paso19','MyLittleDucky.py',763),
  ('paso20 -> <empty>','paso20',0,'p_paso20','MyLittleDucky.py',772),
  ('paso21 -> <empty>','paso21',0,'p_paso21','MyLittleDucky.py',779),
  ('paso22 -> <empty>','paso22',0,'p_paso22','MyLittleDucky.py',791),
  ('paso23 -> <empty>','paso23',0,'p_paso23','MyLittleDucky.py',802),
  ('paso24 -> <empty>','paso24',0,'p_paso24','MyLittleDucky.py',821),
  ('paso25 -> <empty>','paso25',0,'p_paso25','MyLittleDucky.py',830),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',833),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',837),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',842),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',847),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',852),
  ('cteLlamada -> <empty>','cteLlamada',0,'p_cteLlamada','MyLittleDucky.py',856),
  ('mayor -> <empty>','mayor',0,'p_mayor','MyLittleDucky.py',867),
  ('menor -> <empty>','menor',0,'p_menor','MyLittleDucky.py',871),
  ('mayorIg -> <empty>','mayorIg',0,'p_mayorIg','MyLittleDucky.py',875),
  ('menorIg -> <empty>','menorIg',0,'p_menorIg','MyLittleDucky.py',879),
  ('igual -> <empty>','igual',0,'p_igual','MyLittleDucky.py',883),
  ('diferente -> <empty>','diferente',0,'p_diferente','MyLittleDucky.py',887),
  ('asig -> <empty>','asig',0,'p_asig','MyLittleDucky.py',891),
]
