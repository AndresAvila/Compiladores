
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C3DEAD55C551BCDE92FDAC713A2C24B1'
    
_lr_action_items = {'MULTI':([93,123,128,129,130,131,132,133,134,164,165,166,167,168,169,172,191,200,201,202,],[-128,157,-137,-122,-136,-133,-134,-135,-100,-97,-89,-96,-93,-94,-95,-92,-130,-88,-98,-99,]),'RETURN':([53,55,56,58,61,62,76,82,112,113,149,150,151,155,161,173,178,179,180,182,185,196,203,211,],[-51,-50,-47,-49,-46,-48,-30,-37,-37,-35,-36,-35,183,-121,-55,-112,-75,-52,-113,-34,-38,-73,-74,-40,]),'READ':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,149,150,155,161,173,178,179,180,185,187,196,203,211,],[-21,50,-21,-51,50,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,50,-36,50,-121,-55,-112,-75,-52,-113,-38,-24,-73,-74,-40,]),'LBRACKET':([14,16,17,18,19,60,88,92,93,94,120,123,128,129,130,131,132,133,134,156,158,164,165,166,167,168,169,172,177,189,191,193,200,201,202,],[25,25,25,25,25,77,-127,-82,-128,-76,-79,-85,-137,-122,-136,-133,-134,-135,171,-77,-83,-97,-89,-96,-93,-94,-95,-92,-78,-84,-130,202,-88,-98,-99,]),'WHILE':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,149,150,155,161,173,178,179,180,185,187,196,203,211,],[-21,52,-21,-51,52,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,52,-36,52,-121,-55,-112,-75,-52,-113,-38,-24,-73,-74,-40,]),'PROGRAM':([0,],[1,]),'PRINT':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,149,150,155,161,173,178,179,180,185,187,196,203,211,],[-21,51,-21,-51,51,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,51,-36,51,-121,-55,-112,-75,-52,-113,-38,-24,-73,-74,-40,]),'CTESTRING':([72,73,75,77,79,88,89,90,91,92,93,94,97,98,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,170,171,172,174,175,176,177,188,189,190,191,200,201,202,],[87,-91,-91,-91,-91,-127,-126,-90,-125,-82,-128,-76,-129,128,-79,-91,-79,-81,-80,-85,87,-91,-137,-122,-136,-133,-134,-135,-100,-131,-91,-132,-66,-91,-91,-77,-123,-83,-91,-123,-97,-89,-96,-93,-94,-95,-91,-91,-92,-64,-91,-65,-78,-86,-84,-87,-130,-88,-98,-99,]),'MINUS':([72,73,75,77,79,88,89,91,92,93,94,97,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,170,171,172,174,175,176,177,188,189,190,191,200,201,202,],[89,89,89,89,89,-127,-126,-125,-82,-128,-76,-129,89,89,89,-81,-80,-85,89,89,-137,-122,-136,-133,-134,-135,-100,-131,89,-132,-66,89,89,-77,-123,-83,89,-123,-97,-89,-96,-93,-94,-95,89,89,-92,-64,89,-65,-78,-86,-84,-87,-130,-88,-98,-99,]),'RBRACE':([32,39,40,53,54,55,56,58,59,61,62,63,68,74,76,155,161,173,178,179,180,187,196,203,204,],[-21,-32,-21,-51,-32,-50,-47,-49,76,-46,-48,-20,-22,-31,-30,-121,-55,-112,-75,-52,-113,-24,-73,-74,208,]),'RPAREN':([37,46,47,48,66,79,81,86,87,88,92,93,94,95,96,99,100,101,102,103,106,107,108,109,111,120,123,126,128,129,130,131,132,133,134,138,140,146,148,156,158,162,163,164,165,166,167,168,169,172,177,181,189,191,192,194,200,201,202,],[-106,67,-107,-105,-109,-115,-111,119,-60,-127,-82,-128,-76,124,-58,-59,135,-63,-79,142,-114,145,-116,-120,-108,-79,-85,-56,-137,-122,-136,-133,-134,-135,-100,-61,-66,-118,-110,-77,-83,-57,191,-97,-89,-96,-93,-94,-95,-92,-78,-119,-84,-130,201,-62,-88,-98,-99,]),'SEMICOLON':([3,4,14,16,17,18,19,26,28,29,30,31,41,44,64,88,92,93,94,116,119,120,123,124,128,129,130,131,132,133,134,144,145,153,156,158,164,165,166,167,168,169,172,177,189,191,197,200,201,202,205,209,],[-2,5,-19,-19,-19,-19,-19,-15,-13,-16,-17,-14,-8,-18,80,-127,-82,-128,-76,-25,155,-79,-85,161,-137,-122,-136,-133,-134,-135,-100,179,180,187,-77,-83,-97,-89,-96,-93,-94,-95,-92,-78,-84,-130,204,-88,-98,-99,-41,211,]),'CTEFLOAT':([72,73,75,77,79,88,89,90,91,92,93,94,97,98,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,170,171,172,174,175,176,177,188,189,190,191,200,201,202,],[-91,-91,-91,-91,-91,-127,-126,-90,-125,-82,-128,-76,-129,132,-79,-91,-79,-81,-80,-85,-91,-91,-137,-122,-136,-133,-134,-135,-100,-131,-91,-132,-66,-91,-91,-77,-123,-83,-91,-123,-97,-89,-96,-93,-94,-95,-91,-91,-92,-64,-91,-65,-78,-86,-84,-87,-130,-88,-98,-99,]),'PLUS':([72,73,75,77,79,88,89,91,92,93,94,97,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,170,171,172,174,175,176,177,188,189,190,191,200,201,202,],[91,91,91,91,91,-127,-126,-125,-82,-128,-76,-129,91,91,91,-81,-80,-85,91,91,-137,-122,-136,-133,-134,-135,-100,-131,91,-132,-66,91,91,-77,-123,-83,91,-123,-97,-89,-96,-93,-94,-95,91,91,-92,-64,91,-65,-78,-86,-84,-87,-130,-88,-98,-99,]),'COLON':([22,24,35,42,65,69,70,85,117,154,184,186,199,206,210,],[34,-10,-12,-9,-11,84,-27,-29,-26,-28,198,-43,-45,-42,-44,]),'COMMA':([24,35,66,70,81,85,87,88,92,93,94,96,99,109,120,123,128,129,130,131,132,133,134,156,158,164,165,166,167,168,169,172,177,186,189,191,199,200,201,202,],[-10,43,-109,-27,110,118,-60,-127,-82,-128,-76,125,-59,147,-79,-85,-137,-122,-136,-133,-134,-135,-100,-77,-83,-97,-89,-96,-93,-94,-95,-92,-78,-43,-84,-130,207,-88,-98,-99,]),'EQUALA':([60,78,143,],[-54,105,-53,]),'$end':([2,33,76,],[0,-1,-30,]),'FUNCTION':([5,6,7,9,12,23,80,83,115,208,],[-4,-4,10,-3,10,-5,-7,-104,-103,-33,]),'STRING':([10,34,37,84,110,198,],[14,14,14,14,14,14,]),'CTEINT':([25,72,73,75,77,79,88,89,90,91,92,93,94,97,98,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,170,171,172,174,175,176,177,188,189,190,191,200,201,202,],[36,-91,-91,-91,-91,-91,-127,-126,-90,-125,-82,-128,-76,-129,131,-79,-91,-79,-81,-80,-85,-91,-91,-137,-122,-136,-133,-134,-135,-100,-131,-91,-132,-66,-91,-91,-77,-123,-83,-91,-123,-97,-89,-96,-93,-94,-95,-91,-91,-92,-64,-91,-65,-78,-86,-84,-87,-130,-88,-98,-99,]),'DIVIDE':([93,123,128,129,130,131,132,133,134,164,165,166,167,168,169,172,191,200,201,202,],[-128,160,-137,-122,-136,-133,-134,-135,-100,-97,-89,-96,-93,-94,-95,-92,-130,-88,-98,-99,]),'ELSE':([76,178,],[-30,195,]),'LPAREN':([27,50,51,52,57,60,72,73,75,77,79,88,89,91,92,93,94,97,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,170,171,172,174,175,176,177,188,189,190,191,200,201,202,],[37,71,72,73,75,79,97,97,97,97,97,-127,-126,-125,-82,-128,-76,-129,-79,97,-79,-81,-80,-85,97,97,-137,-122,-136,-133,-134,-135,170,-131,97,-132,-66,97,97,-77,-123,-83,97,-123,-97,-89,-96,-93,-94,-95,97,97,-92,-64,97,-65,-78,-86,-84,-87,-130,-88,-98,-99,]),'VAR':([5,6,8,23,32,38,40,68,80,82,112,114,185,187,211,],[-6,-6,13,-5,-23,49,-23,-22,-7,-39,-39,152,-38,-24,-40,]),'CTECHAR':([72,73,75,77,79,88,89,90,91,92,93,94,97,98,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,170,171,172,174,175,176,177,188,189,190,191,200,201,202,],[-91,-91,-91,-91,-91,-127,-126,-90,-125,-82,-128,-76,-129,133,-79,-91,-79,-81,-80,-85,-91,-91,-137,-122,-136,-133,-134,-135,-100,-131,-91,-132,-66,-91,-91,-77,-123,-83,-91,-123,-97,-89,-96,-93,-94,-95,-91,-91,-92,-64,-91,-65,-78,-86,-84,-87,-130,-88,-98,-99,]),'ID':([1,13,14,15,16,17,18,19,26,28,29,30,31,32,39,40,43,44,45,49,53,54,55,56,58,61,62,63,68,71,72,73,75,76,77,79,82,88,89,90,91,92,93,94,97,98,102,105,112,113,118,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,149,150,152,155,156,157,158,159,160,161,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,185,187,188,189,190,191,196,200,201,202,203,207,211,],[3,24,-19,27,-19,-19,-19,-19,-15,-13,-16,-17,-14,-21,60,-21,24,-18,66,70,-51,60,-50,-47,-49,-46,-48,-20,-22,86,-91,-91,-91,-30,-91,-91,-37,-127,-126,-90,-125,-82,-128,-76,-129,134,-79,-91,-37,60,70,-79,-81,-80,-85,-91,-91,-137,-122,-136,-133,-134,-135,-100,-131,-91,-132,-66,-91,-91,-36,60,186,-121,-77,-123,-83,-91,-123,-55,-97,-89,-96,-93,-94,-95,-91,-91,-92,-112,-64,-91,-65,-78,-75,-52,-113,197,-38,-24,-86,-84,-87,-130,-73,-88,-98,-99,-74,186,-40,]),'IF':([32,39,40,53,54,55,56,58,61,62,63,68,76,82,112,113,149,150,155,161,173,178,179,180,185,187,196,203,211,],[-21,57,-21,-51,57,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,57,-36,57,-121,-55,-112,-75,-52,-113,-38,-24,-73,-74,-40,]),'AND':([88,92,93,94,101,102,120,123,128,129,130,131,132,133,134,140,156,158,164,165,166,167,168,169,172,177,189,191,200,201,202,],[-127,-82,-128,-76,136,-79,-79,-85,-137,-122,-136,-133,-134,-135,-100,-66,-77,-83,-97,-89,-96,-93,-94,-95,-92,-78,-84,-130,-88,-98,-99,]),'CHAR':([10,34,37,84,110,198,],[18,18,18,18,18,18,]),'LBRACE':([20,67,135,142,195,],[32,82,32,32,32,]),'INT':([10,34,37,84,110,198,],[16,16,16,16,16,16,]),'CTEBOOL':([72,73,75,77,79,88,89,90,91,92,93,94,97,98,102,105,120,121,122,123,125,127,128,129,130,131,132,133,134,136,137,139,140,141,147,156,157,158,159,160,164,165,166,167,168,169,170,171,172,174,175,176,177,188,189,190,191,200,201,202,],[-91,-91,-91,-91,-91,-127,-126,-90,-125,-82,-128,-76,-129,130,-79,-91,-79,-81,-80,-85,-91,-91,-137,-122,-136,-133,-134,-135,-100,-131,-91,-132,-66,-91,-91,-77,-123,-83,-91,-123,-97,-89,-96,-93,-94,-95,-91,-91,-92,-64,-91,-65,-78,-86,-84,-87,-130,-88,-98,-99,]),'FLOAT':([10,34,37,84,110,198,],[17,17,17,17,17,17,]),'BOOL':([10,34,37,84,110,198,],[19,19,19,19,19,19,]),'RBRACKET':([36,88,92,93,94,104,120,123,128,129,130,131,132,133,134,156,158,164,165,166,167,168,169,172,177,189,191,200,201,202,],[44,-127,-82,-128,-76,143,-79,-85,-137,-122,-136,-133,-134,-135,-100,-77,-83,-97,-89,-96,-93,-94,-95,-92,-78,-84,-130,-88,-98,-99,]),'MAIN':([5,6,7,9,11,12,21,23,80,83,115,208,],[-4,-4,-102,-3,20,-102,-101,-5,-7,-104,-103,-33,]),'OR':([88,92,93,94,101,102,120,123,128,129,130,131,132,133,134,140,156,158,164,165,166,167,168,169,172,177,189,191,200,201,202,],[-127,-82,-128,-76,139,-79,-79,-85,-137,-122,-136,-133,-134,-135,-100,-66,-77,-83,-97,-89,-96,-93,-94,-95,-92,-78,-84,-130,-88,-98,-99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([5,6,],[6,6,]),'bloque':([20,135,142,195,],[33,173,178,203,]),'ambCicloTermino':([123,],[158,]),'auxLlamada':([79,],[107,]),'paso5':([93,],[123,]),'factor':([72,73,75,77,79,105,125,127,137,141,147,159,170,171,175,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'addTypeGlobalFuncion':([205,],[209,]),'idVarsMain':([49,118,],[69,154,]),'cicloBloque':([39,54,],[59,74,]),'cteChar':([133,],[169,]),'cicloTermino':([72,73,75,77,79,105,125,127,137,141,147,159,170,171,175,],[92,92,92,92,92,92,92,92,92,92,92,189,92,92,92,]),'expresion':([73,75,137,175,],[101,101,175,101,]),'bloqueFuncion':([67,],[83,]),'cicloExp':([72,73,75,77,79,105,125,127,137,141,147,170,171,175,],[94,94,94,94,94,94,94,94,94,177,94,94,94,94,]),'parametros':([37,],[48,]),'ambExp':([102,120,],[140,156,]),'addVariableDirMain':([70,],[85,]),'auxVar1':([13,],[23,]),'createVariableDir':([5,6,],[8,8,]),'argumentos':([79,],[106,]),'ciclo':([39,54,113,150,],[53,53,53,53,]),'tipo':([10,34,37,84,110,198,],[15,41,45,116,45,205,]),'llamada':([39,54,113,150,],[55,55,55,55,]),'condicion':([39,54,113,150,],[56,56,56,56,]),'cicloBloqueFuncion':([113,150,],[151,182,]),'auxArgumentos1':([79,147,],[108,181,]),'lectura':([39,54,113,150,],[58,58,58,58,]),'auxEscritura1':([72,125,],[95,162,]),'auxEscritura2':([72,125,],[96,96,]),'ambIdVarsMain':([85,],[117,]),'paso8_or':([139,],[176,]),'auxExp':([72,73,75,77,79,102,105,120,125,127,137,141,147,159,170,171,175,],[90,90,90,90,90,141,90,141,90,90,90,90,90,90,90,90,90,]),'auxCicloExpresion':([101,],[137,]),'auxAsignacion1':([60,],[78,]),'cicloVarsFuncion':([82,112,],[113,149,]),'ambIdVarsFuncion':([199,],[206,]),'addParameters':([66,],[81,]),'addVariableDirFuncion':([186,],[199,]),'auxCondicion':([178,],[196,]),'termino':([72,73,75,77,79,105,125,127,137,141,147,170,171,175,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'paso3_resta':([89,],[121,]),'addProcDirectoryFunc':([83,],[115,]),'createVariableDirMain':([32,40,],[38,38,]),'addVariableDir':([24,],[35,]),'cicloExpresion':([73,75,175,],[100,103,194,]),'estatuto':([39,54,113,150,],[54,54,150,150,]),'ambAuxEscritura1':([96,],[126,]),'cteString':([128,],[164,]),'cicloVars':([5,6,],[7,9,]),'paso1':([129,],[165,]),'paso4':([88,],[120,]),'varsMain':([32,40,],[40,40,]),'paso6':([97,],[127,]),'paso7':([191,],[200,]),'asignacion':([39,54,113,150,],[61,61,61,61,]),'cteBool':([130,],[166,]),'addProcedureDir':([3,],[4,]),'cteInt':([131,],[167,]),'paso8_and':([136,],[174,]),'ambAuxTipo1':([14,16,17,18,19,],[26,28,29,30,31,]),'auxVar1Main':([49,],[68,]),'cteFloat':([132,],[168,]),'cicloVarsMain':([32,40,],[39,63,]),'ambIdVars':([35,],[42,]),'auxVarcte':([134,],[172,]),'addTypeGlobal':([41,],[64,]),'varsFuncion':([82,112,],[112,112,]),'auxFunction':([37,],[46,]),'auxParametros':([37,110,],[47,148,]),'auxVar1Funcion':([152,],[185,]),'createVariableDirFuncion':([82,112,],[114,114,]),'funcion':([7,12,],[12,12,]),'ambAuxArgumentos1':([109,],[146,]),'auxTermino':([123,],[159,]),'auxFactor':([72,73,75,77,79,105,125,127,137,141,147,159,170,171,175,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'varcte':([98,],[129,]),'paso3_suma':([91,],[122,]),'idVars':([13,43,],[22,65,]),'idVarsFuncion':([152,207,],[184,210,]),'paso2_mult':([157,160,],[188,190,]),'ambCicloExpresion':([101,],[138,]),'cicloFuncion':([7,12,],[11,21,]),'programa':([0,],[2,]),'exp':([72,73,75,77,79,105,125,127,137,147,170,171,175,],[99,102,102,104,109,144,99,163,102,109,192,193,102,]),'ambAuxParametros':([81,],[111,]),'escritura':([39,54,113,150,],[62,62,62,62,]),'addTypeGlobalMain':([116,],[153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',8,'p_programa','MyLittleDucky.py',60),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',64),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',72),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',73),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',76),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',79),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',84),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',87),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',96),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',99),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',109),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',110),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',113),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',114),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',115),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',116),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',117),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',122),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',123),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',126),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',127),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',130),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',133),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',138),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',141),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',151),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',154),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',164),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',165),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',168),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',171),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',172),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RETURN ID SEMICOLON RBRACE','bloqueFuncion',7,'p_bloqueFuncion','MyLittleDucky.py',175),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',178),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',179),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',182),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',183),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',186),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',189),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',194),
  ('addTypeGlobalFuncion -> <empty>','addTypeGlobalFuncion',0,'p_addTypeGlobalFuncion','MyLittleDucky.py',197),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',207),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',210),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',221),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',222),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',225),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',226),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',227),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',228),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',229),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',230),
  ('asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',233),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',236),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',237),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',240),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',243),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',246),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',247),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',250),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',251),
  ('cicloExpresion -> expresion ambCicloExpresion','cicloExpresion',2,'p_cicloExpresion','MyLittleDucky.py',254),
  ('ambCicloExpresion -> auxCicloExpresion expresion cicloExpresion','ambCicloExpresion',3,'p_ambCicloExpresion','MyLittleDucky.py',257),
  ('ambCicloExpresion -> <empty>','ambCicloExpresion',0,'p_ambCicloExpresion','MyLittleDucky.py',258),
  ('auxCicloExpresion -> AND paso8_and','auxCicloExpresion',2,'p_auxCicloExpresion','MyLittleDucky.py',261),
  ('auxCicloExpresion -> OR paso8_or','auxCicloExpresion',2,'p_auxCicloExpresion','MyLittleDucky.py',262),
  ('expresion -> exp ambExp','expresion',2,'p_expresion','MyLittleDucky.py',265),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',272),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',273),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',274),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',275),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',276),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',277),
  ('condicion -> IF LPAREN cicloExpresion RPAREN bloque auxCondicion','condicion',6,'p_condicion','MyLittleDucky.py',280),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',283),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',284),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',287),
  ('cicloExp -> termino paso4 ambExp','cicloExp',3,'p_cicloExp','MyLittleDucky.py',290),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',293),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',294),
  ('auxExp -> PLUS paso3_suma','auxExp',2,'p_auxExp','MyLittleDucky.py',297),
  ('auxExp -> MINUS paso3_resta','auxExp',2,'p_auxExp','MyLittleDucky.py',298),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',301),
  ('cicloTermino -> factor paso5 ambCicloTermino','cicloTermino',3,'p_cicloTermino','MyLittleDucky.py',304),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',307),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',308),
  ('auxTermino -> MULTI paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',311),
  ('auxTermino -> DIVIDE paso2_mult','auxTermino',2,'p_auxTermino','MyLittleDucky.py',312),
  ('factor -> LPAREN paso6 exp RPAREN paso7','factor',5,'p_factor','MyLittleDucky.py',315),
  ('factor -> auxFactor varcte paso1','factor',3,'p_factor','MyLittleDucky.py',316),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',319),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',320),
  ('varcte -> ID auxVarcte','varcte',2,'p_varcte','MyLittleDucky.py',323),
  ('varcte -> CTEINT cteInt','varcte',2,'p_varcte','MyLittleDucky.py',324),
  ('varcte -> CTEFLOAT cteFloat','varcte',2,'p_varcte','MyLittleDucky.py',325),
  ('varcte -> CTECHAR cteChar','varcte',2,'p_varcte','MyLittleDucky.py',326),
  ('varcte -> CTEBOOL cteBool','varcte',2,'p_varcte','MyLittleDucky.py',327),
  ('varcte -> CTESTRING cteString','varcte',2,'p_varcte','MyLittleDucky.py',328),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',331),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',332),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',333),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',336),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',337),
  ('funcion -> FUNCTION tipo ID LPAREN auxFunction RPAREN bloqueFuncion addProcDirectoryFunc','funcion',8,'p_funcion','MyLittleDucky.py',340),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',343),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',350),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',351),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',354),
  ('auxParametros -> tipo ID addParameters ambAuxParametros','auxParametros',4,'p_auxParametros','MyLittleDucky.py',357),
  ('addParameters -> <empty>','addParameters',0,'p_addParameters','MyLittleDucky.py',360),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',371),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',372),
  ('ciclo -> WHILE LPAREN cicloExpresion RPAREN bloque','ciclo',5,'p_ciclo','MyLittleDucky.py',375),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',378),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',381),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',382),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',385),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',386),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',389),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',392),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',393),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',396),
  ('paso1 -> <empty>','paso1',0,'p_paso1','MyLittleDucky.py',402),
  ('paso2_mult -> <empty>','paso2_mult',0,'p_paso2_mult','MyLittleDucky.py',406),
  ('paso2_div -> <empty>','paso2_div',0,'p_paso2_div','MyLittleDucky.py',410),
  ('paso3_suma -> <empty>','paso3_suma',0,'p_paso3_suma','MyLittleDucky.py',414),
  ('paso3_resta -> <empty>','paso3_resta',0,'p_paso3_resta','MyLittleDucky.py',418),
  ('paso4 -> <empty>','paso4',0,'p_paso4','MyLittleDucky.py',422),
  ('paso5 -> <empty>','paso5',0,'p_paso5','MyLittleDucky.py',447),
  ('paso6 -> <empty>','paso6',0,'p_paso6','MyLittleDucky.py',472),
  ('paso7 -> <empty>','paso7',0,'p_paso7','MyLittleDucky.py',476),
  ('paso8_and -> <empty>','paso8_and',0,'p_paso8_and','MyLittleDucky.py',483),
  ('paso8_or -> <empty>','paso8_or',0,'p_paso8_or','MyLittleDucky.py',487),
  ('cteInt -> <empty>','cteInt',0,'p_cteInt','MyLittleDucky.py',491),
  ('cteFloat -> <empty>','cteFloat',0,'p_cteFloat','MyLittleDucky.py',495),
  ('cteChar -> <empty>','cteChar',0,'p_cteChar','MyLittleDucky.py',500),
  ('cteBool -> <empty>','cteBool',0,'p_cteBool','MyLittleDucky.py',505),
  ('cteString -> <empty>','cteString',0,'p_cteString','MyLittleDucky.py',510),
]
