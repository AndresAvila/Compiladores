
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9C3910BD4D199A39A5878072EFA846A5'
    
_lr_action_items = {'NOTEQUAL':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,155,156,157,160,181,182,],[-75,-81,-72,-78,133,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'MULTI':([92,125,126,127,128,129,130,131,156,160,181,182,],[121,-93,-85,-92,-89,-90,-91,-96,-84,-88,-94,-95,]),'GTHAN':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,155,156,157,160,181,182,],[-75,-81,-72,-78,135,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'CTESTRING':([71,72,74,76,78,88,89,91,94,95,102,116,118,121,122,123,133,134,135,136,137,138,139,144,158,159,],[93,-87,-87,-87,-87,-86,-76,-87,125,-77,-87,93,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-87,-87,]),'READ':([32,39,40,50,51,52,53,55,58,59,60,67,75,109,147,148,152,153,161,163,164,166,167,168,171,175,179,183,191,],[-21,47,-21,-51,47,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,47,-116,-55,-107,-71,-52,-108,-36,47,-24,-69,-38,-70,-40,]),'EQUAL':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,155,156,157,160,181,182,],[-75,-81,-72,-78,136,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'GETHAN':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,155,156,157,160,181,182,],[-75,-81,-72,-78,137,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'LBRACKET':([14,16,17,18,19,57,90,92,96,97,119,124,125,126,127,128,129,130,131,155,156,157,160,173,181,182,],[25,25,25,25,25,76,-75,-81,-72,-78,-73,-79,-93,-85,-92,-89,-90,-91,159,-74,-84,-80,-88,182,-94,-95,]),'WHILE':([32,39,40,50,51,52,53,55,58,59,60,67,75,109,147,148,152,153,161,163,164,166,167,168,171,175,179,183,191,],[-21,49,-21,-51,49,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,49,-116,-55,-107,-71,-52,-108,-36,49,-24,-69,-38,-70,-40,]),'PROGRAM':([0,],[1,]),'PRINT':([32,39,40,50,51,52,53,55,58,59,60,67,75,109,147,148,152,153,161,163,164,166,167,168,171,175,179,183,191,],[-21,48,-21,-51,48,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,48,-116,-55,-107,-71,-52,-108,-36,48,-24,-69,-38,-70,-40,]),'LETHAN':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,155,156,157,160,181,182,],[-75,-81,-72,-78,139,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'MINUS':([71,72,74,76,78,89,90,91,92,95,97,102,116,118,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,144,156,157,158,159,160,181,182,],[95,95,95,95,95,-76,95,95,-81,-77,-78,95,95,95,-82,-83,95,-79,-93,-85,-92,-89,-90,-91,-96,-65,95,-63,-68,-66,-64,-67,95,-84,-80,95,95,-88,-94,-95,]),'RBRACE':([32,39,40,50,51,52,53,55,56,58,59,60,67,73,75,109,147,148,152,153,161,163,164,166,167,168,169,171,175,176,179,183,191,],[-21,-32,-21,-51,-32,-50,-47,-49,75,-46,-48,-20,-22,-31,-30,-37,-37,-35,-116,-55,-107,-71,-52,-108,-36,-35,177,-24,-69,-34,-38,-70,-40,]),'RPAREN':([45,64,65,66,72,74,78,80,84,85,86,87,90,92,93,96,97,98,100,103,104,105,106,107,117,119,120,124,125,126,127,128,129,130,131,143,146,154,155,156,157,160,162,165,172,181,182,],[-102,81,-103,-101,-62,-62,-110,-106,114,-59,115,-58,-75,-81,-60,-72,-78,132,140,-115,145,-109,-111,-104,-56,-73,156,-79,-93,-85,-92,-89,-90,-91,-96,-113,-105,-57,-74,-84,-80,-88,-61,-114,181,-94,-95,]),'SEMICOLON':([3,4,14,16,17,18,19,26,28,29,30,31,41,44,61,90,92,96,97,111,114,115,119,124,125,126,127,128,129,130,131,142,145,150,155,156,157,160,181,182,186,189,],[-2,5,-19,-19,-19,-19,-19,-15,-13,-16,-17,-14,-8,-18,79,-75,-81,-72,-78,-25,152,153,-73,-79,-93,-85,-92,-89,-90,-91,-96,164,166,171,-74,-84,-80,-88,-94,-95,-41,191,]),'CTEFLOAT':([71,72,74,76,78,88,89,91,94,95,102,116,118,121,122,123,133,134,135,136,137,138,139,144,158,159,],[-87,-87,-87,-87,-87,-86,-76,-87,129,-77,-87,-87,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-87,-87,]),'PLUS':([71,72,74,76,78,89,90,91,92,95,97,102,116,118,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,144,156,157,158,159,160,181,182,],[89,89,89,89,89,-76,89,89,-81,-77,-78,89,89,89,-82,-83,89,-79,-93,-85,-92,-89,-90,-91,-96,-65,89,-63,-68,-66,-64,-67,89,-84,-80,89,89,-88,-94,-95,]),'COLON':([22,24,35,42,62,68,69,83,112,151,178,180,185,187,190,],[34,-10,-12,-9,-11,82,-27,-29,-26,-28,184,-43,-45,-42,-44,]),'COMMA':([24,35,69,80,83,85,87,90,92,93,96,97,103,119,124,125,126,127,128,129,130,131,155,156,157,160,180,181,182,185,],[-10,43,-27,108,113,-59,116,-75,-81,-60,-72,-78,144,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-43,-94,-95,188,]),'EQUALA':([57,77,141,],[-54,102,-53,]),'$end':([2,33,75,],[0,-1,-30,]),'FUNCTION':([5,6,7,9,12,23,79,110,177,],[-4,-4,10,-3,10,-5,-7,-99,-33,]),'STRING':([10,34,45,82,108,184,],[14,14,14,14,14,14,]),'CTEINT':([25,71,72,74,76,78,88,89,91,94,95,102,116,118,121,122,123,133,134,135,136,137,138,139,144,158,159,],[36,-87,-87,-87,-87,-87,-86,-76,-87,128,-77,-87,-87,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-87,-87,]),'DIVIDE':([92,125,126,127,128,129,130,131,156,160,181,182,],[122,-93,-85,-92,-89,-90,-91,-96,-84,-88,-94,-95,]),'ELSE':([75,163,],[-30,174,]),'LTHAN':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,155,156,157,160,181,182,],[-75,-81,-72,-78,138,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'LPAREN':([27,37,47,48,49,54,57,71,72,74,76,78,89,91,95,102,116,118,121,122,123,131,133,134,135,136,137,138,139,144,158,159,],[-100,45,70,71,72,74,78,91,91,91,91,91,-76,91,-77,91,91,91,-82,-83,91,158,-65,91,-63,-68,-66,-64,-67,91,91,91,]),'VAR':([5,6,8,23,32,38,40,67,79,109,147,149,171,179,191,],[-6,-6,13,-5,-23,46,-23,-22,-7,-39,-39,170,-24,-38,-40,]),'CTECHAR':([71,72,74,76,78,88,89,91,94,95,102,116,118,121,122,123,133,134,135,136,137,138,139,144,158,159,],[-87,-87,-87,-87,-87,-86,-76,-87,130,-77,-87,-87,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-87,-87,]),'ID':([1,13,14,15,16,17,18,19,26,28,29,30,31,32,39,40,43,44,46,50,51,52,53,55,58,59,60,63,67,70,71,72,74,75,76,78,88,89,91,94,95,102,109,113,116,118,121,122,123,133,134,135,136,137,138,139,144,147,148,152,153,158,159,161,163,164,166,167,168,170,171,175,179,183,188,191,],[3,24,-19,27,-19,-19,-19,-19,-15,-13,-16,-17,-14,-21,57,-21,24,-18,69,-51,57,-50,-47,-49,-46,-48,-20,80,-22,84,-87,-87,-87,-30,-87,-87,-86,-76,-87,131,-77,-87,-37,69,-87,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-37,57,-116,-55,-87,-87,-107,-71,-52,-108,-36,57,180,-24,-69,-38,-70,180,-40,]),'IF':([32,39,40,50,51,52,53,55,58,59,60,67,75,109,147,148,152,153,161,163,164,166,167,168,171,175,179,183,191,],[-21,54,-21,-51,54,-50,-47,-49,-46,-48,-20,-22,-30,-37,-37,54,-116,-55,-107,-71,-52,-108,-36,54,-24,-69,-38,-70,-40,]),'CHAR':([10,34,45,82,108,184,],[18,18,18,18,18,18,]),'LBRACE':([20,81,132,140,174,],[32,109,32,32,32,]),'INT':([10,34,45,82,108,184,],[16,16,16,16,16,16,]),'CTEBOOL':([71,72,74,76,78,88,89,91,94,95,102,116,118,121,122,123,133,134,135,136,137,138,139,144,158,159,],[-87,-87,-87,-87,-87,-86,-76,-87,127,-77,-87,-87,-87,-82,-83,-87,-65,-87,-63,-68,-66,-64,-67,-87,-87,-87,]),'FLOAT':([10,34,45,82,108,184,],[17,17,17,17,17,17,]),'BOOL':([10,34,45,82,108,184,],[19,19,19,19,19,19,]),'RBRACKET':([36,90,92,96,97,101,119,124,125,126,127,128,129,130,131,155,156,157,160,181,182,],[44,-75,-81,-72,-78,141,-73,-79,-93,-85,-92,-89,-90,-91,-96,-74,-84,-80,-88,-94,-95,]),'MAIN':([5,6,7,9,11,12,21,23,79,110,177,],[-4,-4,-98,-3,20,-98,-97,-5,-7,-99,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ambAuxTipo1':([14,16,17,18,19,],[26,28,29,30,31,]),'vars':([5,6,],[6,6,]),'idVarsFuncion':([170,188,],[178,190,]),'auxVar1':([13,],[23,]),'ambAuxArgumentos1':([103,],[143,]),'ambAuxEscritura1':([87,],[117,]),'createVariableDir':([5,6,],[8,8,]),'auxVarcte':([131,],[160,]),'ambIdVars':([35,],[42,]),'termino':([71,72,74,76,78,91,102,116,118,134,144,158,159,],[90,90,90,90,90,90,90,90,90,90,90,90,90,]),'addTypeGlobalFuncion':([186,],[189,]),'cicloVarsMain':([32,40,],[39,60,]),'argumentos':([78,],[105,]),'bloque':([20,132,140,174,],[33,161,163,183,]),'addTypeGlobal':([41,],[61,]),'addProcDirectoryFunc':([27,],[37,]),'ambAuxParametros':([80,],[107,]),'createVariableDirMain':([32,40,],[38,38,]),'addVariableDir':([24,],[35,]),'ciclo':([39,51,148,168,],[50,50,50,50,]),'tipo':([10,34,45,82,108,184,],[15,41,63,111,63,186,]),'varsFuncion':([109,147,],[147,147,]),'estatuto':([39,51,148,168,],[51,51,168,168,]),'auxFunction':([45,],[64,]),'auxLlamada':([78,],[104,]),'auxParametros':([45,108,],[65,146,]),'llamada':([39,51,148,168,],[52,52,52,52,]),'condicion':([39,51,148,168,],[53,53,53,53,]),'auxVar1Funcion':([170,],[179,]),'auxVar1Main':([46,],[67,]),'factor':([71,72,74,76,78,91,102,116,118,123,134,144,158,159,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'addVariableDirFuncion':([180,],[185,]),'createVariableDirFuncion':([109,147,],[149,149,]),'auxArgumentos1':([78,144,],[106,165,]),'lectura':([39,51,148,168,],[55,55,55,55,]),'funcion':([7,12,],[12,12,]),'auxEscritura2':([71,116,],[87,87,]),'cicloBloqueFuncion':([148,168,],[169,176,]),'auxEscritura1':([71,116,],[86,154,]),'cicloVars':([5,6,],[7,9,]),'ambIdVarsMain':([83,],[112,]),'idVarsMain':([46,113,],[68,151,]),'auxExpresion':([99,],[134,]),'auxTermino':([92,],[123,]),'cicloBloque':([39,51,],[56,73,]),'auxFactor':([71,72,74,76,78,91,102,116,118,123,134,144,158,159,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'auxExp':([71,72,74,76,78,90,91,102,116,118,123,134,144,158,159,],[88,88,88,88,88,118,88,88,88,88,88,88,88,88,88,]),'varsMain':([32,40,],[40,40,]),'cicloTermino':([71,72,74,76,78,91,102,116,118,123,134,144,158,159,],[97,97,97,97,97,97,97,97,97,157,97,97,97,97,]),'auxAsignacion1':([57,],[77,]),'expresion':([72,74,],[98,100,]),'varcte':([94,],[126,]),'idVars':([13,43,],[22,62,]),'asignacion':([39,51,148,168,],[58,58,58,58,]),'bloqueFuncion':([81,],[110,]),'addProcedureDir':([3,],[4,]),'cicloExp':([71,72,74,76,78,91,102,116,118,134,144,158,159,],[96,96,96,96,96,96,96,96,155,96,96,96,96,]),'cicloVarsFuncion':([109,147,],[148,167,]),'ambExp':([90,],[119,]),'cicloFuncion':([7,12,],[11,21,]),'programa':([0,],[2,]),'exp':([71,72,74,76,78,91,102,116,134,144,158,159,],[85,99,99,101,103,120,142,85,162,103,172,173,]),'auxCondicion':([163,],[175,]),'parametros':([45,],[66,]),'addVariableDirMain':([69,],[83,]),'ambIdVarsFuncion':([185,],[187,]),'ambCicloTermino':([92,],[124,]),'addTypeGlobalMain':([111,],[150,]),'escritura':([39,51,148,168,],[59,59,59,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',8,'p_programa','MyLittleDucky.py',21),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',25),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',33),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',34),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',37),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',40),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',45),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',48),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',57),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',60),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',70),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',71),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',74),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',75),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',76),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',77),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',78),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',83),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',84),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',87),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',88),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',91),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',94),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',99),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',102),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',112),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',115),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',125),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',126),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',129),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',132),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',133),
  ('bloqueFuncion -> LBRACE cicloVarsFuncion cicloBloqueFuncion RBRACE','bloqueFuncion',4,'p_bloqueFuncion','MyLittleDucky.py',136),
  ('cicloBloqueFuncion -> estatuto cicloBloqueFuncion','cicloBloqueFuncion',2,'p_cicloBloqueFuncion','MyLittleDucky.py',139),
  ('cicloBloqueFuncion -> <empty>','cicloBloqueFuncion',0,'p_cicloBloqueFuncion','MyLittleDucky.py',140),
  ('cicloVarsFuncion -> varsFuncion cicloVarsFuncion','cicloVarsFuncion',2,'p_cicloVarsFuncion','MyLittleDucky.py',143),
  ('cicloVarsFuncion -> <empty>','cicloVarsFuncion',0,'p_cicloVarsFuncion','MyLittleDucky.py',144),
  ('varsFuncion -> createVariableDirFuncion VAR auxVar1Funcion','varsFuncion',3,'p_varsFuncion','MyLittleDucky.py',147),
  ('createVariableDirFuncion -> <empty>','createVariableDirFuncion',0,'p_createVariableDirFuncion','MyLittleDucky.py',150),
  ('auxVar1Funcion -> idVarsFuncion COLON tipo addTypeGlobalFuncion SEMICOLON','auxVar1Funcion',5,'p_auxVar1Funcion','MyLittleDucky.py',155),
  ('addTypeGlobalFuncion -> <empty>','addTypeGlobalFuncion',0,'p_addTypeGlobalFuncion','MyLittleDucky.py',158),
  ('idVarsFuncion -> ID addVariableDirFuncion ambIdVarsFuncion','idVarsFuncion',3,'p_idVarsFuncion','MyLittleDucky.py',168),
  ('addVariableDirFuncion -> <empty>','addVariableDirFuncion',0,'p_addVariableDirFuncion','MyLittleDucky.py',171),
  ('ambIdVarsFuncion -> COMMA idVarsFuncion','ambIdVarsFuncion',2,'p_ambIdVarsFuncion','MyLittleDucky.py',181),
  ('ambIdVarsFuncion -> <empty>','ambIdVarsFuncion',0,'p_ambIdVarsFuncion','MyLittleDucky.py',182),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',185),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',186),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',187),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',188),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',189),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',190),
  ('asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',193),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',196),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',197),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',200),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',203),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',206),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',207),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',210),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',211),
  ('expresion -> exp auxExpresion exp','expresion',3,'p_expresion','MyLittleDucky.py',214),
  ('expresion -> <empty>','expresion',0,'p_expresion','MyLittleDucky.py',215),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',218),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',219),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',220),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',221),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',222),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',223),
  ('condicion -> IF LPAREN expresion RPAREN bloque auxCondicion','condicion',6,'p_condicion','MyLittleDucky.py',226),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',229),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',230),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',233),
  ('cicloExp -> termino ambExp','cicloExp',2,'p_cicloExp','MyLittleDucky.py',236),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',239),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',240),
  ('auxExp -> PLUS','auxExp',1,'p_auxExp','MyLittleDucky.py',243),
  ('auxExp -> MINUS','auxExp',1,'p_auxExp','MyLittleDucky.py',244),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',247),
  ('cicloTermino -> factor ambCicloTermino','cicloTermino',2,'p_cicloTermino','MyLittleDucky.py',250),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',253),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',254),
  ('auxTermino -> MULTI','auxTermino',1,'p_auxTermino','MyLittleDucky.py',257),
  ('auxTermino -> DIVIDE','auxTermino',1,'p_auxTermino','MyLittleDucky.py',258),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','MyLittleDucky.py',261),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',262),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',265),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',266),
  ('varcte -> ID auxVarcte','varcte',2,'p_varcte','MyLittleDucky.py',269),
  ('varcte -> CTEINT','varcte',1,'p_varcte','MyLittleDucky.py',270),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','MyLittleDucky.py',271),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','MyLittleDucky.py',272),
  ('varcte -> CTEBOOL','varcte',1,'p_varcte','MyLittleDucky.py',273),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','MyLittleDucky.py',274),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',277),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',278),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',279),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',282),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',283),
  ('funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloqueFuncion','funcion',8,'p_funcion','MyLittleDucky.py',286),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',289),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',296),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',297),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',300),
  ('auxParametros -> tipo ID ambAuxParametros','auxParametros',3,'p_auxParametros','MyLittleDucky.py',303),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',306),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',307),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','MyLittleDucky.py',310),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',313),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',316),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',317),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',320),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',321),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',324),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',327),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',328),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',331),
]
