
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '295B1DA7F57ADAD505245BBB13FE714D'
    
_lr_action_items = {'NOTEQUAL':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,152,153,154,157,170,171,],[-64,-70,-61,-67,133,-62,-68,-82,-74,-81,-78,-79,-80,-85,-63,-73,-69,-77,-83,-84,]),'MULTI':([92,125,126,127,128,129,130,131,153,157,170,171,],[121,-82,-74,-81,-78,-79,-80,-85,-73,-77,-83,-84,]),'GTHAN':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,152,153,154,157,170,171,],[-64,-70,-61,-67,135,-62,-68,-82,-74,-81,-78,-79,-80,-85,-63,-73,-69,-77,-83,-84,]),'CTESTRING':([71,72,74,76,78,88,89,91,94,95,102,116,118,121,122,123,133,134,135,136,137,138,139,144,155,156,],[93,-76,-76,-76,-76,-75,-65,-76,125,-66,-76,93,-76,-71,-72,-76,-54,-76,-52,-57,-55,-53,-56,-76,-76,-76,]),'READ':([32,39,40,46,50,51,52,53,55,58,59,60,67,75,149,150,158,160,161,163,164,168,169,172,],[-23,47,-23,-27,-40,47,-39,-36,-38,-35,-37,-22,-24,-21,-105,-44,-96,-60,-41,-97,-27,-58,-26,-59,]),'EQUAL':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,152,153,154,157,170,171,],[-64,-70,-61,-67,136,-62,-68,-82,-74,-81,-78,-79,-80,-85,-63,-73,-69,-77,-83,-84,]),'GETHAN':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,152,153,154,157,170,171,],[-64,-70,-61,-67,137,-62,-68,-82,-74,-81,-78,-79,-80,-85,-63,-73,-69,-77,-83,-84,]),'LBRACKET':([14,16,17,18,19,57,90,92,96,97,119,124,125,126,127,128,129,130,131,152,153,154,157,166,170,171,],[25,25,25,25,25,76,-64,-70,-61,-67,-62,-68,-82,-74,-81,-78,-79,-80,156,-63,-73,-69,-77,171,-83,-84,]),'WHILE':([32,39,40,46,50,51,52,53,55,58,59,60,67,75,149,150,158,160,161,163,164,168,169,172,],[-23,49,-23,-27,-40,49,-39,-36,-38,-35,-37,-22,-24,-21,-105,-44,-96,-60,-41,-97,-27,-58,-26,-59,]),'PROGRAM':([0,],[1,]),'PRINT':([32,39,40,46,50,51,52,53,55,58,59,60,67,75,149,150,158,160,161,163,164,168,169,172,],[-23,48,-23,-27,-40,48,-39,-36,-38,-35,-37,-22,-24,-21,-105,-44,-96,-60,-41,-97,-27,-58,-26,-59,]),'LETHAN':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,152,153,154,157,170,171,],[-64,-70,-61,-67,139,-62,-68,-82,-74,-81,-78,-79,-80,-85,-63,-73,-69,-77,-83,-84,]),'MINUS':([71,72,74,76,78,89,90,91,92,95,97,102,116,118,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,144,153,154,155,156,157,170,171,],[95,95,95,95,95,-65,95,95,-70,-66,-67,95,95,95,-71,-72,95,-68,-82,-74,-81,-78,-79,-80,-85,-54,95,-52,-57,-55,-53,-56,95,-73,-69,95,95,-77,-83,-84,]),'RBRACE':([32,39,40,46,50,51,52,53,55,56,58,59,60,67,73,75,149,150,158,160,161,163,164,168,169,172,],[-23,-34,-23,-27,-40,-34,-39,-36,-38,75,-35,-37,-22,-24,-33,-21,-105,-44,-96,-60,-41,-97,-27,-58,-26,-59,]),'RPAREN':([45,64,65,66,72,74,78,80,84,85,86,87,90,92,93,96,97,98,100,103,104,105,106,108,117,119,120,124,125,126,127,128,129,130,131,143,146,151,152,153,154,157,159,162,165,170,171,],[-91,81,-92,-90,-51,-51,-99,-95,114,-48,115,-47,-64,-70,-49,-61,-67,132,140,-104,145,-98,-100,-93,-45,-62,153,-68,-82,-74,-81,-78,-79,-80,-85,-102,-94,-46,-63,-73,-69,-77,-50,-103,170,-83,-84,]),'SEMICOLON':([3,4,14,16,17,18,19,26,28,29,30,31,41,44,61,90,92,96,97,111,114,115,119,124,125,126,127,128,129,130,131,142,145,147,152,153,154,157,170,171,],[-2,5,-20,-20,-20,-20,-20,-16,-14,-17,-18,-15,-9,-19,79,-64,-70,-61,-67,-28,149,150,-62,-68,-82,-74,-81,-78,-79,-80,-85,161,163,164,-63,-73,-69,-77,-83,-84,]),'CTEFLOAT':([71,72,74,76,78,88,89,91,94,95,102,116,118,121,122,123,133,134,135,136,137,138,139,144,155,156,],[-76,-76,-76,-76,-76,-75,-65,-76,129,-66,-76,-76,-76,-71,-72,-76,-54,-76,-52,-57,-55,-53,-56,-76,-76,-76,]),'PLUS':([71,72,74,76,78,89,90,91,92,95,97,102,116,118,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,144,153,154,155,156,157,170,171,],[89,89,89,89,89,-65,89,89,-70,-66,-67,89,89,89,-71,-72,89,-68,-82,-74,-81,-78,-79,-80,-85,-54,89,-52,-57,-55,-53,-56,89,-73,-69,89,89,-77,-83,-84,]),'COLON':([22,24,35,42,62,68,69,83,112,148,],[34,-11,-13,-10,-12,82,-30,-32,-29,-31,]),'COMMA':([24,35,69,80,83,85,87,90,92,93,96,97,103,119,124,125,126,127,128,129,130,131,152,153,154,157,170,171,],[-11,43,-30,109,113,-48,116,-64,-70,-49,-61,-67,144,-62,-68,-82,-74,-81,-78,-79,-80,-85,-63,-73,-69,-77,-83,-84,]),'EQUALA':([57,77,141,],[-43,102,-42,]),'$end':([2,33,75,],[0,-1,-21,]),'FUNCTION':([5,6,7,9,12,13,23,75,79,107,110,],[-4,-4,10,-3,10,-8,-5,-21,-8,-7,-88,]),'STRING':([10,34,45,82,109,],[14,14,14,14,14,]),'CTEINT':([25,71,72,74,76,78,88,89,91,94,95,102,116,118,121,122,123,133,134,135,136,137,138,139,144,155,156,],[36,-76,-76,-76,-76,-76,-75,-65,-76,128,-66,-76,-76,-76,-71,-72,-76,-54,-76,-52,-57,-55,-53,-56,-76,-76,-76,]),'DIVIDE':([92,125,126,127,128,129,130,131,153,157,170,171,],[122,-82,-74,-81,-78,-79,-80,-85,-73,-77,-83,-84,]),'ELSE':([75,160,],[-21,167,]),'LTHAN':([90,92,96,97,99,119,124,125,126,127,128,129,130,131,152,153,154,157,170,171,],[-64,-70,-61,-67,138,-62,-68,-82,-74,-81,-78,-79,-80,-85,-63,-73,-69,-77,-83,-84,]),'LPAREN':([27,37,47,48,49,54,57,71,72,74,76,78,89,91,95,102,116,118,121,122,123,131,133,134,135,136,137,138,139,144,155,156,],[-89,45,70,71,72,74,78,91,91,91,91,91,-65,91,-66,91,91,91,-71,-72,91,155,-54,91,-52,-57,-55,-53,-56,91,91,91,]),'VAR':([5,6,8,13,23,32,38,40,46,67,79,107,164,169,],[-6,-6,13,-8,-5,-25,46,-25,-27,-24,-8,-7,-27,-26,]),'CTECHAR':([71,72,74,76,78,88,89,91,94,95,102,116,118,121,122,123,133,134,135,136,137,138,139,144,155,156,],[-76,-76,-76,-76,-76,-75,-65,-76,130,-66,-76,-76,-76,-71,-72,-76,-54,-76,-52,-57,-55,-53,-56,-76,-76,-76,]),'ID':([1,13,14,15,16,17,18,19,26,28,29,30,31,32,39,40,43,44,46,50,51,52,53,55,58,59,60,63,67,70,71,72,74,75,76,78,79,88,89,91,94,95,102,113,116,118,121,122,123,133,134,135,136,137,138,139,144,149,150,155,156,158,160,161,163,164,168,169,172,],[3,24,-20,27,-20,-20,-20,-20,-16,-14,-17,-18,-15,-23,57,-23,24,-19,69,-40,57,-39,-36,-38,-35,-37,-22,80,-24,84,-76,-76,-76,-21,-76,-76,24,-75,-65,-76,131,-66,-76,69,-76,-76,-71,-72,-76,-54,-76,-52,-57,-55,-53,-56,-76,-105,-44,-76,-76,-96,-60,-41,-97,69,-58,-26,-59,]),'IF':([32,39,40,46,50,51,52,53,55,58,59,60,67,75,149,150,158,160,161,163,164,168,169,172,],[-23,54,-23,-27,-40,54,-39,-36,-38,-35,-37,-22,-24,-21,-105,-44,-96,-60,-41,-97,-27,-58,-26,-59,]),'CHAR':([10,34,45,82,109,],[18,18,18,18,18,]),'LBRACE':([20,81,132,140,167,],[32,32,32,32,32,]),'INT':([10,34,45,82,109,],[16,16,16,16,16,]),'CTEBOOL':([71,72,74,76,78,88,89,91,94,95,102,116,118,121,122,123,133,134,135,136,137,138,139,144,155,156,],[-76,-76,-76,-76,-76,-75,-65,-76,127,-66,-76,-76,-76,-71,-72,-76,-54,-76,-52,-57,-55,-53,-56,-76,-76,-76,]),'FLOAT':([10,34,45,82,109,],[17,17,17,17,17,]),'BOOL':([10,34,45,82,109,],[19,19,19,19,19,]),'RBRACKET':([36,90,92,96,97,101,119,124,125,126,127,128,129,130,131,152,153,154,157,170,171,],[44,-64,-70,-61,-67,141,-62,-68,-82,-74,-81,-78,-79,-80,-85,-63,-73,-69,-77,-83,-84,]),'MAIN':([5,6,7,9,11,12,13,21,23,75,79,107,110,],[-4,-4,-87,-3,20,-87,-8,-86,-5,-21,-8,-7,-88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ambAuxTipo1':([14,16,17,18,19,],[26,28,29,30,31,]),'vars':([5,6,],[6,6,]),'auxVar1':([13,79,],[23,107,]),'ambAuxArgumentos1':([103,],[143,]),'ambAuxEscritura1':([87,],[117,]),'createVariableDir':([5,6,],[8,8,]),'auxVarcte':([131,],[157,]),'ambIdVars':([35,],[42,]),'termino':([71,72,74,76,78,91,102,116,118,134,144,155,156,],[90,90,90,90,90,90,90,90,90,90,90,90,90,]),'cicloVarsMain':([32,40,],[39,60,]),'argumentos':([78,],[105,]),'bloque':([20,81,132,140,167,],[33,110,158,160,172,]),'addTypeGlobal':([41,],[61,]),'addProcDirectoryFunc':([27,],[37,]),'ambAuxParametros':([80,],[108,]),'createVariableDirMain':([32,40,],[38,38,]),'addVariableDir':([24,],[35,]),'ciclo':([39,51,],[50,50,]),'tipo':([10,34,45,82,109,],[15,41,63,111,63,]),'estatuto':([39,51,],[51,51,]),'auxFunction':([45,],[64,]),'auxLlamada':([78,],[104,]),'auxParametros':([45,109,],[65,146,]),'llamada':([39,51,],[52,52,]),'condicion':([39,51,],[53,53,]),'auxVar1Main':([46,164,],[67,169,]),'factor':([71,72,74,76,78,91,102,116,118,123,134,144,155,156,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'auxArgumentos1':([78,144,],[106,162,]),'lectura':([39,51,],[55,55,]),'funcion':([7,12,],[12,12,]),'auxEscritura2':([71,116,],[87,87,]),'auxEscritura1':([71,116,],[86,151,]),'cicloVars':([5,6,],[7,9,]),'ambIdVarsMain':([83,],[112,]),'idVarsMain':([46,113,164,],[68,148,68,]),'auxExpresion':([99,],[134,]),'auxTermino':([92,],[123,]),'cicloBloque':([39,51,],[56,73,]),'auxFactor':([71,72,74,76,78,91,102,116,118,123,134,144,155,156,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'auxExp':([71,72,74,76,78,90,91,102,116,118,123,134,144,155,156,],[88,88,88,88,88,118,88,88,88,88,88,88,88,88,88,]),'varsMain':([32,40,],[40,40,]),'cicloTermino':([71,72,74,76,78,91,102,116,118,123,134,144,155,156,],[97,97,97,97,97,97,97,97,97,154,97,97,97,97,]),'auxAsignacion1':([57,],[77,]),'expresion':([72,74,],[98,100,]),'varcte':([94,],[126,]),'idVars':([13,43,79,],[22,62,22,]),'asignacion':([39,51,],[58,58,]),'addProcedureDir':([3,],[4,]),'cicloExp':([71,72,74,76,78,91,102,116,118,134,144,155,156,],[96,96,96,96,96,96,96,96,152,96,96,96,96,]),'ambExp':([90,],[119,]),'cicloFuncion':([7,12,],[11,21,]),'programa':([0,],[2,]),'exp':([71,72,74,76,78,91,102,116,134,144,155,156,],[85,99,99,101,103,120,142,85,159,103,165,166,]),'auxCondicion':([160,],[168,]),'parametros':([45,],[66,]),'addVariableDirMain':([69,],[83,]),'ambCicloTermino':([92,],[124,]),'addTypeGlobalMain':([111,],[147,]),'escritura':([39,51,],[59,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',8,'p_programa','MyLittleDucky.py',20),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',24),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',32),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',33),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',36),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',39),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON auxVar1','auxVar1',6,'p_auxVar1','MyLittleDucky.py',44),
  ('auxVar1 -> <empty>','auxVar1',0,'p_auxVar1','MyLittleDucky.py',45),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',48),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',57),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',60),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',70),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',71),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',74),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',75),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',76),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',77),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',78),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',83),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',84),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',87),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',90),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',91),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',94),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',97),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON auxVar1Main','auxVar1Main',6,'p_auxVar1Main','MyLittleDucky.py',102),
  ('auxVar1Main -> <empty>','auxVar1Main',0,'p_auxVar1Main','MyLittleDucky.py',103),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',106),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',116),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',119),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',129),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',130),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',133),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',134),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',137),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',138),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',139),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',140),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',141),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',142),
  ('asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',145),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',148),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',149),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',152),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',155),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',158),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',159),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',162),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',163),
  ('expresion -> exp auxExpresion exp','expresion',3,'p_expresion','MyLittleDucky.py',166),
  ('expresion -> <empty>','expresion',0,'p_expresion','MyLittleDucky.py',167),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',170),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',171),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',172),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',173),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',174),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',175),
  ('condicion -> IF LPAREN expresion RPAREN bloque auxCondicion','condicion',6,'p_condicion','MyLittleDucky.py',178),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',181),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',182),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',185),
  ('cicloExp -> termino ambExp','cicloExp',2,'p_cicloExp','MyLittleDucky.py',188),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',191),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',192),
  ('auxExp -> PLUS','auxExp',1,'p_auxExp','MyLittleDucky.py',195),
  ('auxExp -> MINUS','auxExp',1,'p_auxExp','MyLittleDucky.py',196),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',199),
  ('cicloTermino -> factor ambCicloTermino','cicloTermino',2,'p_cicloTermino','MyLittleDucky.py',202),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',205),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',206),
  ('auxTermino -> MULTI','auxTermino',1,'p_auxTermino','MyLittleDucky.py',209),
  ('auxTermino -> DIVIDE','auxTermino',1,'p_auxTermino','MyLittleDucky.py',210),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','MyLittleDucky.py',213),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',214),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',217),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',218),
  ('varcte -> ID auxVarcte','varcte',2,'p_varcte','MyLittleDucky.py',221),
  ('varcte -> CTEINT','varcte',1,'p_varcte','MyLittleDucky.py',222),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','MyLittleDucky.py',223),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','MyLittleDucky.py',224),
  ('varcte -> CTEBOOL','varcte',1,'p_varcte','MyLittleDucky.py',225),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','MyLittleDucky.py',226),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',229),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',230),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',231),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',234),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',235),
  ('funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque','funcion',8,'p_funcion','MyLittleDucky.py',238),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',241),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',248),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',249),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',252),
  ('auxParametros -> tipo ID ambAuxParametros','auxParametros',3,'p_auxParametros','MyLittleDucky.py',255),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',258),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',259),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','MyLittleDucky.py',262),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',265),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',268),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',269),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',272),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',273),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',276),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',279),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',280),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',283),
]
