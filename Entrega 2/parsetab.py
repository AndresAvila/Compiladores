
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A7EEA2415DA127FC04EE804B719A0999'
    
_lr_action_items = {'NOTEQUAL':([64,68,70,72,73,100,101,102,103,104,105,106,108,113,131,132,133,134,151,152,],[93,-55,-61,-52,-58,-73,-65,-72,-69,-70,-71,-76,-53,-59,-68,-54,-64,-60,-74,-75,]),'MULTI':([70,100,101,102,103,104,105,106,131,133,151,152,],[110,-73,-65,-72,-69,-70,-71,-76,-68,-64,-74,-75,]),'GTHAN':([64,68,70,72,73,100,101,102,103,104,105,106,108,113,131,132,133,134,151,152,],[95,-55,-61,-52,-58,-73,-65,-72,-69,-70,-71,-76,-53,-59,-68,-54,-64,-60,-74,-75,]),'CTESTRING':([49,50,52,54,56,65,66,67,69,71,80,93,94,95,96,97,98,99,107,110,111,112,115,121,129,130,],[-67,77,-67,-67,-67,-66,100,-56,-67,-57,-67,-45,-67,-43,-48,-46,-44,-47,-67,-62,-63,-67,77,-67,-67,-67,]),'READ':([25,34,35,36,37,39,42,43,126,135,138,140,145,154,],[31,-31,31,-30,-27,-29,-26,-28,-96,-35,-32,-88,-87,-49,]),'EQUAL':([64,68,70,72,73,100,101,102,103,104,105,106,108,113,131,132,133,134,151,152,],[96,-55,-61,-52,-58,-73,-65,-72,-69,-70,-71,-76,-53,-59,-68,-54,-64,-60,-74,-75,]),'GETHAN':([64,68,70,72,73,100,101,102,103,104,105,106,108,113,131,132,133,134,151,152,],[97,-55,-61,-52,-58,-73,-65,-72,-69,-70,-71,-76,-53,-59,-68,-54,-64,-60,-74,-75,]),'LBRACKET':([13,15,16,17,20,41,68,70,72,73,100,101,102,103,104,105,106,108,113,131,132,133,134,147,151,152,],[-20,-21,-19,-22,26,54,-55,-61,-52,-58,-73,-65,-72,-69,-70,-71,130,-53,-59,-68,-54,-64,-60,152,-74,-75,]),'WHILE':([25,34,35,36,37,39,42,43,126,135,138,140,145,154,],[32,-31,32,-30,-27,-29,-26,-28,-96,-35,-32,-88,-87,-49,]),'PROGRAM':([0,],[1,]),'PRINT':([25,34,35,36,37,39,42,43,126,135,138,140,145,154,],[33,-31,33,-30,-27,-29,-26,-28,-96,-35,-32,-88,-87,-49,]),'LETHAN':([64,68,70,72,73,100,101,102,103,104,105,106,108,113,131,132,133,134,151,152,],[99,-55,-61,-52,-58,-73,-65,-72,-69,-70,-71,-76,-53,-59,-68,-54,-64,-60,-74,-75,]),'MINUS':([49,50,52,54,56,67,68,69,70,71,73,80,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,115,121,129,130,131,133,134,151,152,],[71,71,71,71,71,-56,71,71,-61,-57,-58,71,-45,71,-43,-48,-46,-44,-47,-73,-65,-72,-69,-70,-71,-76,71,-62,-63,71,-59,71,71,71,71,-68,-64,-60,-74,-75,]),'RBRACE':([25,34,35,36,37,39,40,42,43,51,126,135,138,140,145,154,],[-25,-31,-25,-30,-27,-29,53,-26,-28,-24,-96,-35,-32,-88,-87,-49,]),'RPAREN':([49,52,56,61,62,63,68,69,70,72,73,74,75,76,77,78,81,82,83,84,88,89,90,100,101,102,103,104,105,106,108,109,113,116,120,124,128,131,132,133,134,136,139,142,146,150,151,152,],[-42,-42,-90,-82,91,92,-55,-42,-61,-52,-58,-39,114,-38,-40,117,-95,122,-89,-91,125,-83,-81,-73,-65,-72,-69,-70,-71,-76,-53,133,-59,-36,-93,-86,-41,-68,-54,-64,-60,-37,-94,-84,151,-85,-74,-75,]),'SEMICOLON':([5,11,13,15,16,17,19,20,53,57,68,70,72,73,85,91,100,101,102,103,104,105,106,108,113,114,119,122,127,131,132,133,134,137,149,151,152,153,],[6,-16,-20,-21,-19,-22,-15,-18,-23,-17,-55,-61,-52,-58,123,126,-73,-65,-72,-69,-70,-71,-76,-53,-59,135,138,140,145,-68,-54,-64,-60,-51,154,-74,-75,-50,]),'CTEFLOAT':([49,50,52,54,56,65,66,67,69,71,80,93,94,95,96,97,98,99,107,110,111,112,115,121,129,130,],[-67,-67,-67,-67,-67,-66,104,-56,-67,-57,-67,-45,-67,-43,-48,-46,-44,-47,-67,-62,-63,-67,-67,-67,-67,-67,]),'PLUS':([49,50,52,54,56,67,68,69,70,71,73,80,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,115,121,129,130,131,133,134,151,152,],[67,67,67,67,67,-56,67,67,-61,-57,-58,67,-45,67,-43,-48,-46,-44,-47,-73,-65,-72,-69,-70,-71,-76,67,-62,-63,67,-59,67,67,67,67,-68,-64,-60,-74,-75,]),'COLON':([27,46,59,86,],[45,-14,-11,-13,]),'COMMA':([46,68,70,72,73,74,76,77,81,100,101,102,103,104,105,106,108,113,124,131,132,133,134,151,152,],[60,-55,-61,-52,-58,-39,115,-40,121,-73,-65,-72,-69,-70,-71,-76,-53,-59,143,-68,-54,-64,-60,-74,-75,]),'IF':([25,34,35,36,37,39,42,43,126,135,138,140,145,154,],[38,-31,38,-30,-27,-29,-26,-28,-96,-35,-32,-88,-87,-49,]),'$end':([2,24,53,],[0,-1,-23,]),'FUNCTION':([11,12,13,15,16,17,19,20,57,],[-16,22,-20,-21,-19,-22,-15,-18,-17,]),'STRING':([6,7,8,10,14,21,29,45,53,58,61,123,141,143,144,],[-5,-5,15,-4,15,-9,-6,-10,-23,15,15,-9,-8,15,-79,]),'CTEINT':([26,49,50,52,54,56,65,66,67,69,71,80,93,94,95,96,97,98,99,107,110,111,112,115,121,129,130,],[44,-67,-67,-67,-67,-67,-66,103,-56,-67,-57,-67,-45,-67,-43,-48,-46,-44,-47,-67,-62,-63,-67,-67,-67,-67,-67,]),'DIVIDE':([70,100,101,102,103,104,105,106,131,133,151,152,],[111,-73,-65,-72,-69,-70,-71,-76,-68,-64,-74,-75,]),'ELSE':([53,137,],[-23,148,]),'LTHAN':([64,68,70,72,73,100,101,102,103,104,105,106,108,113,131,132,133,134,151,152,],[98,-55,-61,-52,-58,-73,-65,-72,-69,-70,-71,-76,-53,-59,-68,-54,-64,-60,-74,-75,]),'LPAREN':([31,32,33,38,41,47,49,50,52,54,56,67,69,71,80,93,94,95,96,97,98,99,106,107,110,111,112,115,121,129,130,],[48,49,50,52,56,61,69,69,69,69,69,-56,69,-57,69,-45,69,-43,-48,-46,-44,-47,129,69,-62,-63,69,69,69,69,69,]),'VAR':([6,7,9,21,29,123,141,],[-7,-7,21,-9,-6,-9,-8,]),'CTECHAR':([49,50,52,54,56,65,66,67,69,71,80,93,94,95,96,97,98,99,107,110,111,112,115,121,129,130,],[-67,-67,-67,-67,-67,-66,105,-56,-67,-57,-67,-45,-67,-43,-48,-46,-44,-47,-67,-62,-63,-67,-67,-67,-67,-67,]),'ID':([1,3,4,11,13,15,16,17,19,20,21,22,25,28,30,34,35,36,37,39,42,43,48,49,50,52,54,56,57,60,65,66,67,69,71,80,87,93,94,95,96,97,98,99,107,110,111,112,115,121,123,126,129,130,135,138,140,145,154,],[-2,-3,5,-16,-20,-21,-19,-22,-15,-18,-12,-80,41,46,47,-31,41,-30,-27,-29,-26,-28,62,-67,-67,-67,-67,-67,-17,-12,-66,106,-56,-67,-57,-67,124,-45,-67,-43,-48,-46,-44,-47,-67,-62,-63,-67,-67,-67,-12,-96,-67,-67,-35,-32,-88,-87,-49,]),'EQUALA':([41,55,118,],[-34,80,-33,]),'CHAR':([6,7,8,10,14,21,29,45,53,58,61,123,141,143,144,],[-5,-5,11,-4,11,-9,-6,-10,-23,11,11,-9,-8,11,-79,]),'LBRACE':([6,7,8,10,14,18,21,23,29,53,92,117,123,125,141,144,148,],[-5,-5,-78,-4,-78,25,-9,-77,-6,-23,25,25,-9,25,-8,-79,25,]),'INT':([6,7,8,10,14,21,29,45,53,58,61,123,141,143,144,],[-5,-5,16,-4,16,-9,-6,-10,-23,16,16,-9,-8,16,-79,]),'CTEBOOL':([49,50,52,54,56,65,66,67,69,71,80,93,94,95,96,97,98,99,107,110,111,112,115,121,129,130,],[-67,-67,-67,-67,-67,-66,102,-56,-67,-57,-67,-45,-67,-43,-48,-46,-44,-47,-67,-62,-63,-67,-67,-67,-67,-67,]),'FLOAT':([6,7,8,10,14,21,29,45,53,58,61,123,141,143,144,],[-5,-5,17,-4,17,-9,-6,-10,-23,17,17,-9,-8,17,-79,]),'BOOL':([6,7,8,10,14,21,29,45,53,58,61,123,141,143,144,],[-5,-5,13,-4,13,-9,-6,-10,-23,13,13,-9,-8,13,-79,]),'RBRACKET':([44,68,70,72,73,79,100,101,102,103,104,105,106,108,113,131,132,133,134,151,152,],[57,-55,-61,-52,-58,118,-73,-65,-72,-69,-70,-71,-76,-53,-59,-68,-54,-64,-60,-74,-75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([6,7,],[7,7,]),'auxVar1':([21,123,],[29,141,]),'ambAuxArgumentos1':([81,],[120,]),'ambAuxEscritura1':([76,],[116,]),'createVariableDir':([6,7,],[9,9,]),'ambIdVars':([46,],[59,]),'termino':([49,50,52,54,56,69,80,94,107,115,121,129,130,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'auxCondicion':([137,],[149,]),'auxVarcte':([106,],[131,]),'argumentos':([56,],[83,]),'bloque':([18,92,117,125,148,],[24,127,137,144,153,]),'addTypeGlobal':([45,],[58,]),'addProcDirectoryFunc':([22,],[30,]),'ambAuxParametros':([124,],[142,]),'auxExpresion':([64,],[94,]),'addVariableDir':([21,60,123,],[28,28,28,]),'ciclo':([25,35,],[34,34,]),'tipo':([8,14,58,61,143,],[12,12,85,87,87,]),'estatuto':([25,35,],[35,35,]),'auxFunction':([61,],[88,]),'auxLlamada':([56,],[82,]),'auxParametros':([61,143,],[89,150,]),'llamada':([25,35,],[36,36,]),'condicion':([25,35,],[37,37,]),'factor':([49,50,52,54,56,69,80,94,107,112,115,121,129,130,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'createProcedureDir':([1,],[3,]),'auxArgumentos1':([56,121,],[84,139,]),'lectura':([25,35,],[39,39,]),'funcion':([8,14,],[14,14,]),'auxEscritura2':([50,115,],[76,76,]),'auxEscritura1':([50,115,],[75,136,]),'cicloVars':([6,7,],[8,10,]),'auxTermino':([70,],[112,]),'cicloBloque':([25,35,],[40,51,]),'auxFactor':([49,50,52,54,56,69,80,94,107,112,115,121,129,130,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'auxExp':([49,50,52,54,56,68,69,80,94,107,112,115,121,129,130,],[65,65,65,65,65,107,65,65,65,65,65,65,65,65,65,]),'cicloTermino':([49,50,52,54,56,69,80,94,107,112,115,121,129,130,],[73,73,73,73,73,73,73,73,73,134,73,73,73,73,]),'auxAsignacion1':([41,],[55,]),'expresion':([49,52,69,],[63,78,109,]),'varcte':([66,],[101,]),'idVars':([21,60,123,],[27,86,27,]),'asignacion':([25,35,],[42,42,]),'addProcedureDir':([3,],[4,]),'cicloExp':([49,50,52,54,56,69,80,94,107,115,121,129,130,],[72,72,72,72,72,72,72,72,132,72,72,72,72,]),'cicloFuncion':([8,14,],[18,23,]),'programa':([0,],[2,]),'exp':([49,50,52,54,56,69,80,94,115,121,129,130,],[64,74,64,79,81,64,119,128,74,81,146,147,]),'auxTipo1':([8,14,58,61,143,],[19,19,19,19,19,]),'auxTipo2':([8,14,58,61,143,],[20,20,20,20,20,]),'ambExp':([68,],[108,]),'parametros':([61,],[90,]),'ambCicloTermino':([70,],[113,]),'escritura':([25,35,],[43,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM createProcedureDir addProcedureDir ID SEMICOLON cicloVars cicloFuncion bloque','programa',8,'p_programa','MyLittleDucky.py',17),
  ('createProcedureDir -> <empty>','createProcedureDir',0,'p_createProcedureDir','MyLittleDucky.py',21),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',25),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',32),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',33),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',36),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',39),
  ('auxVar1 -> idVars COLON addTypeGlobal tipo SEMICOLON auxVar1','auxVar1',6,'p_auxVar1','MyLittleDucky.py',44),
  ('auxVar1 -> <empty>','auxVar1',0,'p_auxVar1','MyLittleDucky.py',45),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',48),
  ('idVars -> addVariableDir ID ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',56),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',59),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',65),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',66),
  ('tipo -> auxTipo1','tipo',1,'p_tipo','MyLittleDucky.py',69),
  ('tipo -> CHAR','tipo',1,'p_tipo','MyLittleDucky.py',70),
  ('auxTipo1 -> auxTipo2 LBRACKET CTEINT RBRACKET','auxTipo1',4,'p_auxTipo1','MyLittleDucky.py',73),
  ('auxTipo1 -> auxTipo2','auxTipo1',1,'p_auxTipo1','MyLittleDucky.py',74),
  ('auxTipo2 -> INT','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',77),
  ('auxTipo2 -> BOOL','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',78),
  ('auxTipo2 -> STRING','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',79),
  ('auxTipo2 -> FLOAT','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',80),
  ('bloque -> LBRACE cicloBloque RBRACE','bloque',3,'p_bloque','MyLittleDucky.py',83),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',86),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',87),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',90),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',91),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',92),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',93),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',94),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',95),
  ('asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',98),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',101),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',102),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',105),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',108),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',111),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',112),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',115),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',116),
  ('expresion -> exp auxExpresion exp','expresion',3,'p_expresion','MyLittleDucky.py',119),
  ('expresion -> <empty>','expresion',0,'p_expresion','MyLittleDucky.py',120),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',123),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',124),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',125),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',126),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',127),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',128),
  ('condicion -> IF LPAREN expresion RPAREN bloque auxCondicion SEMICOLON','condicion',7,'p_condicion','MyLittleDucky.py',131),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',134),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',135),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',138),
  ('cicloExp -> termino ambExp','cicloExp',2,'p_cicloExp','MyLittleDucky.py',141),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',144),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',145),
  ('auxExp -> PLUS','auxExp',1,'p_auxExp','MyLittleDucky.py',148),
  ('auxExp -> MINUS','auxExp',1,'p_auxExp','MyLittleDucky.py',149),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',152),
  ('cicloTermino -> factor ambCicloTermino','cicloTermino',2,'p_cicloTermino','MyLittleDucky.py',155),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',158),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',159),
  ('auxTermino -> MULTI','auxTermino',1,'p_auxTermino','MyLittleDucky.py',162),
  ('auxTermino -> DIVIDE','auxTermino',1,'p_auxTermino','MyLittleDucky.py',163),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','MyLittleDucky.py',166),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',167),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',170),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',171),
  ('varcte -> ID auxVarcte','varcte',2,'p_varcte','MyLittleDucky.py',174),
  ('varcte -> CTEINT','varcte',1,'p_varcte','MyLittleDucky.py',175),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','MyLittleDucky.py',176),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','MyLittleDucky.py',177),
  ('varcte -> CTEBOOL','varcte',1,'p_varcte','MyLittleDucky.py',178),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','MyLittleDucky.py',179),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',182),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',183),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',184),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',187),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',188),
  ('funcion -> tipo FUNCTION addProcDirectoryFunc ID LPAREN auxFunction RPAREN bloque','funcion',8,'p_funcion','MyLittleDucky.py',191),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',194),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',201),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',202),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',205),
  ('auxParametros -> tipo ID ambAuxParametros','auxParametros',3,'p_auxParametros','MyLittleDucky.py',208),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',211),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',212),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque SEMICOLON','ciclo',6,'p_ciclo','MyLittleDucky.py',215),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',218),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',221),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',222),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',225),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',226),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',229),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',232),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',233),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',236),
]
