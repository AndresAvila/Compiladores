
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BE06A073151DADCFDD3FFF4CCFECE275'
    
_lr_action_items = {'NOTEQUAL':([90,92,96,97,99,118,123,124,125,126,127,128,129,130,151,152,153,156,168,169,],[-62,-68,-59,-65,132,-60,-66,-80,-72,-79,-76,-77,-78,-83,-61,-71,-67,-75,-81,-82,]),'MULTI':([92,124,125,126,127,128,129,130,152,156,168,169,],[120,-80,-72,-79,-76,-77,-78,-83,-71,-75,-81,-82,]),'GTHAN':([90,92,96,97,99,118,123,124,125,126,127,128,129,130,151,152,153,156,168,169,],[-62,-68,-59,-65,134,-60,-66,-80,-72,-79,-76,-77,-78,-83,-61,-71,-67,-75,-81,-82,]),'CTESTRING':([71,72,74,76,78,88,89,91,94,95,102,115,117,120,121,122,132,133,134,135,136,137,138,143,154,155,],[93,-74,-74,-74,-74,-73,-63,-74,124,-64,-74,93,-74,-69,-70,-74,-52,-74,-50,-55,-53,-51,-54,-74,-74,-74,]),'READ':([32,39,40,50,51,52,53,55,58,59,60,67,75,148,149,157,159,160,162,163,167,170,],[-22,47,-22,-38,47,-37,-34,-36,-33,-35,-21,-23,-20,-103,-42,-94,-58,-39,-95,-25,-56,-57,]),'EQUAL':([90,92,96,97,99,118,123,124,125,126,127,128,129,130,151,152,153,156,168,169,],[-62,-68,-59,-65,135,-60,-66,-80,-72,-79,-76,-77,-78,-83,-61,-71,-67,-75,-81,-82,]),'GETHAN':([90,92,96,97,99,118,123,124,125,126,127,128,129,130,151,152,153,156,168,169,],[-62,-68,-59,-65,136,-60,-66,-80,-72,-79,-76,-77,-78,-83,-61,-71,-67,-75,-81,-82,]),'LBRACKET':([14,16,17,18,19,57,90,92,96,97,118,123,124,125,126,127,128,129,130,151,152,153,156,165,168,169,],[25,25,25,25,25,76,-62,-68,-59,-65,-60,-66,-80,-72,-79,-76,-77,-78,155,-61,-71,-67,-75,169,-81,-82,]),'WHILE':([32,39,40,50,51,52,53,55,58,59,60,67,75,148,149,157,159,160,162,163,167,170,],[-22,49,-22,-38,49,-37,-34,-36,-33,-35,-21,-23,-20,-103,-42,-94,-58,-39,-95,-25,-56,-57,]),'PROGRAM':([0,],[1,]),'PRINT':([32,39,40,50,51,52,53,55,58,59,60,67,75,148,149,157,159,160,162,163,167,170,],[-22,48,-22,-38,48,-37,-34,-36,-33,-35,-21,-23,-20,-103,-42,-94,-58,-39,-95,-25,-56,-57,]),'LETHAN':([90,92,96,97,99,118,123,124,125,126,127,128,129,130,151,152,153,156,168,169,],[-62,-68,-59,-65,138,-60,-66,-80,-72,-79,-76,-77,-78,-83,-61,-71,-67,-75,-81,-82,]),'MINUS':([71,72,74,76,78,89,90,91,92,95,97,102,115,117,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,143,152,153,154,155,156,168,169,],[95,95,95,95,95,-63,95,95,-68,-64,-65,95,95,95,-69,-70,95,-66,-80,-72,-79,-76,-77,-78,-83,-52,95,-50,-55,-53,-51,-54,95,-71,-67,95,95,-75,-81,-82,]),'RBRACE':([32,39,40,50,51,52,53,55,56,58,59,60,67,73,75,148,149,157,159,160,162,163,167,170,],[-22,-32,-22,-38,-32,-37,-34,-36,75,-33,-35,-21,-23,-31,-20,-103,-42,-94,-58,-39,-95,-25,-56,-57,]),'RPAREN':([45,64,65,66,72,74,78,80,84,85,86,87,90,92,93,96,97,98,100,103,104,105,106,107,116,118,119,123,124,125,126,127,128,129,130,142,145,150,151,152,153,156,158,161,164,168,169,],[-89,81,-90,-88,-49,-49,-97,-93,113,-46,114,-45,-62,-68,-47,-59,-65,131,139,-102,144,-96,-98,-91,-43,-60,152,-66,-80,-72,-79,-76,-77,-78,-83,-100,-92,-44,-61,-71,-67,-75,-48,-101,168,-81,-82,]),'SEMICOLON':([3,4,14,16,17,18,19,26,28,29,30,31,41,44,61,90,92,96,97,110,113,114,118,123,124,125,126,127,128,129,130,141,144,146,151,152,153,156,168,169,],[-2,5,-19,-19,-19,-19,-19,-15,-13,-16,-17,-14,-8,-18,79,-62,-68,-59,-65,-26,148,149,-60,-66,-80,-72,-79,-76,-77,-78,-83,160,162,163,-61,-71,-67,-75,-81,-82,]),'CTEFLOAT':([71,72,74,76,78,88,89,91,94,95,102,115,117,120,121,122,132,133,134,135,136,137,138,143,154,155,],[-74,-74,-74,-74,-74,-73,-63,-74,128,-64,-74,-74,-74,-69,-70,-74,-52,-74,-50,-55,-53,-51,-54,-74,-74,-74,]),'PLUS':([71,72,74,76,78,89,90,91,92,95,97,102,115,117,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,143,152,153,154,155,156,168,169,],[89,89,89,89,89,-63,89,89,-68,-64,-65,89,89,89,-69,-70,89,-66,-80,-72,-79,-76,-77,-78,-83,-52,89,-50,-55,-53,-51,-54,89,-71,-67,89,89,-75,-81,-82,]),'COLON':([22,24,35,42,62,68,69,83,111,147,],[34,-10,-12,-9,-11,82,-28,-30,-27,-29,]),'COMMA':([24,35,69,80,83,85,87,90,92,93,96,97,103,118,123,124,125,126,127,128,129,130,151,152,153,156,168,169,],[-10,43,-28,108,112,-46,115,-62,-68,-47,-59,-65,143,-60,-66,-80,-72,-79,-76,-77,-78,-83,-61,-71,-67,-75,-81,-82,]),'EQUALA':([57,77,140,],[-41,102,-40,]),'$end':([2,33,75,],[0,-1,-20,]),'FUNCTION':([5,6,7,9,12,23,75,79,109,],[-4,-4,10,-3,10,-5,-20,-7,-86,]),'STRING':([10,34,45,82,108,],[14,14,14,14,14,]),'CTEINT':([25,71,72,74,76,78,88,89,91,94,95,102,115,117,120,121,122,132,133,134,135,136,137,138,143,154,155,],[36,-74,-74,-74,-74,-74,-73,-63,-74,127,-64,-74,-74,-74,-69,-70,-74,-52,-74,-50,-55,-53,-51,-54,-74,-74,-74,]),'DIVIDE':([92,124,125,126,127,128,129,130,152,156,168,169,],[121,-80,-72,-79,-76,-77,-78,-83,-71,-75,-81,-82,]),'ELSE':([75,159,],[-20,166,]),'LTHAN':([90,92,96,97,99,118,123,124,125,126,127,128,129,130,151,152,153,156,168,169,],[-62,-68,-59,-65,137,-60,-66,-80,-72,-79,-76,-77,-78,-83,-61,-71,-67,-75,-81,-82,]),'LPAREN':([27,37,47,48,49,54,57,71,72,74,76,78,89,91,95,102,115,117,120,121,122,130,132,133,134,135,136,137,138,143,154,155,],[-87,45,70,71,72,74,78,91,91,91,91,91,-63,91,-64,91,91,91,-69,-70,91,154,-52,91,-50,-55,-53,-51,-54,91,91,91,]),'VAR':([5,6,8,23,32,38,40,67,79,163,],[-6,-6,13,-5,-24,46,-24,-23,-7,-25,]),'CTECHAR':([71,72,74,76,78,88,89,91,94,95,102,115,117,120,121,122,132,133,134,135,136,137,138,143,154,155,],[-74,-74,-74,-74,-74,-73,-63,-74,129,-64,-74,-74,-74,-69,-70,-74,-52,-74,-50,-55,-53,-51,-54,-74,-74,-74,]),'ID':([1,13,14,15,16,17,18,19,26,28,29,30,31,32,39,40,43,44,46,50,51,52,53,55,58,59,60,63,67,70,71,72,74,75,76,78,88,89,91,94,95,102,112,115,117,120,121,122,132,133,134,135,136,137,138,143,148,149,154,155,157,159,160,162,163,167,170,],[3,24,-19,27,-19,-19,-19,-19,-15,-13,-16,-17,-14,-22,57,-22,24,-18,69,-38,57,-37,-34,-36,-33,-35,-21,80,-23,84,-74,-74,-74,-20,-74,-74,-73,-63,-74,130,-64,-74,69,-74,-74,-69,-70,-74,-52,-74,-50,-55,-53,-51,-54,-74,-103,-42,-74,-74,-94,-58,-39,-95,-25,-56,-57,]),'IF':([32,39,40,50,51,52,53,55,58,59,60,67,75,148,149,157,159,160,162,163,167,170,],[-22,54,-22,-38,54,-37,-34,-36,-33,-35,-21,-23,-20,-103,-42,-94,-58,-39,-95,-25,-56,-57,]),'CHAR':([10,34,45,82,108,],[18,18,18,18,18,]),'LBRACE':([20,81,131,139,166,],[32,32,32,32,32,]),'INT':([10,34,45,82,108,],[16,16,16,16,16,]),'CTEBOOL':([71,72,74,76,78,88,89,91,94,95,102,115,117,120,121,122,132,133,134,135,136,137,138,143,154,155,],[-74,-74,-74,-74,-74,-73,-63,-74,126,-64,-74,-74,-74,-69,-70,-74,-52,-74,-50,-55,-53,-51,-54,-74,-74,-74,]),'FLOAT':([10,34,45,82,108,],[17,17,17,17,17,]),'BOOL':([10,34,45,82,108,],[19,19,19,19,19,]),'RBRACKET':([36,90,92,96,97,101,118,123,124,125,126,127,128,129,130,151,152,153,156,168,169,],[44,-62,-68,-59,-65,140,-60,-66,-80,-72,-79,-76,-77,-78,-83,-61,-71,-67,-75,-81,-82,]),'MAIN':([5,6,7,9,11,12,21,23,75,79,109,],[-4,-4,-85,-3,20,-85,-84,-5,-20,-7,-86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ambAuxTipo1':([14,16,17,18,19,],[26,28,29,30,31,]),'vars':([5,6,],[6,6,]),'auxVar1':([13,],[23,]),'ambAuxArgumentos1':([103,],[142,]),'ambAuxEscritura1':([87,],[116,]),'createVariableDir':([5,6,],[8,8,]),'auxVarcte':([130,],[156,]),'ambIdVars':([35,],[42,]),'termino':([71,72,74,76,78,91,102,115,117,133,143,154,155,],[90,90,90,90,90,90,90,90,90,90,90,90,90,]),'cicloVarsMain':([32,40,],[39,60,]),'argumentos':([78,],[105,]),'bloque':([20,81,131,139,166,],[33,109,157,159,170,]),'addTypeGlobal':([41,],[61,]),'addProcDirectoryFunc':([27,],[37,]),'ambAuxParametros':([80,],[107,]),'createVariableDirMain':([32,40,],[38,38,]),'addVariableDir':([24,],[35,]),'ciclo':([39,51,],[50,50,]),'tipo':([10,34,45,82,108,],[15,41,63,110,63,]),'estatuto':([39,51,],[51,51,]),'auxFunction':([45,],[64,]),'auxLlamada':([78,],[104,]),'auxParametros':([45,108,],[65,145,]),'llamada':([39,51,],[52,52,]),'condicion':([39,51,],[53,53,]),'auxVar1Main':([46,],[67,]),'factor':([71,72,74,76,78,91,102,115,117,122,133,143,154,155,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'auxArgumentos1':([78,143,],[106,161,]),'lectura':([39,51,],[55,55,]),'funcion':([7,12,],[12,12,]),'auxEscritura2':([71,115,],[87,87,]),'auxEscritura1':([71,115,],[86,150,]),'cicloVars':([5,6,],[7,9,]),'ambIdVarsMain':([83,],[111,]),'idVarsMain':([46,112,],[68,147,]),'auxExpresion':([99,],[133,]),'auxTermino':([92,],[122,]),'cicloBloque':([39,51,],[56,73,]),'auxFactor':([71,72,74,76,78,91,102,115,117,122,133,143,154,155,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'auxExp':([71,72,74,76,78,90,91,102,115,117,122,133,143,154,155,],[88,88,88,88,88,117,88,88,88,88,88,88,88,88,88,]),'varsMain':([32,40,],[40,40,]),'cicloTermino':([71,72,74,76,78,91,102,115,117,122,133,143,154,155,],[97,97,97,97,97,97,97,97,97,153,97,97,97,97,]),'auxAsignacion1':([57,],[77,]),'expresion':([72,74,],[98,100,]),'varcte':([94,],[125,]),'idVars':([13,43,],[22,62,]),'asignacion':([39,51,],[58,58,]),'addProcedureDir':([3,],[4,]),'cicloExp':([71,72,74,76,78,91,102,115,117,133,143,154,155,],[96,96,96,96,96,96,96,96,151,96,96,96,96,]),'ambExp':([90,],[118,]),'cicloFuncion':([7,12,],[11,21,]),'programa':([0,],[2,]),'exp':([71,72,74,76,78,91,102,115,133,143,154,155,],[85,99,99,101,103,119,141,85,158,103,164,165,]),'auxCondicion':([159,],[167,]),'parametros':([45,],[66,]),'addVariableDirMain':([69,],[83,]),'ambCicloTermino':([92,],[123,]),'addTypeGlobalMain':([110,],[146,]),'escritura':([39,51,],[59,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',8,'p_programa','MyLittleDucky.py',20),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',24),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',32),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',33),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',36),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',39),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON','auxVar1',5,'p_auxVar1','MyLittleDucky.py',44),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',47),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',56),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',59),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',69),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',70),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',73),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',74),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',75),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',76),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',77),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',82),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',83),
  ('bloque -> LBRACE cicloVarsMain cicloBloque RBRACE','bloque',4,'p_bloque','MyLittleDucky.py',86),
  ('cicloVarsMain -> varsMain cicloVarsMain','cicloVarsMain',2,'p_cicloVarsMain','MyLittleDucky.py',89),
  ('cicloVarsMain -> <empty>','cicloVarsMain',0,'p_cicloVarsMain','MyLittleDucky.py',90),
  ('varsMain -> createVariableDirMain VAR auxVar1Main','varsMain',3,'p_varsMain','MyLittleDucky.py',93),
  ('createVariableDirMain -> <empty>','createVariableDirMain',0,'p_createVariableDirMain','MyLittleDucky.py',96),
  ('auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON','auxVar1Main',5,'p_auxVar1Main','MyLittleDucky.py',101),
  ('addTypeGlobalMain -> <empty>','addTypeGlobalMain',0,'p_addTypeGlobalMain','MyLittleDucky.py',104),
  ('idVarsMain -> ID addVariableDirMain ambIdVarsMain','idVarsMain',3,'p_idVarsMain','MyLittleDucky.py',114),
  ('addVariableDirMain -> <empty>','addVariableDirMain',0,'p_addVariableDirMain','MyLittleDucky.py',117),
  ('ambIdVarsMain -> COMMA idVarsMain','ambIdVarsMain',2,'p_ambIdVarsMain','MyLittleDucky.py',127),
  ('ambIdVarsMain -> <empty>','ambIdVarsMain',0,'p_ambIdVarsMain','MyLittleDucky.py',128),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',131),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',132),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',135),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',136),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',137),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',138),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',139),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',140),
  ('asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',143),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',146),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',147),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',150),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',153),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',156),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',157),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',160),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',161),
  ('expresion -> exp auxExpresion exp','expresion',3,'p_expresion','MyLittleDucky.py',164),
  ('expresion -> <empty>','expresion',0,'p_expresion','MyLittleDucky.py',165),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',168),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',169),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',170),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',171),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',172),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',173),
  ('condicion -> IF LPAREN expresion RPAREN bloque auxCondicion','condicion',6,'p_condicion','MyLittleDucky.py',176),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',179),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',180),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',183),
  ('cicloExp -> termino ambExp','cicloExp',2,'p_cicloExp','MyLittleDucky.py',186),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',189),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',190),
  ('auxExp -> PLUS','auxExp',1,'p_auxExp','MyLittleDucky.py',193),
  ('auxExp -> MINUS','auxExp',1,'p_auxExp','MyLittleDucky.py',194),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',197),
  ('cicloTermino -> factor ambCicloTermino','cicloTermino',2,'p_cicloTermino','MyLittleDucky.py',200),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',203),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',204),
  ('auxTermino -> MULTI','auxTermino',1,'p_auxTermino','MyLittleDucky.py',207),
  ('auxTermino -> DIVIDE','auxTermino',1,'p_auxTermino','MyLittleDucky.py',208),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','MyLittleDucky.py',211),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',212),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',215),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',216),
  ('varcte -> ID auxVarcte','varcte',2,'p_varcte','MyLittleDucky.py',219),
  ('varcte -> CTEINT','varcte',1,'p_varcte','MyLittleDucky.py',220),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','MyLittleDucky.py',221),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','MyLittleDucky.py',222),
  ('varcte -> CTEBOOL','varcte',1,'p_varcte','MyLittleDucky.py',223),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','MyLittleDucky.py',224),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',227),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',228),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',229),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',232),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',233),
  ('funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque','funcion',8,'p_funcion','MyLittleDucky.py',236),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',239),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',246),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',247),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',250),
  ('auxParametros -> tipo ID ambAuxParametros','auxParametros',3,'p_auxParametros','MyLittleDucky.py',253),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',256),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',257),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','MyLittleDucky.py',260),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',263),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',266),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',267),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',270),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',271),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',274),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',277),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',278),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',281),
]
