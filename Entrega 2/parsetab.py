
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5CE7C1E1D034DF176FA557E35B8506C2'
    
_lr_action_items = {'NOTEQUAL':([77,78,79,81,82,100,101,102,103,104,105,106,108,119,135,138,139,141,153,154,],[-53,109,-59,-50,-56,-71,-63,-70,-67,-68,-69,-74,-51,-57,-62,-66,-52,-58,-72,-73,]),'MULTI':([79,100,101,102,103,104,105,106,135,138,153,154,],[116,-71,-63,-70,-67,-68,-69,-74,-62,-66,-72,-73,]),'GTHAN':([77,78,79,81,82,100,101,102,103,104,105,106,108,119,135,138,139,141,153,154,],[-53,111,-59,-50,-56,-71,-63,-70,-67,-68,-69,-74,-51,-57,-62,-66,-52,-58,-72,-73,]),'CTESTRING':([57,58,60,62,64,73,74,75,76,80,89,107,109,110,111,112,113,114,115,116,117,118,121,127,136,137,],[-65,86,-65,-65,-65,-65,-64,100,-54,-55,-65,-65,-43,-65,-41,-46,-44,-42,-45,-60,-61,-65,86,-65,-65,-65,]),'READ':([32,41,42,43,44,46,49,50,61,133,134,142,144,145,147,152,155,],[38,-29,38,-28,-25,-27,-24,-26,-21,-94,-85,-33,-49,-30,-86,-47,-48,]),'EQUAL':([77,78,79,81,82,100,101,102,103,104,105,106,108,119,135,138,139,141,153,154,],[-53,112,-59,-50,-56,-71,-63,-70,-67,-68,-69,-74,-51,-57,-62,-66,-52,-58,-72,-73,]),'GETHAN':([77,78,79,81,82,100,101,102,103,104,105,106,108,119,135,138,139,141,153,154,],[-53,113,-59,-50,-56,-71,-63,-70,-67,-68,-69,-74,-51,-57,-62,-66,-52,-58,-72,-73,]),'LBRACKET':([14,16,17,18,19,48,77,79,81,82,100,101,102,103,104,105,106,108,119,135,138,139,141,150,153,154,],[25,25,25,25,25,62,-53,-59,-50,-56,-71,-63,-70,-67,-68,-69,137,-51,-57,-62,-66,-52,-58,154,-72,-73,]),'WHILE':([32,41,42,43,44,46,49,50,61,133,134,142,144,145,147,152,155,],[39,-29,39,-28,-25,-27,-24,-26,-21,-94,-85,-33,-49,-30,-86,-47,-48,]),'PROGRAM':([0,],[1,]),'PRINT':([32,41,42,43,44,46,49,50,61,133,134,142,144,145,147,152,155,],[40,-29,40,-28,-25,-27,-24,-26,-21,-94,-85,-33,-49,-30,-86,-47,-48,]),'LETHAN':([77,78,79,81,82,100,101,102,103,104,105,106,108,119,135,138,139,141,153,154,],[-53,115,-59,-50,-56,-71,-63,-70,-67,-68,-69,-74,-51,-57,-62,-66,-52,-58,-72,-73,]),'MINUS':([57,58,60,62,64,73,76,77,79,80,82,89,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,121,127,135,136,137,138,141,153,154,],[80,80,80,80,80,80,-54,80,-59,-55,-56,80,-71,-63,-70,-67,-68,-69,-74,80,-43,80,-41,-46,-44,-42,-45,-60,-61,80,-57,80,80,-62,80,80,-66,-58,-72,-73,]),'RBRACE':([32,41,42,43,44,46,47,49,50,59,61,133,134,142,144,145,147,152,155,],[-23,-29,-23,-28,-25,-27,61,-24,-26,-22,-21,-94,-85,-33,-49,-30,-86,-47,-48,]),'RPAREN':([55,57,60,64,68,69,70,71,72,77,79,81,82,83,84,85,86,87,90,91,92,93,95,99,100,101,102,103,104,105,106,108,119,122,126,130,135,138,139,140,141,143,146,148,149,153,154,],[-80,-40,-40,-88,96,-81,-79,97,98,-53,-59,-50,-56,-37,120,-36,-38,123,-93,128,-87,-89,-84,135,-71,-63,-70,-67,-68,-69,-74,-51,-57,-34,-91,-82,-62,-66,-52,-39,-58,-35,-92,-83,153,-72,-73,]),'SEMICOLON':([3,4,14,16,17,18,19,26,28,29,30,31,51,54,65,77,79,81,82,97,100,101,102,103,104,105,106,108,119,120,125,128,135,138,139,141,153,154,],[-2,5,-20,-20,-20,-20,-20,-16,-14,-17,-18,-15,-9,-19,94,-53,-59,-50,-56,133,-71,-63,-70,-67,-68,-69,-74,-51,-57,142,145,147,-62,-66,-52,-58,-72,-73,]),'CTEFLOAT':([57,58,60,62,64,73,74,75,76,80,89,107,109,110,111,112,113,114,115,116,117,118,121,127,136,137,],[-65,-65,-65,-65,-65,-65,-64,104,-54,-55,-65,-65,-43,-65,-41,-46,-44,-42,-45,-60,-61,-65,-65,-65,-65,-65,]),'PLUS':([57,58,60,62,64,73,76,77,79,80,82,89,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,121,127,135,136,137,138,141,153,154,],[76,76,76,76,76,76,-54,76,-59,-55,-56,76,-71,-63,-70,-67,-68,-69,-74,76,-43,76,-41,-46,-44,-42,-45,-60,-61,76,-57,76,76,-62,76,76,-66,-58,-72,-73,]),'COLON':([22,24,35,52,66,],[34,-11,-13,-10,-12,]),'COMMA':([24,35,77,79,81,82,83,85,86,90,95,100,101,102,103,104,105,106,108,119,135,138,139,141,153,154,],[-11,53,-53,-59,-50,-56,-37,121,-38,127,131,-71,-63,-70,-67,-68,-69,-74,-51,-57,-62,-66,-52,-58,-72,-73,]),'EQUALA':([48,63,124,],[-32,89,-31,]),'$end':([2,33,61,],[0,-1,-21,]),'FUNCTION':([5,6,7,9,12,13,23,61,94,129,132,],[-4,-4,10,-3,10,-8,-5,-21,-8,-7,-77,]),'STRING':([10,34,55,131,],[14,14,14,14,]),'CTEINT':([25,57,58,60,62,64,73,74,75,76,80,89,107,109,110,111,112,113,114,115,116,117,118,121,127,136,137,],[36,-65,-65,-65,-65,-65,-65,-64,103,-54,-55,-65,-65,-43,-65,-41,-46,-44,-42,-45,-60,-61,-65,-65,-65,-65,-65,]),'DIVIDE':([79,100,101,102,103,104,105,106,135,138,153,154,],[117,-71,-63,-70,-67,-68,-69,-74,-62,-66,-72,-73,]),'ELSE':([61,144,],[-21,151,]),'LTHAN':([77,78,79,81,82,100,101,102,103,104,105,106,108,119,135,138,139,141,153,154,],[-53,114,-59,-50,-56,-71,-63,-70,-67,-68,-69,-74,-51,-57,-62,-66,-52,-58,-72,-73,]),'LPAREN':([27,37,38,39,40,45,48,57,58,60,62,64,73,76,80,89,106,107,109,110,111,112,113,114,115,116,117,118,121,127,136,137,],[-78,55,56,57,58,60,64,73,73,73,73,73,73,-54,-55,73,136,73,-43,73,-41,-46,-44,-42,-45,-60,-61,73,73,73,73,73,]),'VAR':([5,6,8,13,23,94,129,],[-6,-6,13,-8,-5,-8,-7,]),'CTECHAR':([57,58,60,62,64,73,74,75,76,80,89,107,109,110,111,112,113,114,115,116,117,118,121,127,136,137,],[-65,-65,-65,-65,-65,-65,-64,105,-54,-55,-65,-65,-43,-65,-41,-46,-44,-42,-45,-60,-61,-65,-65,-65,-65,-65,]),'ID':([1,13,14,15,16,17,18,19,26,28,29,30,31,32,41,42,43,44,46,49,50,53,54,56,57,58,60,61,62,64,67,73,74,75,76,80,89,94,107,109,110,111,112,113,114,115,116,117,118,121,127,133,134,136,137,142,144,145,147,152,155,],[3,24,-20,27,-20,-20,-20,-20,-16,-14,-17,-18,-15,48,-29,48,-28,-25,-27,-24,-26,24,-19,71,-65,-65,-65,-21,-65,-65,95,-65,-64,106,-54,-55,-65,24,-65,-43,-65,-41,-46,-44,-42,-45,-60,-61,-65,-65,-65,-94,-85,-65,-65,-33,-49,-30,-86,-47,-48,]),'IF':([32,41,42,43,44,46,49,50,61,133,134,142,144,145,147,152,155,],[45,-29,45,-28,-25,-27,-24,-26,-21,-94,-85,-33,-49,-30,-86,-47,-48,]),'CHAR':([10,34,55,131,],[18,18,18,18,]),'LBRACE':([20,96,98,123,151,],[32,32,32,32,32,]),'INT':([10,34,55,131,],[16,16,16,16,]),'CTEBOOL':([57,58,60,62,64,73,74,75,76,80,89,107,109,110,111,112,113,114,115,116,117,118,121,127,136,137,],[-65,-65,-65,-65,-65,-65,-64,102,-54,-55,-65,-65,-43,-65,-41,-46,-44,-42,-45,-60,-61,-65,-65,-65,-65,-65,]),'FLOAT':([10,34,55,131,],[17,17,17,17,]),'BOOL':([10,34,55,131,],[19,19,19,19,]),'RBRACKET':([36,77,79,81,82,88,100,101,102,103,104,105,106,108,119,135,138,139,141,153,154,],[54,-53,-59,-50,-56,124,-71,-63,-70,-67,-68,-69,-74,-51,-57,-62,-66,-52,-58,-72,-73,]),'MAIN':([5,6,7,9,11,12,13,21,23,61,94,129,132,],[-4,-4,-76,-3,20,-76,-8,-75,-5,-21,-8,-7,-77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ambAuxTipo1':([14,16,17,18,19,],[26,28,29,30,31,]),'vars':([5,6,],[6,6,]),'auxVar1':([13,94,],[23,129,]),'ambAuxArgumentos1':([90,],[126,]),'ambAuxEscritura1':([85,],[122,]),'createVariableDir':([5,6,],[8,8,]),'ambIdVars':([35,],[52,]),'termino':([57,58,60,62,64,73,89,107,110,121,127,136,137,],[77,77,77,77,77,77,77,77,77,77,77,77,77,]),'auxVarcte':([106,],[138,]),'argumentos':([64,],[92,]),'bloque':([20,96,98,123,151,],[33,132,134,144,155,]),'addTypeGlobal':([51,],[65,]),'addProcDirectoryFunc':([27,],[37,]),'ambAuxParametros':([95,],[130,]),'auxExpresion':([78,],[110,]),'addVariableDir':([24,],[35,]),'ciclo':([32,42,],[41,41,]),'tipo':([10,34,55,131,],[15,51,67,67,]),'estatuto':([32,42,],[42,42,]),'auxFunction':([55,],[68,]),'auxLlamada':([64,],[91,]),'auxParametros':([55,131,],[69,148,]),'llamada':([32,42,],[43,43,]),'condicion':([32,42,],[44,44,]),'factor':([57,58,60,62,64,73,89,107,110,118,121,127,136,137,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'auxArgumentos1':([64,127,],[93,146,]),'lectura':([32,42,],[46,46,]),'funcion':([7,12,],[12,12,]),'auxEscritura2':([58,121,],[85,85,]),'auxEscritura1':([58,121,],[84,143,]),'cicloVars':([5,6,],[7,9,]),'auxTermino':([79,],[118,]),'cicloBloque':([32,42,],[47,59,]),'auxFactor':([57,58,60,62,64,73,89,107,110,118,121,127,136,137,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'auxExp':([57,58,60,62,64,73,77,89,107,110,118,121,127,136,137,],[74,74,74,74,74,74,107,74,74,74,74,74,74,74,74,]),'cicloTermino':([57,58,60,62,64,73,89,107,110,118,121,127,136,137,],[82,82,82,82,82,82,82,82,82,141,82,82,82,82,]),'auxAsignacion1':([48,],[63,]),'expresion':([57,60,],[72,87,]),'varcte':([75,],[101,]),'idVars':([13,53,94,],[22,66,22,]),'asignacion':([32,42,],[49,49,]),'addProcedureDir':([3,],[4,]),'cicloExp':([57,58,60,62,64,73,89,107,110,121,127,136,137,],[81,81,81,81,81,81,81,139,81,81,81,81,81,]),'cicloFuncion':([7,12,],[11,21,]),'programa':([0,],[2,]),'exp':([57,58,60,62,64,73,89,110,121,127,136,137,],[78,83,78,88,90,99,125,140,83,90,149,150,]),'auxCondicion':([144,],[152,]),'parametros':([55,],[70,]),'ambExp':([77,],[108,]),'ambCicloTermino':([79,],[119,]),'escritura':([32,42,],[50,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',8,'p_programa','MyLittleDucky.py',18),
  ('addProcedureDir -> <empty>','addProcedureDir',0,'p_addProcedureDir','MyLittleDucky.py',22),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',30),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',31),
  ('vars -> createVariableDir VAR auxVar1','vars',3,'p_vars','MyLittleDucky.py',34),
  ('createVariableDir -> <empty>','createVariableDir',0,'p_createVariableDir','MyLittleDucky.py',37),
  ('auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON auxVar1','auxVar1',6,'p_auxVar1','MyLittleDucky.py',42),
  ('auxVar1 -> <empty>','auxVar1',0,'p_auxVar1','MyLittleDucky.py',43),
  ('addTypeGlobal -> <empty>','addTypeGlobal',0,'p_addTypeGlobal','MyLittleDucky.py',46),
  ('idVars -> ID addVariableDir ambIdVars','idVars',3,'p_idVars','MyLittleDucky.py',55),
  ('addVariableDir -> <empty>','addVariableDir',0,'p_addVariableDir','MyLittleDucky.py',58),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',68),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',69),
  ('tipo -> INT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',72),
  ('tipo -> BOOL ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',73),
  ('tipo -> STRING ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',74),
  ('tipo -> FLOAT ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',75),
  ('tipo -> CHAR ambAuxTipo1','tipo',2,'p_tipo','MyLittleDucky.py',76),
  ('ambAuxTipo1 -> LBRACKET CTEINT RBRACKET','ambAuxTipo1',3,'p_ambAuxTipo1','MyLittleDucky.py',81),
  ('ambAuxTipo1 -> <empty>','ambAuxTipo1',0,'p_ambAuxTipo1','MyLittleDucky.py',82),
  ('bloque -> LBRACE cicloBloque RBRACE','bloque',3,'p_bloque','MyLittleDucky.py',85),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',88),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',89),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',92),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',93),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',94),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',95),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',96),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',97),
  ('asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',100),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',103),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',104),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',107),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',110),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',113),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',114),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',117),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',118),
  ('expresion -> exp auxExpresion exp','expresion',3,'p_expresion','MyLittleDucky.py',121),
  ('expresion -> <empty>','expresion',0,'p_expresion','MyLittleDucky.py',122),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',125),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',126),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',127),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',128),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',129),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',130),
  ('condicion -> IF LPAREN expresion RPAREN bloque auxCondicion','condicion',6,'p_condicion','MyLittleDucky.py',133),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',136),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',137),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',140),
  ('cicloExp -> termino ambExp','cicloExp',2,'p_cicloExp','MyLittleDucky.py',143),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',146),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',147),
  ('auxExp -> PLUS','auxExp',1,'p_auxExp','MyLittleDucky.py',150),
  ('auxExp -> MINUS','auxExp',1,'p_auxExp','MyLittleDucky.py',151),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',154),
  ('cicloTermino -> factor ambCicloTermino','cicloTermino',2,'p_cicloTermino','MyLittleDucky.py',157),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',160),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',161),
  ('auxTermino -> MULTI','auxTermino',1,'p_auxTermino','MyLittleDucky.py',164),
  ('auxTermino -> DIVIDE','auxTermino',1,'p_auxTermino','MyLittleDucky.py',165),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','MyLittleDucky.py',168),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',169),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',172),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',173),
  ('varcte -> ID auxVarcte','varcte',2,'p_varcte','MyLittleDucky.py',176),
  ('varcte -> CTEINT','varcte',1,'p_varcte','MyLittleDucky.py',177),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','MyLittleDucky.py',178),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','MyLittleDucky.py',179),
  ('varcte -> CTEBOOL','varcte',1,'p_varcte','MyLittleDucky.py',180),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','MyLittleDucky.py',181),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',184),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',185),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',186),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',189),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',190),
  ('funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque','funcion',8,'p_funcion','MyLittleDucky.py',193),
  ('addProcDirectoryFunc -> <empty>','addProcDirectoryFunc',0,'p_addProcDirectoryFunc','MyLittleDucky.py',196),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',203),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',204),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',207),
  ('auxParametros -> tipo ID ambAuxParametros','auxParametros',3,'p_auxParametros','MyLittleDucky.py',210),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',213),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',214),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','MyLittleDucky.py',217),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',220),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',223),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',224),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',227),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',228),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',231),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',234),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',235),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',238),
]
