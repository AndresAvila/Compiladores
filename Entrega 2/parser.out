Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque
Rule 2     addProcedureDir -> <empty>
Rule 3     cicloVars -> vars cicloVars
Rule 4     cicloVars -> <empty>
Rule 5     vars -> createVariableDir VAR auxVar1
Rule 6     createVariableDir -> <empty>
Rule 7     auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON
Rule 8     addTypeGlobal -> <empty>
Rule 9     idVars -> ID addVariableDir ambIdVars
Rule 10    addVariableDir -> <empty>
Rule 11    ambIdVars -> COMMA idVars
Rule 12    ambIdVars -> <empty>
Rule 13    tipo -> INT ambAuxTipo1
Rule 14    tipo -> BOOL ambAuxTipo1
Rule 15    tipo -> STRING ambAuxTipo1
Rule 16    tipo -> FLOAT ambAuxTipo1
Rule 17    tipo -> CHAR ambAuxTipo1
Rule 18    ambAuxTipo1 -> LBRACKET CTEINT RBRACKET
Rule 19    ambAuxTipo1 -> <empty>
Rule 20    bloque -> LBRACE cicloVarsMain cicloBloque RBRACE
Rule 21    cicloVarsMain -> varsMain cicloVarsMain
Rule 22    cicloVarsMain -> <empty>
Rule 23    varsMain -> createVariableDirMain VAR auxVar1Main
Rule 24    createVariableDirMain -> <empty>
Rule 25    auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON
Rule 26    addTypeGlobalMain -> <empty>
Rule 27    idVarsMain -> ID addVariableDirMain ambIdVarsMain
Rule 28    addVariableDirMain -> <empty>
Rule 29    ambIdVarsMain -> COMMA idVarsMain
Rule 30    ambIdVarsMain -> <empty>
Rule 31    cicloBloque -> estatuto cicloBloque
Rule 32    cicloBloque -> <empty>
Rule 33    estatuto -> asignacion
Rule 34    estatuto -> condicion
Rule 35    estatuto -> escritura
Rule 36    estatuto -> lectura
Rule 37    estatuto -> llamada
Rule 38    estatuto -> ciclo
Rule 39    asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON
Rule 40    auxAsignacion1 -> LBRACKET exp RBRACKET
Rule 41    auxAsignacion1 -> <empty>
Rule 42    escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
Rule 43    auxEscritura1 -> auxEscritura2 ambAuxEscritura1
Rule 44    ambAuxEscritura1 -> COMMA auxEscritura1
Rule 45    ambAuxEscritura1 -> <empty>
Rule 46    auxEscritura2 -> exp
Rule 47    auxEscritura2 -> CTESTRING
Rule 48    expresion -> exp auxExpresion exp
Rule 49    expresion -> <empty>
Rule 50    auxExpresion -> GTHAN
Rule 51    auxExpresion -> LTHAN
Rule 52    auxExpresion -> NOTEQUAL
Rule 53    auxExpresion -> GETHAN
Rule 54    auxExpresion -> LETHAN
Rule 55    auxExpresion -> EQUAL
Rule 56    condicion -> IF LPAREN expresion RPAREN bloque auxCondicion
Rule 57    auxCondicion -> ELSE bloque
Rule 58    auxCondicion -> <empty>
Rule 59    exp -> cicloExp
Rule 60    cicloExp -> termino ambExp
Rule 61    ambExp -> auxExp cicloExp
Rule 62    ambExp -> <empty>
Rule 63    auxExp -> PLUS
Rule 64    auxExp -> MINUS
Rule 65    termino -> cicloTermino
Rule 66    cicloTermino -> factor ambCicloTermino
Rule 67    ambCicloTermino -> auxTermino cicloTermino
Rule 68    ambCicloTermino -> <empty>
Rule 69    auxTermino -> MULTI
Rule 70    auxTermino -> DIVIDE
Rule 71    factor -> LPAREN exp RPAREN
Rule 72    factor -> auxFactor varcte
Rule 73    auxFactor -> auxExp
Rule 74    auxFactor -> <empty>
Rule 75    varcte -> ID auxVarcte
Rule 76    varcte -> CTEINT
Rule 77    varcte -> CTEFLOAT
Rule 78    varcte -> CTECHAR
Rule 79    varcte -> CTEBOOL
Rule 80    varcte -> CTESTRING
Rule 81    auxVarcte -> LPAREN exp RPAREN
Rule 82    auxVarcte -> LBRACKET exp LBRACKET
Rule 83    auxVarcte -> <empty>
Rule 84    cicloFuncion -> funcion cicloFuncion
Rule 85    cicloFuncion -> <empty>
Rule 86    funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque
Rule 87    addProcDirectoryFunc -> <empty>
Rule 88    auxFunction -> parametros
Rule 89    auxFunction -> <empty>
Rule 90    parametros -> auxParametros
Rule 91    auxParametros -> tipo ID ambAuxParametros
Rule 92    ambAuxParametros -> COMMA auxParametros
Rule 93    ambAuxParametros -> <empty>
Rule 94    ciclo -> WHILE LPAREN expresion RPAREN bloque
Rule 95    llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON
Rule 96    auxLlamada -> argumentos
Rule 97    auxLlamada -> <empty>
Rule 98    argumentos -> auxArgumentos1
Rule 99    argumentos -> <empty>
Rule 100   auxArgumentos1 -> exp ambAuxArgumentos1
Rule 101   ambAuxArgumentos1 -> COMMA auxArgumentos1
Rule 102   ambAuxArgumentos1 -> <empty>
Rule 103   lectura -> READ LPAREN ID RPAREN SEMICOLON

Terminals, with rules where they appear

BOOL                 : 14
CHAR                 : 17
COLON                : 7 25
COMMA                : 11 29 44 92 101
CTEBOOL              : 79
CTECHAR              : 78
CTEFLOAT             : 77
CTEINT               : 18 76
CTESTRING            : 47 80
DIVIDE               : 70
ELSE                 : 57
EQUAL                : 55
EQUALA               : 39
FLOAT                : 16
FUNCTION             : 86
GETHAN               : 53
GTHAN                : 50
ID                   : 1 9 27 39 75 86 91 95 103
IF                   : 56
INT                  : 13
LBRACE               : 20
LBRACKET             : 18 40 82 82
LETHAN               : 54
LPAREN               : 42 56 71 81 86 94 95 103
LTHAN                : 51
MAIN                 : 1
MINUS                : 64
MULTI                : 69
NOTEQUAL             : 52
PLUS                 : 63
PRINT                : 42
PROGRAM              : 1
RBRACE               : 20
RBRACKET             : 18 40
READ                 : 103
RPAREN               : 42 56 71 81 86 94 95 103
SEMICOLON            : 1 7 25 39 42 95 103
STRING               : 15
VAR                  : 5 23
WHILE                : 94
error                : 

Nonterminals, with rules where they appear

addProcDirectoryFunc : 86
addProcedureDir      : 1
addTypeGlobal        : 7
addTypeGlobalMain    : 25
addVariableDir       : 9
addVariableDirMain   : 27
ambAuxArgumentos1    : 100
ambAuxEscritura1     : 43
ambAuxParametros     : 91
ambAuxTipo1          : 13 14 15 16 17
ambCicloTermino      : 66
ambExp               : 60
ambIdVars            : 9
ambIdVarsMain        : 27
argumentos           : 96
asignacion           : 33
auxArgumentos1       : 98 101
auxAsignacion1       : 39
auxCondicion         : 56
auxEscritura1        : 42 44
auxEscritura2        : 43
auxExp               : 61 73
auxExpresion         : 48
auxFactor            : 72
auxFunction          : 86
auxLlamada           : 95
auxParametros        : 90 92
auxTermino           : 67
auxVar1              : 5
auxVar1Main          : 23
auxVarcte            : 75
bloque               : 1 56 57 86 94
ciclo                : 38
cicloBloque          : 20 31
cicloExp             : 59 61
cicloFuncion         : 1 84
cicloTermino         : 65 67
cicloVars            : 1 3
cicloVarsMain        : 20 21
condicion            : 34
createVariableDir    : 5
createVariableDirMain : 23
escritura            : 35
estatuto             : 31
exp                  : 39 40 46 48 48 71 81 82 100
expresion            : 56 94
factor               : 66
funcion              : 84
idVars               : 7 11
idVarsMain           : 25 29
lectura              : 36
llamada              : 37
parametros           : 88
programa             : 0
termino              : 60
tipo                 : 7 25 86 91
varcte               : 72
vars                 : 3
varsMain             : 21

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque
    (2) addProcedureDir -> .

    SEMICOLON       reduce using rule 2 (addProcedureDir -> .)

    addProcedureDir                shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProcedureDir . SEMICOLON cicloVars cicloFuncion MAIN bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON . cicloVars cicloFuncion MAIN bloque
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    vars                           shift and go to state 6
    cicloVars                      shift and go to state 7
    createVariableDir              shift and go to state 8

state 6

    (3) cicloVars -> vars . cicloVars
    (3) cicloVars -> . vars cicloVars
    (4) cicloVars -> .
    (5) vars -> . createVariableDir VAR auxVar1
    (6) createVariableDir -> .

    FUNCTION        reduce using rule 4 (cicloVars -> .)
    MAIN            reduce using rule 4 (cicloVars -> .)
    VAR             reduce using rule 6 (createVariableDir -> .)

    createVariableDir              shift and go to state 8
    cicloVars                      shift and go to state 9
    vars                           shift and go to state 6

state 7

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars . cicloFuncion MAIN bloque
    (84) cicloFuncion -> . funcion cicloFuncion
    (85) cicloFuncion -> .
    (86) funcion -> . FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque

    MAIN            reduce using rule 85 (cicloFuncion -> .)
    FUNCTION        shift and go to state 10

    cicloFuncion                   shift and go to state 11
    funcion                        shift and go to state 12

state 8

    (5) vars -> createVariableDir . VAR auxVar1

    VAR             shift and go to state 13


state 9

    (3) cicloVars -> vars cicloVars .

    FUNCTION        reduce using rule 3 (cicloVars -> vars cicloVars .)
    MAIN            reduce using rule 3 (cicloVars -> vars cicloVars .)


state 10

    (86) funcion -> FUNCTION . tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 15

state 11

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion . MAIN bloque

    MAIN            shift and go to state 20


state 12

    (84) cicloFuncion -> funcion . cicloFuncion
    (84) cicloFuncion -> . funcion cicloFuncion
    (85) cicloFuncion -> .
    (86) funcion -> . FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque

    MAIN            reduce using rule 85 (cicloFuncion -> .)
    FUNCTION        shift and go to state 10

    cicloFuncion                   shift and go to state 21
    funcion                        shift and go to state 12

state 13

    (5) vars -> createVariableDir VAR . auxVar1
    (7) auxVar1 -> . idVars COLON tipo addTypeGlobal SEMICOLON
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 24

    idVars                         shift and go to state 22
    auxVar1                        shift and go to state 23

state 14

    (15) tipo -> STRING . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 26

state 15

    (86) funcion -> FUNCTION tipo . ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque

    ID              shift and go to state 27


state 16

    (13) tipo -> INT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 28

state 17

    (16) tipo -> FLOAT . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 29

state 18

    (17) tipo -> CHAR . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 30

state 19

    (14) tipo -> BOOL . ambAuxTipo1
    (18) ambAuxTipo1 -> . LBRACKET CTEINT RBRACKET
    (19) ambAuxTipo1 -> .

    LBRACKET        shift and go to state 25
    ID              reduce using rule 19 (ambAuxTipo1 -> .)
    SEMICOLON       reduce using rule 19 (ambAuxTipo1 -> .)

    ambAuxTipo1                    shift and go to state 31

state 20

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN . bloque
    (20) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 33

state 21

    (84) cicloFuncion -> funcion cicloFuncion .

    MAIN            reduce using rule 84 (cicloFuncion -> funcion cicloFuncion .)


state 22

    (7) auxVar1 -> idVars . COLON tipo addTypeGlobal SEMICOLON

    COLON           shift and go to state 34


state 23

    (5) vars -> createVariableDir VAR auxVar1 .

    VAR             reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    FUNCTION        reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)
    MAIN            reduce using rule 5 (vars -> createVariableDir VAR auxVar1 .)


state 24

    (9) idVars -> ID . addVariableDir ambIdVars
    (10) addVariableDir -> .

    COMMA           reduce using rule 10 (addVariableDir -> .)
    COLON           reduce using rule 10 (addVariableDir -> .)

    addVariableDir                 shift and go to state 35

state 25

    (18) ambAuxTipo1 -> LBRACKET . CTEINT RBRACKET

    CTEINT          shift and go to state 36


state 26

    (15) tipo -> STRING ambAuxTipo1 .

    ID              reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)
    SEMICOLON       reduce using rule 15 (tipo -> STRING ambAuxTipo1 .)


state 27

    (86) funcion -> FUNCTION tipo ID . addProcDirectoryFunc LPAREN auxFunction RPAREN bloque
    (87) addProcDirectoryFunc -> .

    LPAREN          reduce using rule 87 (addProcDirectoryFunc -> .)

    addProcDirectoryFunc           shift and go to state 37

state 28

    (13) tipo -> INT ambAuxTipo1 .

    ID              reduce using rule 13 (tipo -> INT ambAuxTipo1 .)
    SEMICOLON       reduce using rule 13 (tipo -> INT ambAuxTipo1 .)


state 29

    (16) tipo -> FLOAT ambAuxTipo1 .

    ID              reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)
    SEMICOLON       reduce using rule 16 (tipo -> FLOAT ambAuxTipo1 .)


state 30

    (17) tipo -> CHAR ambAuxTipo1 .

    ID              reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)
    SEMICOLON       reduce using rule 17 (tipo -> CHAR ambAuxTipo1 .)


state 31

    (14) tipo -> BOOL ambAuxTipo1 .

    ID              reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)
    SEMICOLON       reduce using rule 14 (tipo -> BOOL ambAuxTipo1 .)


state 32

    (20) bloque -> LBRACE . cicloVarsMain cicloBloque RBRACE
    (21) cicloVarsMain -> . varsMain cicloVarsMain
    (22) cicloVarsMain -> .
    (23) varsMain -> . createVariableDirMain VAR auxVar1Main
    (24) createVariableDirMain -> .

    ID              reduce using rule 22 (cicloVarsMain -> .)
    IF              reduce using rule 22 (cicloVarsMain -> .)
    PRINT           reduce using rule 22 (cicloVarsMain -> .)
    READ            reduce using rule 22 (cicloVarsMain -> .)
    WHILE           reduce using rule 22 (cicloVarsMain -> .)
    RBRACE          reduce using rule 22 (cicloVarsMain -> .)
    VAR             reduce using rule 24 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 39
    createVariableDirMain          shift and go to state 38
    varsMain                       shift and go to state 40

state 33

    (1) programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProcedureDir SEMICOLON cicloVars cicloFuncion MAIN bloque .)


state 34

    (7) auxVar1 -> idVars COLON . tipo addTypeGlobal SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 41

state 35

    (9) idVars -> ID addVariableDir . ambIdVars
    (11) ambIdVars -> . COMMA idVars
    (12) ambIdVars -> .

    COMMA           shift and go to state 43
    COLON           reduce using rule 12 (ambIdVars -> .)

    ambIdVars                      shift and go to state 42

state 36

    (18) ambAuxTipo1 -> LBRACKET CTEINT . RBRACKET

    RBRACKET        shift and go to state 44


state 37

    (86) funcion -> FUNCTION tipo ID addProcDirectoryFunc . LPAREN auxFunction RPAREN bloque

    LPAREN          shift and go to state 45


state 38

    (23) varsMain -> createVariableDirMain . VAR auxVar1Main

    VAR             shift and go to state 46


state 39

    (20) bloque -> LBRACE cicloVarsMain . cicloBloque RBRACE
    (31) cicloBloque -> . estatuto cicloBloque
    (32) cicloBloque -> .
    (33) estatuto -> . asignacion
    (34) estatuto -> . condicion
    (35) estatuto -> . escritura
    (36) estatuto -> . lectura
    (37) estatuto -> . llamada
    (38) estatuto -> . ciclo
    (39) asignacion -> . ID auxAsignacion1 EQUALA exp SEMICOLON
    (56) condicion -> . IF LPAREN expresion RPAREN bloque auxCondicion
    (42) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (103) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (95) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (94) ciclo -> . WHILE LPAREN expresion RPAREN bloque

    RBRACE          reduce using rule 32 (cicloBloque -> .)
    ID              shift and go to state 57
    IF              shift and go to state 54
    PRINT           shift and go to state 48
    READ            shift and go to state 47
    WHILE           shift and go to state 49

    ciclo                          shift and go to state 50
    asignacion                     shift and go to state 58
    estatuto                       shift and go to state 51
    llamada                        shift and go to state 52
    condicion                      shift and go to state 53
    cicloBloque                    shift and go to state 56
    lectura                        shift and go to state 55
    escritura                      shift and go to state 59

state 40

    (21) cicloVarsMain -> varsMain . cicloVarsMain
    (21) cicloVarsMain -> . varsMain cicloVarsMain
    (22) cicloVarsMain -> .
    (23) varsMain -> . createVariableDirMain VAR auxVar1Main
    (24) createVariableDirMain -> .

    ID              reduce using rule 22 (cicloVarsMain -> .)
    IF              reduce using rule 22 (cicloVarsMain -> .)
    PRINT           reduce using rule 22 (cicloVarsMain -> .)
    READ            reduce using rule 22 (cicloVarsMain -> .)
    WHILE           reduce using rule 22 (cicloVarsMain -> .)
    RBRACE          reduce using rule 22 (cicloVarsMain -> .)
    VAR             reduce using rule 24 (createVariableDirMain -> .)

    cicloVarsMain                  shift and go to state 60
    createVariableDirMain          shift and go to state 38
    varsMain                       shift and go to state 40

state 41

    (7) auxVar1 -> idVars COLON tipo . addTypeGlobal SEMICOLON
    (8) addTypeGlobal -> .

    SEMICOLON       reduce using rule 8 (addTypeGlobal -> .)

    addTypeGlobal                  shift and go to state 61

state 42

    (9) idVars -> ID addVariableDir ambIdVars .

    COLON           reduce using rule 9 (idVars -> ID addVariableDir ambIdVars .)


state 43

    (11) ambIdVars -> COMMA . idVars
    (9) idVars -> . ID addVariableDir ambIdVars

    ID              shift and go to state 24

    idVars                         shift and go to state 62

state 44

    (18) ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .

    ID              reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .)
    SEMICOLON       reduce using rule 18 (ambAuxTipo1 -> LBRACKET CTEINT RBRACKET .)


state 45

    (86) funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN . auxFunction RPAREN bloque
    (88) auxFunction -> . parametros
    (89) auxFunction -> .
    (90) parametros -> . auxParametros
    (91) auxParametros -> . tipo ID ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    RPAREN          reduce using rule 89 (auxFunction -> .)
    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 63
    auxFunction                    shift and go to state 64
    auxParametros                  shift and go to state 65
    parametros                     shift and go to state 66

state 46

    (23) varsMain -> createVariableDirMain VAR . auxVar1Main
    (25) auxVar1Main -> . idVarsMain COLON tipo addTypeGlobalMain SEMICOLON
    (27) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 69

    auxVar1Main                    shift and go to state 67
    idVarsMain                     shift and go to state 68

state 47

    (103) lectura -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 70


state 48

    (42) escritura -> PRINT . LPAREN auxEscritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 71


state 49

    (94) ciclo -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 72


state 50

    (38) estatuto -> ciclo .

    ID              reduce using rule 38 (estatuto -> ciclo .)
    IF              reduce using rule 38 (estatuto -> ciclo .)
    PRINT           reduce using rule 38 (estatuto -> ciclo .)
    READ            reduce using rule 38 (estatuto -> ciclo .)
    WHILE           reduce using rule 38 (estatuto -> ciclo .)
    RBRACE          reduce using rule 38 (estatuto -> ciclo .)


state 51

    (31) cicloBloque -> estatuto . cicloBloque
    (31) cicloBloque -> . estatuto cicloBloque
    (32) cicloBloque -> .
    (33) estatuto -> . asignacion
    (34) estatuto -> . condicion
    (35) estatuto -> . escritura
    (36) estatuto -> . lectura
    (37) estatuto -> . llamada
    (38) estatuto -> . ciclo
    (39) asignacion -> . ID auxAsignacion1 EQUALA exp SEMICOLON
    (56) condicion -> . IF LPAREN expresion RPAREN bloque auxCondicion
    (42) escritura -> . PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
    (103) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (95) llamada -> . ID LPAREN auxLlamada RPAREN SEMICOLON
    (94) ciclo -> . WHILE LPAREN expresion RPAREN bloque

    RBRACE          reduce using rule 32 (cicloBloque -> .)
    ID              shift and go to state 57
    IF              shift and go to state 54
    PRINT           shift and go to state 48
    READ            shift and go to state 47
    WHILE           shift and go to state 49

    ciclo                          shift and go to state 50
    asignacion                     shift and go to state 58
    estatuto                       shift and go to state 51
    llamada                        shift and go to state 52
    condicion                      shift and go to state 53
    cicloBloque                    shift and go to state 73
    lectura                        shift and go to state 55
    escritura                      shift and go to state 59

state 52

    (37) estatuto -> llamada .

    ID              reduce using rule 37 (estatuto -> llamada .)
    IF              reduce using rule 37 (estatuto -> llamada .)
    PRINT           reduce using rule 37 (estatuto -> llamada .)
    READ            reduce using rule 37 (estatuto -> llamada .)
    WHILE           reduce using rule 37 (estatuto -> llamada .)
    RBRACE          reduce using rule 37 (estatuto -> llamada .)


state 53

    (34) estatuto -> condicion .

    ID              reduce using rule 34 (estatuto -> condicion .)
    IF              reduce using rule 34 (estatuto -> condicion .)
    PRINT           reduce using rule 34 (estatuto -> condicion .)
    READ            reduce using rule 34 (estatuto -> condicion .)
    WHILE           reduce using rule 34 (estatuto -> condicion .)
    RBRACE          reduce using rule 34 (estatuto -> condicion .)


state 54

    (56) condicion -> IF . LPAREN expresion RPAREN bloque auxCondicion

    LPAREN          shift and go to state 74


state 55

    (36) estatuto -> lectura .

    ID              reduce using rule 36 (estatuto -> lectura .)
    IF              reduce using rule 36 (estatuto -> lectura .)
    PRINT           reduce using rule 36 (estatuto -> lectura .)
    READ            reduce using rule 36 (estatuto -> lectura .)
    WHILE           reduce using rule 36 (estatuto -> lectura .)
    RBRACE          reduce using rule 36 (estatuto -> lectura .)


state 56

    (20) bloque -> LBRACE cicloVarsMain cicloBloque . RBRACE

    RBRACE          shift and go to state 75


state 57

    (39) asignacion -> ID . auxAsignacion1 EQUALA exp SEMICOLON
    (95) llamada -> ID . LPAREN auxLlamada RPAREN SEMICOLON
    (40) auxAsignacion1 -> . LBRACKET exp RBRACKET
    (41) auxAsignacion1 -> .

    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 76
    EQUALA          reduce using rule 41 (auxAsignacion1 -> .)

    auxAsignacion1                 shift and go to state 77

state 58

    (33) estatuto -> asignacion .

    ID              reduce using rule 33 (estatuto -> asignacion .)
    IF              reduce using rule 33 (estatuto -> asignacion .)
    PRINT           reduce using rule 33 (estatuto -> asignacion .)
    READ            reduce using rule 33 (estatuto -> asignacion .)
    WHILE           reduce using rule 33 (estatuto -> asignacion .)
    RBRACE          reduce using rule 33 (estatuto -> asignacion .)


state 59

    (35) estatuto -> escritura .

    ID              reduce using rule 35 (estatuto -> escritura .)
    IF              reduce using rule 35 (estatuto -> escritura .)
    PRINT           reduce using rule 35 (estatuto -> escritura .)
    READ            reduce using rule 35 (estatuto -> escritura .)
    WHILE           reduce using rule 35 (estatuto -> escritura .)
    RBRACE          reduce using rule 35 (estatuto -> escritura .)


state 60

    (21) cicloVarsMain -> varsMain cicloVarsMain .

    ID              reduce using rule 21 (cicloVarsMain -> varsMain cicloVarsMain .)
    IF              reduce using rule 21 (cicloVarsMain -> varsMain cicloVarsMain .)
    PRINT           reduce using rule 21 (cicloVarsMain -> varsMain cicloVarsMain .)
    READ            reduce using rule 21 (cicloVarsMain -> varsMain cicloVarsMain .)
    WHILE           reduce using rule 21 (cicloVarsMain -> varsMain cicloVarsMain .)
    RBRACE          reduce using rule 21 (cicloVarsMain -> varsMain cicloVarsMain .)


state 61

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal . SEMICOLON

    SEMICOLON       shift and go to state 79


state 62

    (11) ambIdVars -> COMMA idVars .

    COLON           reduce using rule 11 (ambIdVars -> COMMA idVars .)


state 63

    (91) auxParametros -> tipo . ID ambAuxParametros

    ID              shift and go to state 80


state 64

    (86) funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction . RPAREN bloque

    RPAREN          shift and go to state 81


state 65

    (90) parametros -> auxParametros .

    RPAREN          reduce using rule 90 (parametros -> auxParametros .)


state 66

    (88) auxFunction -> parametros .

    RPAREN          reduce using rule 88 (auxFunction -> parametros .)


state 67

    (23) varsMain -> createVariableDirMain VAR auxVar1Main .

    VAR             reduce using rule 23 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    ID              reduce using rule 23 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    IF              reduce using rule 23 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    PRINT           reduce using rule 23 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    READ            reduce using rule 23 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    WHILE           reduce using rule 23 (varsMain -> createVariableDirMain VAR auxVar1Main .)
    RBRACE          reduce using rule 23 (varsMain -> createVariableDirMain VAR auxVar1Main .)


state 68

    (25) auxVar1Main -> idVarsMain . COLON tipo addTypeGlobalMain SEMICOLON

    COLON           shift and go to state 82


state 69

    (27) idVarsMain -> ID . addVariableDirMain ambIdVarsMain
    (28) addVariableDirMain -> .

    COMMA           reduce using rule 28 (addVariableDirMain -> .)
    COLON           reduce using rule 28 (addVariableDirMain -> .)

    addVariableDirMain             shift and go to state 83

state 70

    (103) lectura -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 84


state 71

    (42) escritura -> PRINT LPAREN . auxEscritura1 RPAREN SEMICOLON
    (43) auxEscritura1 -> . auxEscritura2 ambAuxEscritura1
    (46) auxEscritura2 -> . exp
    (47) auxEscritura2 -> . CTESTRING
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 93
    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

  ! CTESTRING       [ reduce using rule 74 (auxFactor -> .) ]

    auxEscritura1                  shift and go to state 86
    auxEscritura2                  shift and go to state 87
    auxExp                         shift and go to state 88
    termino                        shift and go to state 90
    exp                            shift and go to state 85
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 72

    (94) ciclo -> WHILE LPAREN . expresion RPAREN bloque
    (48) expresion -> . exp auxExpresion exp
    (49) expresion -> .
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    RPAREN          reduce using rule 49 (expresion -> .)
    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    expresion                      shift and go to state 98
    auxExp                         shift and go to state 88
    auxFactor                      shift and go to state 94
    termino                        shift and go to state 90
    exp                            shift and go to state 99
    factor                         shift and go to state 92
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 73

    (31) cicloBloque -> estatuto cicloBloque .

    RBRACE          reduce using rule 31 (cicloBloque -> estatuto cicloBloque .)


state 74

    (56) condicion -> IF LPAREN . expresion RPAREN bloque auxCondicion
    (48) expresion -> . exp auxExpresion exp
    (49) expresion -> .
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    RPAREN          reduce using rule 49 (expresion -> .)
    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    expresion                      shift and go to state 100
    auxExp                         shift and go to state 88
    auxFactor                      shift and go to state 94
    termino                        shift and go to state 90
    exp                            shift and go to state 99
    factor                         shift and go to state 92
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 75

    (20) bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .

    ID              reduce using rule 20 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    IF              reduce using rule 20 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    PRINT           reduce using rule 20 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    READ            reduce using rule 20 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    WHILE           reduce using rule 20 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    RBRACE          reduce using rule 20 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    $end            reduce using rule 20 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    FUNCTION        reduce using rule 20 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    MAIN            reduce using rule 20 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)
    ELSE            reduce using rule 20 (bloque -> LBRACE cicloVarsMain cicloBloque RBRACE .)


state 76

    (40) auxAsignacion1 -> LBRACKET . exp RBRACKET
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    auxExp                         shift and go to state 88
    termino                        shift and go to state 90
    exp                            shift and go to state 101
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 77

    (39) asignacion -> ID auxAsignacion1 . EQUALA exp SEMICOLON

    EQUALA          shift and go to state 102


state 78

    (95) llamada -> ID LPAREN . auxLlamada RPAREN SEMICOLON
    (96) auxLlamada -> . argumentos
    (97) auxLlamada -> .
    (98) argumentos -> . auxArgumentos1
    (99) argumentos -> .
    (100) auxArgumentos1 -> . exp ambAuxArgumentos1
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

  ! reduce/reduce conflict for RPAREN resolved using rule 97 (auxLlamada -> .)
    RPAREN          reduce using rule 97 (auxLlamada -> .)
    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

  ! RPAREN          [ reduce using rule 99 (argumentos -> .) ]

    auxLlamada                     shift and go to state 104
    auxExp                         shift and go to state 88
    termino                        shift and go to state 90
    exp                            shift and go to state 103
    factor                         shift and go to state 92
    argumentos                     shift and go to state 105
    auxFactor                      shift and go to state 94
    auxArgumentos1                 shift and go to state 106
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 79

    (7) auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .

    VAR             reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    FUNCTION        reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)
    MAIN            reduce using rule 7 (auxVar1 -> idVars COLON tipo addTypeGlobal SEMICOLON .)


state 80

    (91) auxParametros -> tipo ID . ambAuxParametros
    (92) ambAuxParametros -> . COMMA auxParametros
    (93) ambAuxParametros -> .

    COMMA           shift and go to state 108
    RPAREN          reduce using rule 93 (ambAuxParametros -> .)

    ambAuxParametros               shift and go to state 107

state 81

    (86) funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN . bloque
    (20) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 109

state 82

    (25) auxVar1Main -> idVarsMain COLON . tipo addTypeGlobalMain SEMICOLON
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 110

state 83

    (27) idVarsMain -> ID addVariableDirMain . ambIdVarsMain
    (29) ambIdVarsMain -> . COMMA idVarsMain
    (30) ambIdVarsMain -> .

    COMMA           shift and go to state 112
    COLON           reduce using rule 30 (ambIdVarsMain -> .)

    ambIdVarsMain                  shift and go to state 111

state 84

    (103) lectura -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 113


state 85

    (46) auxEscritura2 -> exp .

    COMMA           reduce using rule 46 (auxEscritura2 -> exp .)
    RPAREN          reduce using rule 46 (auxEscritura2 -> exp .)


state 86

    (42) escritura -> PRINT LPAREN auxEscritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 114


state 87

    (43) auxEscritura1 -> auxEscritura2 . ambAuxEscritura1
    (44) ambAuxEscritura1 -> . COMMA auxEscritura1
    (45) ambAuxEscritura1 -> .

    COMMA           shift and go to state 115
    RPAREN          reduce using rule 45 (ambAuxEscritura1 -> .)

    ambAuxEscritura1               shift and go to state 116

state 88

    (73) auxFactor -> auxExp .

    ID              reduce using rule 73 (auxFactor -> auxExp .)
    CTEINT          reduce using rule 73 (auxFactor -> auxExp .)
    CTEFLOAT        reduce using rule 73 (auxFactor -> auxExp .)
    CTECHAR         reduce using rule 73 (auxFactor -> auxExp .)
    CTEBOOL         reduce using rule 73 (auxFactor -> auxExp .)
    CTESTRING       reduce using rule 73 (auxFactor -> auxExp .)


state 89

    (63) auxExp -> PLUS .

    ID              reduce using rule 63 (auxExp -> PLUS .)
    CTEINT          reduce using rule 63 (auxExp -> PLUS .)
    CTEFLOAT        reduce using rule 63 (auxExp -> PLUS .)
    CTECHAR         reduce using rule 63 (auxExp -> PLUS .)
    CTEBOOL         reduce using rule 63 (auxExp -> PLUS .)
    CTESTRING       reduce using rule 63 (auxExp -> PLUS .)
    LPAREN          reduce using rule 63 (auxExp -> PLUS .)
    PLUS            reduce using rule 63 (auxExp -> PLUS .)
    MINUS           reduce using rule 63 (auxExp -> PLUS .)


state 90

    (60) cicloExp -> termino . ambExp
    (61) ambExp -> . auxExp cicloExp
    (62) ambExp -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    COMMA           reduce using rule 62 (ambExp -> .)
    RPAREN          reduce using rule 62 (ambExp -> .)
    GTHAN           reduce using rule 62 (ambExp -> .)
    LTHAN           reduce using rule 62 (ambExp -> .)
    NOTEQUAL        reduce using rule 62 (ambExp -> .)
    GETHAN          reduce using rule 62 (ambExp -> .)
    LETHAN          reduce using rule 62 (ambExp -> .)
    EQUAL           reduce using rule 62 (ambExp -> .)
    RBRACKET        reduce using rule 62 (ambExp -> .)
    SEMICOLON       reduce using rule 62 (ambExp -> .)
    LBRACKET        reduce using rule 62 (ambExp -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    ambExp                         shift and go to state 118
    auxExp                         shift and go to state 117

state 91

    (71) factor -> LPAREN . exp RPAREN
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    auxExp                         shift and go to state 88
    termino                        shift and go to state 90
    exp                            shift and go to state 119
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 92

    (66) cicloTermino -> factor . ambCicloTermino
    (67) ambCicloTermino -> . auxTermino cicloTermino
    (68) ambCicloTermino -> .
    (69) auxTermino -> . MULTI
    (70) auxTermino -> . DIVIDE

    PLUS            reduce using rule 68 (ambCicloTermino -> .)
    MINUS           reduce using rule 68 (ambCicloTermino -> .)
    COMMA           reduce using rule 68 (ambCicloTermino -> .)
    RPAREN          reduce using rule 68 (ambCicloTermino -> .)
    GTHAN           reduce using rule 68 (ambCicloTermino -> .)
    LTHAN           reduce using rule 68 (ambCicloTermino -> .)
    NOTEQUAL        reduce using rule 68 (ambCicloTermino -> .)
    GETHAN          reduce using rule 68 (ambCicloTermino -> .)
    LETHAN          reduce using rule 68 (ambCicloTermino -> .)
    EQUAL           reduce using rule 68 (ambCicloTermino -> .)
    RBRACKET        reduce using rule 68 (ambCicloTermino -> .)
    SEMICOLON       reduce using rule 68 (ambCicloTermino -> .)
    LBRACKET        reduce using rule 68 (ambCicloTermino -> .)
    MULTI           shift and go to state 120
    DIVIDE          shift and go to state 121

    ambCicloTermino                shift and go to state 123
    auxTermino                     shift and go to state 122

state 93

    (47) auxEscritura2 -> CTESTRING .

    COMMA           reduce using rule 47 (auxEscritura2 -> CTESTRING .)
    RPAREN          reduce using rule 47 (auxEscritura2 -> CTESTRING .)


state 94

    (72) factor -> auxFactor . varcte
    (75) varcte -> . ID auxVarcte
    (76) varcte -> . CTEINT
    (77) varcte -> . CTEFLOAT
    (78) varcte -> . CTECHAR
    (79) varcte -> . CTEBOOL
    (80) varcte -> . CTESTRING

    ID              shift and go to state 130
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    CTECHAR         shift and go to state 129
    CTEBOOL         shift and go to state 126
    CTESTRING       shift and go to state 124

    varcte                         shift and go to state 125

state 95

    (64) auxExp -> MINUS .

    ID              reduce using rule 64 (auxExp -> MINUS .)
    CTEINT          reduce using rule 64 (auxExp -> MINUS .)
    CTEFLOAT        reduce using rule 64 (auxExp -> MINUS .)
    CTECHAR         reduce using rule 64 (auxExp -> MINUS .)
    CTEBOOL         reduce using rule 64 (auxExp -> MINUS .)
    CTESTRING       reduce using rule 64 (auxExp -> MINUS .)
    LPAREN          reduce using rule 64 (auxExp -> MINUS .)
    PLUS            reduce using rule 64 (auxExp -> MINUS .)
    MINUS           reduce using rule 64 (auxExp -> MINUS .)


state 96

    (59) exp -> cicloExp .

    COMMA           reduce using rule 59 (exp -> cicloExp .)
    RPAREN          reduce using rule 59 (exp -> cicloExp .)
    LBRACKET        reduce using rule 59 (exp -> cicloExp .)
    GTHAN           reduce using rule 59 (exp -> cicloExp .)
    LTHAN           reduce using rule 59 (exp -> cicloExp .)
    NOTEQUAL        reduce using rule 59 (exp -> cicloExp .)
    GETHAN          reduce using rule 59 (exp -> cicloExp .)
    LETHAN          reduce using rule 59 (exp -> cicloExp .)
    EQUAL           reduce using rule 59 (exp -> cicloExp .)
    SEMICOLON       reduce using rule 59 (exp -> cicloExp .)
    RBRACKET        reduce using rule 59 (exp -> cicloExp .)


state 97

    (65) termino -> cicloTermino .

    PLUS            reduce using rule 65 (termino -> cicloTermino .)
    MINUS           reduce using rule 65 (termino -> cicloTermino .)
    LBRACKET        reduce using rule 65 (termino -> cicloTermino .)
    RPAREN          reduce using rule 65 (termino -> cicloTermino .)
    COMMA           reduce using rule 65 (termino -> cicloTermino .)
    GTHAN           reduce using rule 65 (termino -> cicloTermino .)
    LTHAN           reduce using rule 65 (termino -> cicloTermino .)
    NOTEQUAL        reduce using rule 65 (termino -> cicloTermino .)
    GETHAN          reduce using rule 65 (termino -> cicloTermino .)
    LETHAN          reduce using rule 65 (termino -> cicloTermino .)
    EQUAL           reduce using rule 65 (termino -> cicloTermino .)
    RBRACKET        reduce using rule 65 (termino -> cicloTermino .)
    SEMICOLON       reduce using rule 65 (termino -> cicloTermino .)


state 98

    (94) ciclo -> WHILE LPAREN expresion . RPAREN bloque

    RPAREN          shift and go to state 131


state 99

    (48) expresion -> exp . auxExpresion exp
    (50) auxExpresion -> . GTHAN
    (51) auxExpresion -> . LTHAN
    (52) auxExpresion -> . NOTEQUAL
    (53) auxExpresion -> . GETHAN
    (54) auxExpresion -> . LETHAN
    (55) auxExpresion -> . EQUAL

    GTHAN           shift and go to state 134
    LTHAN           shift and go to state 137
    NOTEQUAL        shift and go to state 132
    GETHAN          shift and go to state 136
    LETHAN          shift and go to state 138
    EQUAL           shift and go to state 135

    auxExpresion                   shift and go to state 133

state 100

    (56) condicion -> IF LPAREN expresion . RPAREN bloque auxCondicion

    RPAREN          shift and go to state 139


state 101

    (40) auxAsignacion1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 140


state 102

    (39) asignacion -> ID auxAsignacion1 EQUALA . exp SEMICOLON
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    auxExp                         shift and go to state 88
    termino                        shift and go to state 90
    exp                            shift and go to state 141
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 103

    (100) auxArgumentos1 -> exp . ambAuxArgumentos1
    (101) ambAuxArgumentos1 -> . COMMA auxArgumentos1
    (102) ambAuxArgumentos1 -> .

    COMMA           shift and go to state 143
    RPAREN          reduce using rule 102 (ambAuxArgumentos1 -> .)

    ambAuxArgumentos1              shift and go to state 142

state 104

    (95) llamada -> ID LPAREN auxLlamada . RPAREN SEMICOLON

    RPAREN          shift and go to state 144


state 105

    (96) auxLlamada -> argumentos .

    RPAREN          reduce using rule 96 (auxLlamada -> argumentos .)


state 106

    (98) argumentos -> auxArgumentos1 .

    RPAREN          reduce using rule 98 (argumentos -> auxArgumentos1 .)


state 107

    (91) auxParametros -> tipo ID ambAuxParametros .

    RPAREN          reduce using rule 91 (auxParametros -> tipo ID ambAuxParametros .)


state 108

    (92) ambAuxParametros -> COMMA . auxParametros
    (91) auxParametros -> . tipo ID ambAuxParametros
    (13) tipo -> . INT ambAuxTipo1
    (14) tipo -> . BOOL ambAuxTipo1
    (15) tipo -> . STRING ambAuxTipo1
    (16) tipo -> . FLOAT ambAuxTipo1
    (17) tipo -> . CHAR ambAuxTipo1

    INT             shift and go to state 16
    BOOL            shift and go to state 19
    STRING          shift and go to state 14
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo                           shift and go to state 63
    auxParametros                  shift and go to state 145

state 109

    (86) funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque .

    FUNCTION        reduce using rule 86 (funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque .)
    MAIN            reduce using rule 86 (funcion -> FUNCTION tipo ID addProcDirectoryFunc LPAREN auxFunction RPAREN bloque .)


state 110

    (25) auxVar1Main -> idVarsMain COLON tipo . addTypeGlobalMain SEMICOLON
    (26) addTypeGlobalMain -> .

    SEMICOLON       reduce using rule 26 (addTypeGlobalMain -> .)

    addTypeGlobalMain              shift and go to state 146

state 111

    (27) idVarsMain -> ID addVariableDirMain ambIdVarsMain .

    COLON           reduce using rule 27 (idVarsMain -> ID addVariableDirMain ambIdVarsMain .)


state 112

    (29) ambIdVarsMain -> COMMA . idVarsMain
    (27) idVarsMain -> . ID addVariableDirMain ambIdVarsMain

    ID              shift and go to state 69

    idVarsMain                     shift and go to state 147

state 113

    (103) lectura -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 148


state 114

    (42) escritura -> PRINT LPAREN auxEscritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 149


state 115

    (44) ambAuxEscritura1 -> COMMA . auxEscritura1
    (43) auxEscritura1 -> . auxEscritura2 ambAuxEscritura1
    (46) auxEscritura2 -> . exp
    (47) auxEscritura2 -> . CTESTRING
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 93
    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

  ! CTESTRING       [ reduce using rule 74 (auxFactor -> .) ]

    auxEscritura1                  shift and go to state 150
    auxEscritura2                  shift and go to state 87
    auxExp                         shift and go to state 88
    termino                        shift and go to state 90
    exp                            shift and go to state 85
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 116

    (43) auxEscritura1 -> auxEscritura2 ambAuxEscritura1 .

    RPAREN          reduce using rule 43 (auxEscritura1 -> auxEscritura2 ambAuxEscritura1 .)


state 117

    (61) ambExp -> auxExp . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    cicloExp                       shift and go to state 151
    termino                        shift and go to state 90
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    auxExp                         shift and go to state 88
    cicloTermino                   shift and go to state 97

state 118

    (60) cicloExp -> termino ambExp .

    RBRACKET        reduce using rule 60 (cicloExp -> termino ambExp .)
    COMMA           reduce using rule 60 (cicloExp -> termino ambExp .)
    RPAREN          reduce using rule 60 (cicloExp -> termino ambExp .)
    GTHAN           reduce using rule 60 (cicloExp -> termino ambExp .)
    LTHAN           reduce using rule 60 (cicloExp -> termino ambExp .)
    NOTEQUAL        reduce using rule 60 (cicloExp -> termino ambExp .)
    GETHAN          reduce using rule 60 (cicloExp -> termino ambExp .)
    LETHAN          reduce using rule 60 (cicloExp -> termino ambExp .)
    EQUAL           reduce using rule 60 (cicloExp -> termino ambExp .)
    SEMICOLON       reduce using rule 60 (cicloExp -> termino ambExp .)
    LBRACKET        reduce using rule 60 (cicloExp -> termino ambExp .)


state 119

    (71) factor -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 152


state 120

    (69) auxTermino -> MULTI .

    LPAREN          reduce using rule 69 (auxTermino -> MULTI .)
    PLUS            reduce using rule 69 (auxTermino -> MULTI .)
    MINUS           reduce using rule 69 (auxTermino -> MULTI .)
    ID              reduce using rule 69 (auxTermino -> MULTI .)
    CTEINT          reduce using rule 69 (auxTermino -> MULTI .)
    CTEFLOAT        reduce using rule 69 (auxTermino -> MULTI .)
    CTECHAR         reduce using rule 69 (auxTermino -> MULTI .)
    CTEBOOL         reduce using rule 69 (auxTermino -> MULTI .)
    CTESTRING       reduce using rule 69 (auxTermino -> MULTI .)


state 121

    (70) auxTermino -> DIVIDE .

    LPAREN          reduce using rule 70 (auxTermino -> DIVIDE .)
    PLUS            reduce using rule 70 (auxTermino -> DIVIDE .)
    MINUS           reduce using rule 70 (auxTermino -> DIVIDE .)
    ID              reduce using rule 70 (auxTermino -> DIVIDE .)
    CTEINT          reduce using rule 70 (auxTermino -> DIVIDE .)
    CTEFLOAT        reduce using rule 70 (auxTermino -> DIVIDE .)
    CTECHAR         reduce using rule 70 (auxTermino -> DIVIDE .)
    CTEBOOL         reduce using rule 70 (auxTermino -> DIVIDE .)
    CTESTRING       reduce using rule 70 (auxTermino -> DIVIDE .)


state 122

    (67) ambCicloTermino -> auxTermino . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    auxExp                         shift and go to state 88
    cicloTermino                   shift and go to state 153

state 123

    (66) cicloTermino -> factor ambCicloTermino .

    PLUS            reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    MINUS           reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    COMMA           reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    RPAREN          reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    GTHAN           reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    LTHAN           reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    NOTEQUAL        reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    GETHAN          reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    LETHAN          reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    EQUAL           reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    LBRACKET        reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    RBRACKET        reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)
    SEMICOLON       reduce using rule 66 (cicloTermino -> factor ambCicloTermino .)


state 124

    (80) varcte -> CTESTRING .

    MULTI           reduce using rule 80 (varcte -> CTESTRING .)
    DIVIDE          reduce using rule 80 (varcte -> CTESTRING .)
    PLUS            reduce using rule 80 (varcte -> CTESTRING .)
    MINUS           reduce using rule 80 (varcte -> CTESTRING .)
    COMMA           reduce using rule 80 (varcte -> CTESTRING .)
    RPAREN          reduce using rule 80 (varcte -> CTESTRING .)
    GTHAN           reduce using rule 80 (varcte -> CTESTRING .)
    LTHAN           reduce using rule 80 (varcte -> CTESTRING .)
    NOTEQUAL        reduce using rule 80 (varcte -> CTESTRING .)
    GETHAN          reduce using rule 80 (varcte -> CTESTRING .)
    LETHAN          reduce using rule 80 (varcte -> CTESTRING .)
    EQUAL           reduce using rule 80 (varcte -> CTESTRING .)
    RBRACKET        reduce using rule 80 (varcte -> CTESTRING .)
    SEMICOLON       reduce using rule 80 (varcte -> CTESTRING .)
    LBRACKET        reduce using rule 80 (varcte -> CTESTRING .)


state 125

    (72) factor -> auxFactor varcte .

    MULTI           reduce using rule 72 (factor -> auxFactor varcte .)
    DIVIDE          reduce using rule 72 (factor -> auxFactor varcte .)
    PLUS            reduce using rule 72 (factor -> auxFactor varcte .)
    MINUS           reduce using rule 72 (factor -> auxFactor varcte .)
    GTHAN           reduce using rule 72 (factor -> auxFactor varcte .)
    LTHAN           reduce using rule 72 (factor -> auxFactor varcte .)
    NOTEQUAL        reduce using rule 72 (factor -> auxFactor varcte .)
    GETHAN          reduce using rule 72 (factor -> auxFactor varcte .)
    LETHAN          reduce using rule 72 (factor -> auxFactor varcte .)
    EQUAL           reduce using rule 72 (factor -> auxFactor varcte .)
    COMMA           reduce using rule 72 (factor -> auxFactor varcte .)
    RPAREN          reduce using rule 72 (factor -> auxFactor varcte .)
    RBRACKET        reduce using rule 72 (factor -> auxFactor varcte .)
    SEMICOLON       reduce using rule 72 (factor -> auxFactor varcte .)
    LBRACKET        reduce using rule 72 (factor -> auxFactor varcte .)


state 126

    (79) varcte -> CTEBOOL .

    MULTI           reduce using rule 79 (varcte -> CTEBOOL .)
    DIVIDE          reduce using rule 79 (varcte -> CTEBOOL .)
    PLUS            reduce using rule 79 (varcte -> CTEBOOL .)
    MINUS           reduce using rule 79 (varcte -> CTEBOOL .)
    COMMA           reduce using rule 79 (varcte -> CTEBOOL .)
    RPAREN          reduce using rule 79 (varcte -> CTEBOOL .)
    GTHAN           reduce using rule 79 (varcte -> CTEBOOL .)
    LTHAN           reduce using rule 79 (varcte -> CTEBOOL .)
    NOTEQUAL        reduce using rule 79 (varcte -> CTEBOOL .)
    GETHAN          reduce using rule 79 (varcte -> CTEBOOL .)
    LETHAN          reduce using rule 79 (varcte -> CTEBOOL .)
    EQUAL           reduce using rule 79 (varcte -> CTEBOOL .)
    RBRACKET        reduce using rule 79 (varcte -> CTEBOOL .)
    SEMICOLON       reduce using rule 79 (varcte -> CTEBOOL .)
    LBRACKET        reduce using rule 79 (varcte -> CTEBOOL .)


state 127

    (76) varcte -> CTEINT .

    MULTI           reduce using rule 76 (varcte -> CTEINT .)
    DIVIDE          reduce using rule 76 (varcte -> CTEINT .)
    PLUS            reduce using rule 76 (varcte -> CTEINT .)
    MINUS           reduce using rule 76 (varcte -> CTEINT .)
    COMMA           reduce using rule 76 (varcte -> CTEINT .)
    RPAREN          reduce using rule 76 (varcte -> CTEINT .)
    GTHAN           reduce using rule 76 (varcte -> CTEINT .)
    LTHAN           reduce using rule 76 (varcte -> CTEINT .)
    NOTEQUAL        reduce using rule 76 (varcte -> CTEINT .)
    GETHAN          reduce using rule 76 (varcte -> CTEINT .)
    LETHAN          reduce using rule 76 (varcte -> CTEINT .)
    EQUAL           reduce using rule 76 (varcte -> CTEINT .)
    RBRACKET        reduce using rule 76 (varcte -> CTEINT .)
    SEMICOLON       reduce using rule 76 (varcte -> CTEINT .)
    LBRACKET        reduce using rule 76 (varcte -> CTEINT .)


state 128

    (77) varcte -> CTEFLOAT .

    MULTI           reduce using rule 77 (varcte -> CTEFLOAT .)
    DIVIDE          reduce using rule 77 (varcte -> CTEFLOAT .)
    PLUS            reduce using rule 77 (varcte -> CTEFLOAT .)
    MINUS           reduce using rule 77 (varcte -> CTEFLOAT .)
    COMMA           reduce using rule 77 (varcte -> CTEFLOAT .)
    RPAREN          reduce using rule 77 (varcte -> CTEFLOAT .)
    GTHAN           reduce using rule 77 (varcte -> CTEFLOAT .)
    LTHAN           reduce using rule 77 (varcte -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 77 (varcte -> CTEFLOAT .)
    GETHAN          reduce using rule 77 (varcte -> CTEFLOAT .)
    LETHAN          reduce using rule 77 (varcte -> CTEFLOAT .)
    EQUAL           reduce using rule 77 (varcte -> CTEFLOAT .)
    RBRACKET        reduce using rule 77 (varcte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 77 (varcte -> CTEFLOAT .)
    LBRACKET        reduce using rule 77 (varcte -> CTEFLOAT .)


state 129

    (78) varcte -> CTECHAR .

    MULTI           reduce using rule 78 (varcte -> CTECHAR .)
    DIVIDE          reduce using rule 78 (varcte -> CTECHAR .)
    PLUS            reduce using rule 78 (varcte -> CTECHAR .)
    MINUS           reduce using rule 78 (varcte -> CTECHAR .)
    COMMA           reduce using rule 78 (varcte -> CTECHAR .)
    RPAREN          reduce using rule 78 (varcte -> CTECHAR .)
    GTHAN           reduce using rule 78 (varcte -> CTECHAR .)
    LTHAN           reduce using rule 78 (varcte -> CTECHAR .)
    NOTEQUAL        reduce using rule 78 (varcte -> CTECHAR .)
    GETHAN          reduce using rule 78 (varcte -> CTECHAR .)
    LETHAN          reduce using rule 78 (varcte -> CTECHAR .)
    EQUAL           reduce using rule 78 (varcte -> CTECHAR .)
    RBRACKET        reduce using rule 78 (varcte -> CTECHAR .)
    SEMICOLON       reduce using rule 78 (varcte -> CTECHAR .)
    LBRACKET        reduce using rule 78 (varcte -> CTECHAR .)


state 130

    (75) varcte -> ID . auxVarcte
    (81) auxVarcte -> . LPAREN exp RPAREN
    (82) auxVarcte -> . LBRACKET exp LBRACKET
    (83) auxVarcte -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
    LPAREN          shift and go to state 154
    LBRACKET        shift and go to state 155
    MULTI           reduce using rule 83 (auxVarcte -> .)
    DIVIDE          reduce using rule 83 (auxVarcte -> .)
    PLUS            reduce using rule 83 (auxVarcte -> .)
    MINUS           reduce using rule 83 (auxVarcte -> .)
    COMMA           reduce using rule 83 (auxVarcte -> .)
    RPAREN          reduce using rule 83 (auxVarcte -> .)
    GTHAN           reduce using rule 83 (auxVarcte -> .)
    LTHAN           reduce using rule 83 (auxVarcte -> .)
    NOTEQUAL        reduce using rule 83 (auxVarcte -> .)
    GETHAN          reduce using rule 83 (auxVarcte -> .)
    LETHAN          reduce using rule 83 (auxVarcte -> .)
    EQUAL           reduce using rule 83 (auxVarcte -> .)
    RBRACKET        reduce using rule 83 (auxVarcte -> .)
    SEMICOLON       reduce using rule 83 (auxVarcte -> .)

  ! LBRACKET        [ reduce using rule 83 (auxVarcte -> .) ]

    auxVarcte                      shift and go to state 156

state 131

    (94) ciclo -> WHILE LPAREN expresion RPAREN . bloque
    (20) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 157

state 132

    (52) auxExpresion -> NOTEQUAL .

    LPAREN          reduce using rule 52 (auxExpresion -> NOTEQUAL .)
    PLUS            reduce using rule 52 (auxExpresion -> NOTEQUAL .)
    MINUS           reduce using rule 52 (auxExpresion -> NOTEQUAL .)
    ID              reduce using rule 52 (auxExpresion -> NOTEQUAL .)
    CTEINT          reduce using rule 52 (auxExpresion -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 52 (auxExpresion -> NOTEQUAL .)
    CTECHAR         reduce using rule 52 (auxExpresion -> NOTEQUAL .)
    CTEBOOL         reduce using rule 52 (auxExpresion -> NOTEQUAL .)
    CTESTRING       reduce using rule 52 (auxExpresion -> NOTEQUAL .)


state 133

    (48) expresion -> exp auxExpresion . exp
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    auxExp                         shift and go to state 88
    termino                        shift and go to state 90
    exp                            shift and go to state 158
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 134

    (50) auxExpresion -> GTHAN .

    LPAREN          reduce using rule 50 (auxExpresion -> GTHAN .)
    PLUS            reduce using rule 50 (auxExpresion -> GTHAN .)
    MINUS           reduce using rule 50 (auxExpresion -> GTHAN .)
    ID              reduce using rule 50 (auxExpresion -> GTHAN .)
    CTEINT          reduce using rule 50 (auxExpresion -> GTHAN .)
    CTEFLOAT        reduce using rule 50 (auxExpresion -> GTHAN .)
    CTECHAR         reduce using rule 50 (auxExpresion -> GTHAN .)
    CTEBOOL         reduce using rule 50 (auxExpresion -> GTHAN .)
    CTESTRING       reduce using rule 50 (auxExpresion -> GTHAN .)


state 135

    (55) auxExpresion -> EQUAL .

    LPAREN          reduce using rule 55 (auxExpresion -> EQUAL .)
    PLUS            reduce using rule 55 (auxExpresion -> EQUAL .)
    MINUS           reduce using rule 55 (auxExpresion -> EQUAL .)
    ID              reduce using rule 55 (auxExpresion -> EQUAL .)
    CTEINT          reduce using rule 55 (auxExpresion -> EQUAL .)
    CTEFLOAT        reduce using rule 55 (auxExpresion -> EQUAL .)
    CTECHAR         reduce using rule 55 (auxExpresion -> EQUAL .)
    CTEBOOL         reduce using rule 55 (auxExpresion -> EQUAL .)
    CTESTRING       reduce using rule 55 (auxExpresion -> EQUAL .)


state 136

    (53) auxExpresion -> GETHAN .

    LPAREN          reduce using rule 53 (auxExpresion -> GETHAN .)
    PLUS            reduce using rule 53 (auxExpresion -> GETHAN .)
    MINUS           reduce using rule 53 (auxExpresion -> GETHAN .)
    ID              reduce using rule 53 (auxExpresion -> GETHAN .)
    CTEINT          reduce using rule 53 (auxExpresion -> GETHAN .)
    CTEFLOAT        reduce using rule 53 (auxExpresion -> GETHAN .)
    CTECHAR         reduce using rule 53 (auxExpresion -> GETHAN .)
    CTEBOOL         reduce using rule 53 (auxExpresion -> GETHAN .)
    CTESTRING       reduce using rule 53 (auxExpresion -> GETHAN .)


state 137

    (51) auxExpresion -> LTHAN .

    LPAREN          reduce using rule 51 (auxExpresion -> LTHAN .)
    PLUS            reduce using rule 51 (auxExpresion -> LTHAN .)
    MINUS           reduce using rule 51 (auxExpresion -> LTHAN .)
    ID              reduce using rule 51 (auxExpresion -> LTHAN .)
    CTEINT          reduce using rule 51 (auxExpresion -> LTHAN .)
    CTEFLOAT        reduce using rule 51 (auxExpresion -> LTHAN .)
    CTECHAR         reduce using rule 51 (auxExpresion -> LTHAN .)
    CTEBOOL         reduce using rule 51 (auxExpresion -> LTHAN .)
    CTESTRING       reduce using rule 51 (auxExpresion -> LTHAN .)


state 138

    (54) auxExpresion -> LETHAN .

    LPAREN          reduce using rule 54 (auxExpresion -> LETHAN .)
    PLUS            reduce using rule 54 (auxExpresion -> LETHAN .)
    MINUS           reduce using rule 54 (auxExpresion -> LETHAN .)
    ID              reduce using rule 54 (auxExpresion -> LETHAN .)
    CTEINT          reduce using rule 54 (auxExpresion -> LETHAN .)
    CTEFLOAT        reduce using rule 54 (auxExpresion -> LETHAN .)
    CTECHAR         reduce using rule 54 (auxExpresion -> LETHAN .)
    CTEBOOL         reduce using rule 54 (auxExpresion -> LETHAN .)
    CTESTRING       reduce using rule 54 (auxExpresion -> LETHAN .)


state 139

    (56) condicion -> IF LPAREN expresion RPAREN . bloque auxCondicion
    (20) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 159

state 140

    (40) auxAsignacion1 -> LBRACKET exp RBRACKET .

    EQUALA          reduce using rule 40 (auxAsignacion1 -> LBRACKET exp RBRACKET .)


state 141

    (39) asignacion -> ID auxAsignacion1 EQUALA exp . SEMICOLON

    SEMICOLON       shift and go to state 160


state 142

    (100) auxArgumentos1 -> exp ambAuxArgumentos1 .

    RPAREN          reduce using rule 100 (auxArgumentos1 -> exp ambAuxArgumentos1 .)


state 143

    (101) ambAuxArgumentos1 -> COMMA . auxArgumentos1
    (100) auxArgumentos1 -> . exp ambAuxArgumentos1
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    auxExp                         shift and go to state 88
    termino                        shift and go to state 90
    exp                            shift and go to state 103
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    auxArgumentos1                 shift and go to state 161
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 144

    (95) llamada -> ID LPAREN auxLlamada RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 162


state 145

    (92) ambAuxParametros -> COMMA auxParametros .

    RPAREN          reduce using rule 92 (ambAuxParametros -> COMMA auxParametros .)


state 146

    (25) auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain . SEMICOLON

    SEMICOLON       shift and go to state 163


state 147

    (29) ambIdVarsMain -> COMMA idVarsMain .

    COLON           reduce using rule 29 (ambIdVarsMain -> COMMA idVarsMain .)


state 148

    (103) lectura -> READ LPAREN ID RPAREN SEMICOLON .

    ID              reduce using rule 103 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 103 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 103 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 103 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 103 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACE          reduce using rule 103 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)


state 149

    (42) escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .

    ID              reduce using rule 42 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 42 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 42 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    READ            reduce using rule 42 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 42 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 42 (escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON .)


state 150

    (44) ambAuxEscritura1 -> COMMA auxEscritura1 .

    RPAREN          reduce using rule 44 (ambAuxEscritura1 -> COMMA auxEscritura1 .)


state 151

    (61) ambExp -> auxExp cicloExp .

    COMMA           reduce using rule 61 (ambExp -> auxExp cicloExp .)
    RPAREN          reduce using rule 61 (ambExp -> auxExp cicloExp .)
    GTHAN           reduce using rule 61 (ambExp -> auxExp cicloExp .)
    LTHAN           reduce using rule 61 (ambExp -> auxExp cicloExp .)
    NOTEQUAL        reduce using rule 61 (ambExp -> auxExp cicloExp .)
    GETHAN          reduce using rule 61 (ambExp -> auxExp cicloExp .)
    LETHAN          reduce using rule 61 (ambExp -> auxExp cicloExp .)
    EQUAL           reduce using rule 61 (ambExp -> auxExp cicloExp .)
    RBRACKET        reduce using rule 61 (ambExp -> auxExp cicloExp .)
    SEMICOLON       reduce using rule 61 (ambExp -> auxExp cicloExp .)
    LBRACKET        reduce using rule 61 (ambExp -> auxExp cicloExp .)


state 152

    (71) factor -> LPAREN exp RPAREN .

    MULTI           reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    GTHAN           reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    LTHAN           reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    GETHAN          reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    LETHAN          reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 71 (factor -> LPAREN exp RPAREN .)
    LBRACKET        reduce using rule 71 (factor -> LPAREN exp RPAREN .)


state 153

    (67) ambCicloTermino -> auxTermino cicloTermino .

    PLUS            reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    MINUS           reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    COMMA           reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    RPAREN          reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    GTHAN           reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    LTHAN           reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    NOTEQUAL        reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    GETHAN          reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    LETHAN          reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    EQUAL           reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    RBRACKET        reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    SEMICOLON       reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)
    LBRACKET        reduce using rule 67 (ambCicloTermino -> auxTermino cicloTermino .)


state 154

    (81) auxVarcte -> LPAREN . exp RPAREN
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    auxExp                         shift and go to state 88
    termino                        shift and go to state 90
    exp                            shift and go to state 164
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 155

    (82) auxVarcte -> LBRACKET . exp LBRACKET
    (59) exp -> . cicloExp
    (60) cicloExp -> . termino ambExp
    (65) termino -> . cicloTermino
    (66) cicloTermino -> . factor ambCicloTermino
    (71) factor -> . LPAREN exp RPAREN
    (72) factor -> . auxFactor varcte
    (73) auxFactor -> . auxExp
    (74) auxFactor -> .
    (63) auxExp -> . PLUS
    (64) auxExp -> . MINUS

    LPAREN          shift and go to state 91
    ID              reduce using rule 74 (auxFactor -> .)
    CTEINT          reduce using rule 74 (auxFactor -> .)
    CTEFLOAT        reduce using rule 74 (auxFactor -> .)
    CTECHAR         reduce using rule 74 (auxFactor -> .)
    CTEBOOL         reduce using rule 74 (auxFactor -> .)
    CTESTRING       reduce using rule 74 (auxFactor -> .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 95

    auxExp                         shift and go to state 88
    termino                        shift and go to state 90
    exp                            shift and go to state 165
    factor                         shift and go to state 92
    auxFactor                      shift and go to state 94
    cicloExp                       shift and go to state 96
    cicloTermino                   shift and go to state 97

state 156

    (75) varcte -> ID auxVarcte .

    MULTI           reduce using rule 75 (varcte -> ID auxVarcte .)
    DIVIDE          reduce using rule 75 (varcte -> ID auxVarcte .)
    PLUS            reduce using rule 75 (varcte -> ID auxVarcte .)
    MINUS           reduce using rule 75 (varcte -> ID auxVarcte .)
    COMMA           reduce using rule 75 (varcte -> ID auxVarcte .)
    RPAREN          reduce using rule 75 (varcte -> ID auxVarcte .)
    GTHAN           reduce using rule 75 (varcte -> ID auxVarcte .)
    LTHAN           reduce using rule 75 (varcte -> ID auxVarcte .)
    NOTEQUAL        reduce using rule 75 (varcte -> ID auxVarcte .)
    GETHAN          reduce using rule 75 (varcte -> ID auxVarcte .)
    LETHAN          reduce using rule 75 (varcte -> ID auxVarcte .)
    EQUAL           reduce using rule 75 (varcte -> ID auxVarcte .)
    RBRACKET        reduce using rule 75 (varcte -> ID auxVarcte .)
    SEMICOLON       reduce using rule 75 (varcte -> ID auxVarcte .)
    LBRACKET        reduce using rule 75 (varcte -> ID auxVarcte .)


state 157

    (94) ciclo -> WHILE LPAREN expresion RPAREN bloque .

    ID              reduce using rule 94 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 94 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 94 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    READ            reduce using rule 94 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 94 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 94 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)


state 158

    (48) expresion -> exp auxExpresion exp .

    RPAREN          reduce using rule 48 (expresion -> exp auxExpresion exp .)


state 159

    (56) condicion -> IF LPAREN expresion RPAREN bloque . auxCondicion
    (57) auxCondicion -> . ELSE bloque
    (58) auxCondicion -> .

    ELSE            shift and go to state 166
    ID              reduce using rule 58 (auxCondicion -> .)
    IF              reduce using rule 58 (auxCondicion -> .)
    PRINT           reduce using rule 58 (auxCondicion -> .)
    READ            reduce using rule 58 (auxCondicion -> .)
    WHILE           reduce using rule 58 (auxCondicion -> .)
    RBRACE          reduce using rule 58 (auxCondicion -> .)

    auxCondicion                   shift and go to state 167

state 160

    (39) asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .

    ID              reduce using rule 39 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    IF              reduce using rule 39 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    PRINT           reduce using rule 39 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    READ            reduce using rule 39 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    WHILE           reduce using rule 39 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)
    RBRACE          reduce using rule 39 (asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON .)


state 161

    (101) ambAuxArgumentos1 -> COMMA auxArgumentos1 .

    RPAREN          reduce using rule 101 (ambAuxArgumentos1 -> COMMA auxArgumentos1 .)


state 162

    (95) llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .

    ID              reduce using rule 95 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    IF              reduce using rule 95 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    PRINT           reduce using rule 95 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    READ            reduce using rule 95 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    WHILE           reduce using rule 95 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)
    RBRACE          reduce using rule 95 (llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON .)


state 163

    (25) auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .

    VAR             reduce using rule 25 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    ID              reduce using rule 25 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    IF              reduce using rule 25 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    PRINT           reduce using rule 25 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    READ            reduce using rule 25 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    WHILE           reduce using rule 25 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)
    RBRACE          reduce using rule 25 (auxVar1Main -> idVarsMain COLON tipo addTypeGlobalMain SEMICOLON .)


state 164

    (81) auxVarcte -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 168


state 165

    (82) auxVarcte -> LBRACKET exp . LBRACKET

    LBRACKET        shift and go to state 169


state 166

    (57) auxCondicion -> ELSE . bloque
    (20) bloque -> . LBRACE cicloVarsMain cicloBloque RBRACE

    LBRACE          shift and go to state 32

    bloque                         shift and go to state 170

state 167

    (56) condicion -> IF LPAREN expresion RPAREN bloque auxCondicion .

    ID              reduce using rule 56 (condicion -> IF LPAREN expresion RPAREN bloque auxCondicion .)
    IF              reduce using rule 56 (condicion -> IF LPAREN expresion RPAREN bloque auxCondicion .)
    PRINT           reduce using rule 56 (condicion -> IF LPAREN expresion RPAREN bloque auxCondicion .)
    READ            reduce using rule 56 (condicion -> IF LPAREN expresion RPAREN bloque auxCondicion .)
    WHILE           reduce using rule 56 (condicion -> IF LPAREN expresion RPAREN bloque auxCondicion .)
    RBRACE          reduce using rule 56 (condicion -> IF LPAREN expresion RPAREN bloque auxCondicion .)


state 168

    (81) auxVarcte -> LPAREN exp RPAREN .

    MULTI           reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    GTHAN           reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    LTHAN           reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    GETHAN          reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    LETHAN          reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)
    LBRACKET        reduce using rule 81 (auxVarcte -> LPAREN exp RPAREN .)


state 169

    (82) auxVarcte -> LBRACKET exp LBRACKET .

    MULTI           reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    DIVIDE          reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    PLUS            reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    MINUS           reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    COMMA           reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    RPAREN          reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    GTHAN           reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    LTHAN           reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    NOTEQUAL        reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    GETHAN          reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    LETHAN          reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    EQUAL           reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    RBRACKET        reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    SEMICOLON       reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)
    LBRACKET        reduce using rule 82 (auxVarcte -> LBRACKET exp LBRACKET .)


state 170

    (57) auxCondicion -> ELSE bloque .

    ID              reduce using rule 57 (auxCondicion -> ELSE bloque .)
    IF              reduce using rule 57 (auxCondicion -> ELSE bloque .)
    PRINT           reduce using rule 57 (auxCondicion -> ELSE bloque .)
    READ            reduce using rule 57 (auxCondicion -> ELSE bloque .)
    WHILE           reduce using rule 57 (auxCondicion -> ELSE bloque .)
    RBRACE          reduce using rule 57 (auxCondicion -> ELSE bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CTESTRING in state 71 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 115 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 130 resolved as shift
WARNING: reduce/reduce conflict in state 78 resolved using rule (auxLlamada -> <empty>)
WARNING: rejected rule (argumentos -> <empty>) in state 78
WARNING: Rule (argumentos -> <empty>) is never reduced
