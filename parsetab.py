
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C854F53264527B5586400099364FA21C'
    
_lr_action_items = {'NOTEQUAL':([64,68,70,72,73,99,100,101,102,103,104,105,107,112,129,130,131,132,143,144,],[92,-50,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-63,-49,-59,-55,-69,-70,]),'MULTI':([70,99,100,101,102,103,104,105,129,131,143,144,],[109,-68,-60,-67,-64,-65,-66,-71,-63,-59,-69,-70,]),'GTHAN':([64,68,70,72,73,99,100,101,102,103,104,105,107,112,129,130,131,132,143,144,],[94,-50,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-63,-49,-59,-55,-69,-70,]),'CTESTRING':([50,51,53,56,57,65,66,67,69,71,79,92,93,94,95,96,97,98,106,109,110,111,114,120,127,128,],[-62,74,-62,-62,-62,-61,99,-51,-62,-52,-62,-40,-62,-38,-43,-41,-39,-42,-62,-57,-58,-62,74,-62,-62,-62,]),'READ':([16,26,27,28,29,31,34,35,121,124,133,136,138,146,],[23,-26,23,-25,-22,-24,-21,-23,-82,-90,-30,-27,-81,-44,]),'EQUAL':([64,68,70,72,73,99,100,101,102,103,104,105,107,112,129,130,131,132,143,144,],[95,-50,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-63,-49,-59,-55,-69,-70,]),'GETHAN':([64,68,70,72,73,99,100,101,102,103,104,105,107,112,129,130,131,132,143,144,],[96,-50,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-63,-49,-59,-55,-69,-70,]),'LBRACKET':([33,37,38,40,42,43,68,70,72,73,99,100,101,102,103,104,105,107,112,129,130,131,132,140,143,144,],[56,-14,-17,-15,59,-16,-50,-56,-47,-53,-68,-60,-67,-64,-65,-66,128,-48,-54,-63,-49,-59,-55,144,-69,-70,]),'WHILE':([16,26,27,28,29,31,34,35,121,124,133,136,138,146,],[24,-26,24,-25,-22,-24,-21,-23,-82,-90,-30,-27,-81,-44,]),'PROGRAM':([0,],[1,]),'PRINT':([16,26,27,28,29,31,34,35,121,124,133,136,138,146,],[25,-26,25,-25,-22,-24,-21,-23,-82,-90,-30,-27,-81,-44,]),'LETHAN':([64,68,70,72,73,99,100,101,102,103,104,105,107,112,129,130,131,132,143,144,],[98,-50,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-63,-49,-59,-55,-69,-70,]),'MINUS':([50,51,53,56,57,67,68,69,70,71,73,79,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,114,120,127,128,129,131,132,143,144,],[71,71,71,71,71,-51,71,71,-56,-52,-53,71,-40,71,-38,-43,-41,-39,-42,-68,-60,-67,-64,-65,-66,-71,71,-57,-58,71,-54,71,71,71,71,-63,-59,-55,-69,-70,]),'STRING':([19,22,88,],[43,43,43,]),'RPAREN':([22,46,47,48,50,51,53,57,60,62,63,68,69,70,72,73,74,75,76,77,78,81,82,83,84,87,99,100,101,102,103,104,105,107,108,112,114,115,119,123,126,129,130,131,132,134,137,139,143,144,],[-76,61,-77,-75,-37,-37,-37,-84,-80,90,91,-50,-37,-56,-47,-53,-35,113,-33,-34,116,-89,121,-83,-85,-78,-68,-60,-67,-64,-65,-66,-71,-48,131,-54,-37,-31,-87,-79,-36,-63,-49,-59,-55,-32,-88,143,-69,-70,]),'SEMICOLON':([3,36,37,38,39,40,41,42,43,54,68,70,72,73,79,90,99,100,101,102,103,104,105,107,112,113,117,122,125,126,129,130,131,132,135,142,143,144,145,],[4,58,-14,-17,-11,-15,-10,-13,-16,-18,-50,-56,-47,-53,-37,124,-68,-60,-67,-64,-65,-66,-71,-48,-54,133,136,-12,138,-36,-63,-49,-59,-55,-46,146,-69,-70,-45,]),'CTEFLOAT':([50,51,53,56,57,65,66,67,69,71,79,92,93,94,95,96,97,98,106,109,110,111,114,120,127,128,],[-62,-62,-62,-62,-62,-61,103,-51,-62,-52,-62,-40,-62,-38,-43,-41,-39,-42,-62,-57,-58,-62,-62,-62,-62,-62,]),'PLUS':([50,51,53,56,57,67,68,69,70,71,73,79,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,114,120,127,128,129,131,132,143,144,],[67,67,67,67,67,-51,67,67,-56,-52,-53,67,-40,67,-38,-43,-41,-39,-42,-68,-60,-67,-64,-65,-66,-71,67,-57,-58,67,-54,67,67,67,67,-63,-59,-55,-69,-70,]),'COLON':([12,14,21,44,],[19,-9,-7,-8,]),'COMMA':([14,51,60,68,70,72,73,74,76,77,81,99,100,101,102,103,104,105,107,112,114,126,129,130,131,132,143,144,],[20,-37,88,-50,-56,-47,-53,-35,114,-34,120,-68,-60,-67,-64,-65,-66,-71,-48,-54,-37,-36,-63,-49,-59,-55,-69,-70,]),'EQUALA':([33,55,118,],[-29,79,-28,]),'$end':([2,17,54,],[0,-1,-18,]),'FUNCTION':([4,5,6,7,8,11,13,54,58,85,89,],[-3,-3,9,-6,-2,9,-4,-18,-6,-5,-74,]),'RBRACE':([16,26,27,28,29,31,32,34,35,52,121,124,133,136,138,146,],[-20,-26,-20,-25,-22,-24,54,-21,-23,-19,-82,-90,-30,-27,-81,-44,]),'CTEINT':([50,51,53,56,57,59,65,66,67,69,71,79,92,93,94,95,96,97,98,106,109,110,111,114,120,127,128,],[-62,-62,-62,-62,-62,86,-61,102,-51,-62,-52,-62,-40,-62,-38,-43,-41,-39,-42,-62,-57,-58,-62,-62,-62,-62,-62,]),'DIVIDE':([70,99,100,101,102,103,104,105,129,131,143,144,],[110,-68,-60,-67,-64,-65,-66,-71,-63,-59,-69,-70,]),'ELSE':([54,135,],[-18,141,]),'LTHAN':([64,68,70,72,73,99,100,101,102,103,104,105,107,112,129,130,131,132,143,144,],[97,-50,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-63,-49,-59,-55,-69,-70,]),'LPAREN':([15,23,24,25,30,33,50,51,53,56,57,67,69,71,79,92,93,94,95,96,97,98,105,106,109,110,111,114,120,127,128,],[22,49,50,51,53,57,69,69,69,69,69,-51,69,-52,69,-40,69,-38,-43,-41,-39,-42,127,69,-57,-58,69,69,69,69,69,]),'VAR':([4,5,7,13,58,85,],[7,7,-6,-4,-6,-5,]),'CTECHAR':([50,51,53,56,57,65,66,67,69,71,79,92,93,94,95,96,97,98,106,109,110,111,114,120,127,128,],[-62,-62,-62,-62,-62,-61,104,-51,-62,-52,-62,-40,-62,-38,-43,-41,-39,-42,-62,-57,-58,-62,-62,-62,-62,-62,]),'ID':([1,7,9,16,20,26,27,28,29,31,34,35,37,38,39,40,41,42,43,45,49,50,51,53,56,57,58,65,66,67,69,71,79,92,93,94,95,96,97,98,106,109,110,111,114,120,121,122,124,127,128,133,136,138,146,],[3,14,15,33,14,-26,33,-25,-22,-24,-21,-23,-14,-17,-11,-15,-10,-13,-16,60,62,-62,-62,-62,-62,-62,14,-61,105,-51,-62,-52,-62,-40,-62,-38,-43,-41,-39,-42,-62,-57,-58,-62,-62,-62,-82,-12,-90,-62,-62,-30,-27,-81,-44,]),'IF':([16,26,27,28,29,31,34,35,121,124,133,136,138,146,],[30,-26,30,-25,-22,-24,-21,-23,-82,-90,-30,-27,-81,-44,]),'CHAR':([19,22,88,],[39,39,39,]),'LBRACE':([4,5,6,7,8,10,11,13,18,54,58,61,85,89,91,116,141,],[-3,-3,-73,-6,-2,16,-73,-4,-72,-18,-6,16,-5,-74,16,16,16,]),'INT':([19,22,88,],[37,37,37,]),'CTEBOOL':([50,51,53,56,57,65,66,67,69,71,79,92,93,94,95,96,97,98,106,109,110,111,114,120,127,128,],[-62,-62,-62,-62,-62,-61,101,-51,-62,-52,-62,-40,-62,-38,-43,-41,-39,-42,-62,-57,-58,-62,-62,-62,-62,-62,]),'FLOAT':([19,22,88,],[38,38,38,]),'BOOL':([19,22,88,],[40,40,40,]),'RBRACKET':([68,70,72,73,80,86,99,100,101,102,103,104,105,107,112,129,130,131,132,143,144,],[-50,-56,-47,-53,118,122,-68,-60,-67,-64,-65,-66,-71,-48,-54,-63,-49,-59,-55,-69,-70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'auxExp':([50,51,53,56,57,68,69,79,93,106,111,114,120,127,128,],[65,65,65,65,65,106,65,65,65,65,65,65,65,65,65,]),'vars':([4,5,],[5,5,]),'auxVar1':([7,58,],[13,85,]),'ambAuxArgumentos1':([81,],[119,]),'ambAuxEscritura1':([76,],[115,]),'ambIdVars':([14,],[21,]),'termino':([50,51,53,56,57,69,79,93,106,114,120,127,128,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'auxCondicion':([135,],[142,]),'auxVarcte':([105,],[129,]),'argumentos':([57,],[83,]),'bloque':([10,61,91,116,141,],[17,89,125,135,145,]),'ambAuxParametros':([60,],[87,]),'auxExpresion':([64,],[93,]),'ciclo':([16,27,],[26,26,]),'tipo':([19,22,88,],[36,45,45,]),'estatuto':([16,27,],[27,27,]),'auxFunction':([22,],[46,]),'auxLlamada':([57,],[82,]),'auxParametros':([22,88,],[47,123,]),'llamada':([16,27,],[28,28,]),'condicion':([16,27,],[29,29,]),'factor':([50,51,53,56,57,69,79,93,106,111,114,120,127,128,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'auxArgumentos1':([57,120,],[84,137,]),'lectura':([16,27,],[31,31,]),'funcion':([6,11,],[11,11,]),'auxEscritura2':([51,114,],[76,76,]),'auxEscritura1':([51,114,],[75,134,]),'cicloVars':([4,5,],[6,8,]),'auxTermino':([70,],[111,]),'cicloBloque':([16,27,],[32,52,]),'auxFactor':([50,51,53,56,57,69,79,93,106,111,114,120,127,128,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'parametros':([22,],[48,]),'cicloTermino':([50,51,53,56,57,69,79,93,106,111,114,120,127,128,],[73,73,73,73,73,73,73,73,73,132,73,73,73,73,]),'auxAsignacion1':([33,],[55,]),'expresion':([50,51,53,69,79,114,],[63,77,78,108,117,77,]),'varcte':([66,],[100,]),'idVars':([7,20,58,],[12,44,12,]),'asignacion':([16,27,],[34,34,]),'cicloExp':([50,51,53,56,57,69,79,93,106,114,120,127,128,],[72,72,72,72,72,72,72,72,130,72,72,72,72,]),'cicloFuncion':([6,11,],[10,18,]),'programa':([0,],[2,]),'exp':([50,51,53,56,57,69,79,93,114,120,127,128,],[64,64,64,80,81,64,64,126,64,81,139,140,]),'auxTipo1':([19,22,88,],[41,41,41,]),'auxTipo2':([19,22,88,],[42,42,42,]),'ambExp':([68,],[107,]),'ambCicloTermino':([70,],[112,]),'escritura':([16,27,],[35,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON cicloVars cicloFuncion bloque','programa',6,'p_programa','MyLittleDucky.py',10),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',14),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',15),
  ('vars -> VAR auxVar1','vars',2,'p_vars','MyLittleDucky.py',18),
  ('auxVar1 -> idVars COLON tipo SEMICOLON auxVar1','auxVar1',5,'p_auxVar1','MyLittleDucky.py',21),
  ('auxVar1 -> <empty>','auxVar1',0,'p_auxVar1','MyLittleDucky.py',22),
  ('idVars -> ID ambIdVars','idVars',2,'p_idVars','MyLittleDucky.py',25),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',28),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',29),
  ('tipo -> auxTipo1','tipo',1,'p_tipo','MyLittleDucky.py',32),
  ('tipo -> CHAR','tipo',1,'p_tipo','MyLittleDucky.py',33),
  ('auxTipo1 -> auxTipo2 LBRACKET CTEINT RBRACKET','auxTipo1',4,'p_auxTipo1','MyLittleDucky.py',36),
  ('auxTipo1 -> auxTipo2','auxTipo1',1,'p_auxTipo1','MyLittleDucky.py',37),
  ('auxTipo2 -> INT','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',40),
  ('auxTipo2 -> BOOL','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',41),
  ('auxTipo2 -> STRING','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',42),
  ('auxTipo2 -> FLOAT','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',43),
  ('bloque -> LBRACE cicloBloque RBRACE','bloque',3,'p_bloque','MyLittleDucky.py',46),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',49),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',50),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',53),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',54),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',55),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',56),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',57),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',58),
  ('asignacion -> ID auxAsignacion1 EQUALA expresion SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',61),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',64),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',65),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',68),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',71),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',74),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',75),
  ('auxEscritura2 -> expresion','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',78),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',79),
  ('expresion -> exp auxExpresion exp','expresion',3,'p_expresion','MyLittleDucky.py',82),
  ('expresion -> <empty>','expresion',0,'p_expresion','MyLittleDucky.py',83),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',86),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',87),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',88),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',89),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',90),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',91),
  ('condicion -> IF LPAREN expresion RPAREN bloque auxCondicion SEMICOLON','condicion',7,'p_condicion','MyLittleDucky.py',94),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',97),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',98),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',101),
  ('cicloExp -> termino ambExp','cicloExp',2,'p_cicloExp','MyLittleDucky.py',104),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',107),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',108),
  ('auxExp -> PLUS','auxExp',1,'p_auxExp','MyLittleDucky.py',111),
  ('auxExp -> MINUS','auxExp',1,'p_auxExp','MyLittleDucky.py',112),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',115),
  ('cicloTermino -> factor ambCicloTermino','cicloTermino',2,'p_cicloTermino','MyLittleDucky.py',118),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',121),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',122),
  ('auxTermino -> MULTI','auxTermino',1,'p_auxTermino','MyLittleDucky.py',125),
  ('auxTermino -> DIVIDE','auxTermino',1,'p_auxTermino','MyLittleDucky.py',126),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','MyLittleDucky.py',129),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',130),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',133),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',134),
  ('varcte -> ID auxVarcte','varcte',2,'p_varcte','MyLittleDucky.py',137),
  ('varcte -> CTEINT','varcte',1,'p_varcte','MyLittleDucky.py',138),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','MyLittleDucky.py',139),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','MyLittleDucky.py',140),
  ('varcte -> CTEBOOL','varcte',1,'p_varcte','MyLittleDucky.py',141),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','MyLittleDucky.py',142),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',145),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',146),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',147),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',150),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',151),
  ('funcion -> FUNCTION ID LPAREN auxFunction RPAREN bloque','funcion',6,'p_funcion','MyLittleDucky.py',154),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',157),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',158),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',161),
  ('auxParametros -> tipo ID ambAuxParametros','auxParametros',3,'p_auxParametros','MyLittleDucky.py',164),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',167),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',168),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque SEMICOLON','ciclo',6,'p_ciclo','MyLittleDucky.py',171),
  ('llamada -> ID LPAREN auxLlamada RPAREN','llamada',4,'p_llamada','MyLittleDucky.py',174),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',177),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',178),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',181),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',182),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',185),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',188),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',189),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',192),
]
