Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    CTEFLOAT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON cicloVars cicloFuncion bloque
Rule 2     cicloVars -> vars cicloVars
Rule 3     cicloVars -> <empty>
Rule 4     vars -> VAR auxVar1
Rule 5     auxVar1 -> idVars COLON tipo SEMICOLON auxVar1
Rule 6     auxVar1 -> <empty>
Rule 7     idVars -> ID ambIdVars
Rule 8     ambIdVars -> COMMA idVars
Rule 9     ambIdVars -> <empty>
Rule 10    tipo -> auxTipo1
Rule 11    tipo -> CHAR
Rule 12    auxTipo1 -> auxTipo2 LBRACKET CTEINT RBRACKET
Rule 13    auxTipo2 -> INT
Rule 14    auxTipo2 -> BOOL
Rule 15    auxTipo2 -> STRING
Rule 16    auxTipo2 -> FLOAT
Rule 17    bloque -> LBRACE cicloBloque RBRACE
Rule 18    cicloBloque -> ESTATUTO cicloBloque
Rule 19    cicloBloque -> <empty>
Rule 20    estatuto -> asignacion
Rule 21    estatuto -> condicion
Rule 22    estatuto -> escritura
Rule 23    estatuto -> lectura
Rule 24    estatuto -> llamada
Rule 25    estatuto -> ciclo
Rule 26    asignacion -> ID auxAsignacion1 EQUALA expresion SEMICOLON
Rule 27    auxAsignacion1 -> LBRACKET exp RBRACKET
Rule 28    auxAsignacion1 -> <empty>
Rule 29    escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON
Rule 30    auxEscritura1 -> auxEscritura2 ambAuxEscritura1
Rule 31    ambAuxEscritura1 -> COMMA auxEscritura1
Rule 32    ambAuxEscritura1 -> <empty>
Rule 33    auxEscritura2 -> expresion
Rule 34    auxEscritura2 -> CTESTRING
Rule 35    auxExpresion -> GTHAN
Rule 36    auxExpresion -> LTHAN
Rule 37    auxExpresion -> NOTEQUAL
Rule 38    auxExpresion -> GETHAN
Rule 39    auxExpresion -> LETHAN
Rule 40    auxExpresion -> EQUAL
Rule 41    condicion -> IF LPAREN expresion RPAREN bloque auxCondicion SEMICOLON
Rule 42    auxCondicion -> ELSE bloque
Rule 43    auxCondicion -> <empty>
Rule 44    exp -> cicloExp
Rule 45    cicloExp -> termino ambExp
Rule 46    ambExp -> auxExp cicloExp
Rule 47    ambExp -> <empty>
Rule 48    auxExp -> PLUS
Rule 49    auxExp -> MINUS
Rule 50    termino -> cicloTermino
Rule 51    cicloTermino -> factor ambCicloTermino
Rule 52    ambCicloTermino -> auxTermino cicloTermino
Rule 53    ambCicloTermino -> <empty>
Rule 54    auxTermino -> MULTI
Rule 55    auxTermino -> DIVIDE
Rule 56    factor -> LPAREN expresion RPAREN
Rule 57    factor -> auxFactor varcte
Rule 58    auxFactor -> auxExp
Rule 59    auxFactor -> <empty>
Rule 60    varcte -> ID auxVarcte
Rule 61    varcte -> CTEINT
Rule 62    varcte -> CTREFLOAT
Rule 63    varcte -> CTECHAR
Rule 64    varcte -> CTEBOOL
Rule 65    varcte -> CTESTRING
Rule 66    auxVarcte -> LPAREN exp RPAREN
Rule 67    auxVarcte -> LBRACKET exp LBRACKET
Rule 68    auxVarcte -> <empty>
Rule 69    funcion -> FUNCTION ID LPAREN auxFunction RPAREN bloque
Rule 70    auxFunction -> parametros
Rule 71    auxFunction -> <empty>
Rule 72    parametros -> auxParametros
Rule 73    auxParametros -> tipo ID ambAuxParametros
Rule 74    ambAuxParametros -> COMMA auxParametros
Rule 75    ambAuxParametros -> <empty>
Rule 76    ciclo -> WHILE LPAREN expresion RPAREN bloque SEMICOLON
Rule 77    llamada -> ID LPAREN auxLlamada RPAREN
Rule 78    aux_llamada -> argumentos
Rule 79    aux_llamada -> <empty>
Rule 80    argumentos -> auxArgumentos1
Rule 81    argumentos -> <empty>
Rule 82    p_auxArgumentos1 -> exp ambAuxArgumentos1
Rule 83    ambAuxArgumentos1 -> COMMA auxArgumentos1
Rule 84    ambAuxArgumentos1 -> <empty>
Rule 85    lectura -> READ LPAREN ID RPAREN SEMICOLON

Terminals, with rules where they appear

BOOL                 : 14
CHAR                 : 11
COLON                : 5
COMMA                : 8 31 74 83
CTEBOOL              : 64
CTECHAR              : 63
CTEFLOAT             : 
CTEINT               : 12 61
CTESTRING            : 34 65
DIVIDE               : 55
ELSE                 : 42
EQUAL                : 40
EQUALA               : 26
FLOAT                : 16
GETHAN               : 38
GTHAN                : 35
ID                   : 1 7 26 60 69 73 77 85
IF                   : 41
INT                  : 13
LBRACE               : 17
LBRACKET             : 12 27 67 67
LETHAN               : 39
LPAREN               : 29 41 56 66 69 76 77 85
LTHAN                : 36
MINUS                : 49
MULTI                : 54
NOTEQUAL             : 37
PLUS                 : 48
PRINT                : 29
PROGRAM              : 1
RBRACE               : 17
RBRACKET             : 12 27
RPAREN               : 29 41 56 66 69 76 77 85
SEMICOLON            : 1 5 26 29 41 76 85
STRING               : 15
VAR                  : 4
WHILE                : 76
error                : 

Nonterminals, with rules where they appear

CTREFLOAT            : 62
ESTATUTO             : 18
FUNCTION             : 69
READ                 : 85
ambAuxArgumentos1    : 82
ambAuxEscritura1     : 30
ambAuxParametros     : 73
ambCicloTermino      : 51
ambExp               : 45
ambIdVars            : 7
argumentos           : 78
asignacion           : 20
auxArgumentos1       : 80 83
auxAsignacion1       : 26
auxCondicion         : 41
auxEscritura1        : 29 31
auxEscritura2        : 30
auxExp               : 46 58
auxExpresion         : 
auxFactor            : 57
auxFunction          : 69
auxLlamada           : 77
auxParametros        : 72 74
auxTermino           : 52
auxTipo1             : 10
auxTipo2             : 12
auxVar1              : 4 5
auxVarcte            : 60
aux_llamada          : 
bloque               : 1 41 42 69 76
ciclo                : 25
cicloBloque          : 17 18
cicloExp             : 44 46
cicloFuncion         : 1
cicloTermino         : 50 52
cicloVars            : 1 2
condicion            : 21
escritura            : 22
estatuto             : 
exp                  : 27 66 67 82
expresion            : 26 33 41 56 76
factor               : 51
funcion              : 
idVars               : 5 8
lectura              : 23
llamada              : 24
p_auxArgumentos1     : 
parametros           : 70
programa             : 0
termino              : 45
tipo                 : 5 73
varcte               : 57
vars                 : 2

