
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2817A94E735F11391BA72D751B3D5BE0'
    
_lr_action_items = {'NOTEQUAL':([74,75,76,78,79,96,97,98,99,100,101,102,104,115,127,130,131,133,144,145,],[-50,105,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-59,-63,-49,-55,-69,-70,]),'MULTI':([76,96,97,98,99,100,101,102,127,130,144,145,],[112,-68,-60,-67,-64,-65,-66,-71,-59,-63,-69,-70,]),'GTHAN':([74,75,76,78,79,96,97,98,99,100,101,102,104,115,127,130,131,133,144,145,],[-50,107,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-59,-63,-49,-55,-69,-70,]),'CTESTRING':([55,56,58,60,62,70,71,72,73,77,86,103,105,106,107,108,109,110,111,112,113,114,117,123,128,129,],[-62,83,-62,-62,-62,-62,-61,96,-51,-52,-62,-62,-40,-62,-38,-43,-41,-39,-42,-57,-58,-62,83,-62,-62,-62,]),'READ':([22,40,41,42,43,45,48,49,59,125,126,134,136,137,139,143,146,],[37,-26,37,-25,-22,-24,-21,-23,-18,-90,-81,-30,-46,-27,-82,-44,-45,]),'EQUAL':([74,75,76,78,79,96,97,98,99,100,101,102,104,115,127,130,131,133,144,145,],[-50,108,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-59,-63,-49,-55,-69,-70,]),'GETHAN':([74,75,76,78,79,96,97,98,99,100,101,102,104,115,127,130,131,133,144,145,],[-50,109,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-59,-63,-49,-55,-69,-70,]),'CHAR':([18,21,66,],[27,27,27,]),'WHILE':([22,40,41,42,43,45,48,49,59,125,126,134,136,137,139,143,146,],[38,-26,38,-25,-22,-24,-21,-23,-18,-90,-81,-30,-46,-27,-82,-44,-45,]),'PROGRAM':([0,],[1,]),'PRINT':([22,40,41,42,43,45,48,49,59,125,126,134,136,137,139,143,146,],[39,-26,39,-25,-22,-24,-21,-23,-18,-90,-81,-30,-46,-27,-82,-44,-45,]),'LETHAN':([74,75,76,78,79,96,97,98,99,100,101,102,104,115,127,130,131,133,144,145,],[-50,111,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-59,-63,-49,-55,-69,-70,]),'MINUS':([55,56,58,60,62,70,73,74,76,77,79,86,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,117,123,127,128,129,130,133,144,145,],[77,77,77,77,77,77,-51,77,-56,-52,-53,77,-68,-60,-67,-64,-65,-66,-71,77,-40,77,-38,-43,-41,-39,-42,-57,-58,77,-54,77,77,-59,77,77,-63,-55,-69,-70,]),'RBRACE':([22,40,41,42,43,45,46,48,49,57,59,125,126,134,136,137,139,143,146,],[-20,-26,-20,-25,-22,-24,59,-21,-23,-19,-18,-90,-81,-30,-46,-27,-82,-44,-45,]),'RPAREN':([21,34,35,36,52,55,58,62,65,68,69,74,76,78,79,80,81,82,83,84,87,88,89,90,92,95,96,97,98,99,100,101,102,104,115,118,122,127,130,131,132,133,135,138,140,144,145,],[-76,53,-77,-75,-80,-37,-37,-84,-78,93,94,-50,-56,-47,-53,-34,116,-33,-35,119,-89,124,-83,-85,-79,127,-68,-60,-67,-64,-65,-66,-71,-48,-54,-31,-87,-59,-63,-49,-36,-55,-32,-88,144,-69,-70,]),'SEMICOLON':([3,24,25,26,27,28,29,30,31,74,76,78,79,91,93,96,97,98,99,100,101,102,104,115,116,121,124,127,130,131,133,144,145,],[4,50,-14,-17,-11,-15,-10,-13,-16,-50,-56,-47,-53,-12,125,-68,-60,-67,-64,-65,-66,-71,-48,-54,134,137,139,-59,-63,-49,-55,-69,-70,]),'CTEFLOAT':([55,56,58,60,62,70,71,72,73,77,86,103,105,106,107,108,109,110,111,112,113,114,117,123,128,129,],[-62,-62,-62,-62,-62,-62,-61,100,-51,-52,-62,-62,-40,-62,-38,-43,-41,-39,-42,-57,-58,-62,-62,-62,-62,-62,]),'PLUS':([55,56,58,60,62,70,73,74,76,77,79,86,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,117,123,127,128,129,130,133,144,145,],[73,73,73,73,73,73,-51,73,-56,-52,-53,73,-68,-60,-67,-64,-65,-66,-71,73,-40,73,-38,-43,-41,-39,-42,-57,-58,73,-54,73,73,-59,73,73,-63,-55,-69,-70,]),'COLON':([12,14,20,32,],[18,-9,-7,-8,]),'COMMA':([14,52,74,76,78,79,80,82,83,87,96,97,98,99,100,101,102,104,115,127,130,131,133,144,145,],[19,66,-50,-56,-47,-53,-34,117,-35,123,-68,-60,-67,-64,-65,-66,-71,-48,-54,-59,-63,-49,-55,-69,-70,]),'EQUALA':([47,61,120,],[-29,86,-28,]),'$end':([2,23,59,],[0,-1,-18,]),'FUNCTION':([4,5,6,7,8,11,13,50,59,63,67,],[-3,-3,9,-6,-2,9,-4,-6,-18,-5,-74,]),'STRING':([18,21,66,],[31,31,31,]),'CTEINT':([51,55,56,58,60,62,70,71,72,73,77,86,103,105,106,107,108,109,110,111,112,113,114,117,123,128,129,],[64,-62,-62,-62,-62,-62,-62,-61,99,-51,-52,-62,-62,-40,-62,-38,-43,-41,-39,-42,-57,-58,-62,-62,-62,-62,-62,]),'DIVIDE':([76,96,97,98,99,100,101,102,127,130,144,145,],[113,-68,-60,-67,-64,-65,-66,-71,-59,-63,-69,-70,]),'ELSE':([59,136,],[-18,142,]),'LTHAN':([74,75,76,78,79,96,97,98,99,100,101,102,104,115,127,130,131,133,144,145,],[-50,110,-56,-47,-53,-68,-60,-67,-64,-65,-66,-71,-48,-54,-59,-63,-49,-55,-69,-70,]),'LPAREN':([15,37,38,39,44,47,55,56,58,60,62,70,73,77,86,102,103,105,106,107,108,109,110,111,112,113,114,117,123,128,129,],[21,54,55,56,58,62,70,70,70,70,70,70,-51,-52,70,128,70,-40,70,-38,-43,-41,-39,-42,-57,-58,70,70,70,70,70,]),'VAR':([4,5,7,13,50,63,],[7,7,-6,-4,-6,-5,]),'CTECHAR':([55,56,58,60,62,70,71,72,73,77,86,103,105,106,107,108,109,110,111,112,113,114,117,123,128,129,],[-62,-62,-62,-62,-62,-62,-61,101,-51,-52,-62,-62,-40,-62,-38,-43,-41,-39,-42,-57,-58,-62,-62,-62,-62,-62,]),'ID':([1,7,9,19,22,25,26,27,28,29,30,31,33,40,41,42,43,45,48,49,50,54,55,56,58,59,60,62,70,71,72,73,77,86,91,103,105,106,107,108,109,110,111,112,113,114,117,123,125,126,128,129,134,136,137,139,143,146,],[3,14,15,14,47,-14,-17,-11,-15,-10,-13,-16,52,-26,47,-25,-22,-24,-21,-23,14,68,-62,-62,-62,-18,-62,-62,-62,-61,102,-51,-52,-62,-12,-62,-40,-62,-38,-43,-41,-39,-42,-57,-58,-62,-62,-62,-90,-81,-62,-62,-30,-46,-27,-82,-44,-45,]),'IF':([22,40,41,42,43,45,48,49,59,125,126,134,136,137,139,143,146,],[44,-26,44,-25,-22,-24,-21,-23,-18,-90,-81,-30,-46,-27,-82,-44,-45,]),'LBRACKET':([25,26,28,30,31,47,74,76,78,79,96,97,98,99,100,101,102,104,115,127,130,131,133,141,144,145,],[-14,-17,-15,51,-16,60,-50,-56,-47,-53,-68,-60,-67,-64,-65,-66,129,-48,-54,-59,-63,-49,-55,145,-69,-70,]),'LBRACE':([16,53,94,119,142,],[22,22,22,22,22,]),'INT':([18,21,66,],[25,25,25,]),'CTEBOOL':([55,56,58,60,62,70,71,72,73,77,86,103,105,106,107,108,109,110,111,112,113,114,117,123,128,129,],[-62,-62,-62,-62,-62,-62,-61,98,-51,-52,-62,-62,-40,-62,-38,-43,-41,-39,-42,-57,-58,-62,-62,-62,-62,-62,]),'FLOAT':([18,21,66,],[26,26,26,]),'BOOL':([18,21,66,],[28,28,28,]),'RBRACKET':([64,74,76,78,79,85,96,97,98,99,100,101,102,104,115,127,130,131,133,144,145,],[91,-50,-56,-47,-53,120,-68,-60,-67,-64,-65,-66,-71,-48,-54,-59,-63,-49,-55,-69,-70,]),'MAIN':([4,5,6,7,8,10,11,13,17,50,59,63,67,],[-3,-3,-73,-6,-2,16,-73,-4,-72,-6,-18,-5,-74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'auxExp':([55,56,58,60,62,70,74,86,103,106,114,117,123,128,129,],[71,71,71,71,71,71,103,71,71,71,71,71,71,71,71,]),'vars':([4,5,],[5,5,]),'auxVar1':([7,50,],[13,63,]),'ambAuxArgumentos1':([87,],[122,]),'ambAuxEscritura1':([82,],[118,]),'ambIdVars':([14,],[20,]),'termino':([55,56,58,60,62,70,86,103,106,117,123,128,129,],[74,74,74,74,74,74,74,74,74,74,74,74,74,]),'auxCondicion':([136,],[143,]),'auxVarcte':([102,],[130,]),'argumentos':([62,],[89,]),'bloque':([16,53,94,119,142,],[23,67,126,136,146,]),'ambAuxParametros':([52,],[65,]),'auxExpresion':([75,],[106,]),'ciclo':([22,41,],[40,40,]),'tipo':([18,21,66,],[24,33,33,]),'estatuto':([22,41,],[41,41,]),'auxFunction':([21,],[34,]),'auxLlamada':([62,],[88,]),'auxParametros':([21,66,],[35,92,]),'llamada':([22,41,],[42,42,]),'condicion':([22,41,],[43,43,]),'factor':([55,56,58,60,62,70,86,103,106,114,117,123,128,129,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'auxArgumentos1':([62,123,],[90,138,]),'lectura':([22,41,],[45,45,]),'funcion':([6,11,],[11,11,]),'auxEscritura2':([56,117,],[82,82,]),'auxEscritura1':([56,117,],[81,135,]),'cicloVars':([4,5,],[6,8,]),'auxTermino':([76,],[114,]),'cicloBloque':([22,41,],[46,57,]),'auxFactor':([55,56,58,60,62,70,86,103,106,114,117,123,128,129,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'auxTipo2':([18,21,66,],[30,30,30,]),'cicloTermino':([55,56,58,60,62,70,86,103,106,114,117,123,128,129,],[79,79,79,79,79,79,79,79,79,133,79,79,79,79,]),'auxAsignacion1':([47,],[61,]),'expresion':([55,58,],[69,84,]),'varcte':([72,],[97,]),'idVars':([7,19,50,],[12,32,12,]),'asignacion':([22,41,],[48,48,]),'cicloExp':([55,56,58,60,62,70,86,103,106,117,123,128,129,],[78,78,78,78,78,78,78,131,78,78,78,78,78,]),'cicloFuncion':([6,11,],[10,17,]),'programa':([0,],[2,]),'exp':([55,56,58,60,62,70,86,106,117,123,128,129,],[75,80,75,85,87,95,121,132,80,87,140,141,]),'auxTipo1':([18,21,66,],[29,29,29,]),'parametros':([21,],[36,]),'ambExp':([74,],[104,]),'ambCicloTermino':([76,],[115,]),'escritura':([22,41,],[49,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON cicloVars cicloFuncion MAIN bloque','programa',7,'p_programa','MyLittleDucky.py',10),
  ('cicloVars -> vars cicloVars','cicloVars',2,'p_cicloVars','MyLittleDucky.py',14),
  ('cicloVars -> <empty>','cicloVars',0,'p_cicloVars','MyLittleDucky.py',15),
  ('vars -> VAR auxVar1','vars',2,'p_vars','MyLittleDucky.py',18),
  ('auxVar1 -> idVars COLON tipo SEMICOLON auxVar1','auxVar1',5,'p_auxVar1','MyLittleDucky.py',21),
  ('auxVar1 -> <empty>','auxVar1',0,'p_auxVar1','MyLittleDucky.py',22),
  ('idVars -> ID ambIdVars','idVars',2,'p_idVars','MyLittleDucky.py',25),
  ('ambIdVars -> COMMA idVars','ambIdVars',2,'p_ambIdVars','MyLittleDucky.py',28),
  ('ambIdVars -> <empty>','ambIdVars',0,'p_ambIdVars','MyLittleDucky.py',29),
  ('tipo -> auxTipo1','tipo',1,'p_tipo','MyLittleDucky.py',32),
  ('tipo -> CHAR','tipo',1,'p_tipo','MyLittleDucky.py',33),
  ('auxTipo1 -> auxTipo2 LBRACKET CTEINT RBRACKET','auxTipo1',4,'p_auxTipo1','MyLittleDucky.py',36),
  ('auxTipo1 -> auxTipo2','auxTipo1',1,'p_auxTipo1','MyLittleDucky.py',37),
  ('auxTipo2 -> INT','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',40),
  ('auxTipo2 -> BOOL','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',41),
  ('auxTipo2 -> STRING','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',42),
  ('auxTipo2 -> FLOAT','auxTipo2',1,'p_auxTipo2','MyLittleDucky.py',43),
  ('bloque -> LBRACE cicloBloque RBRACE','bloque',3,'p_bloque','MyLittleDucky.py',46),
  ('cicloBloque -> estatuto cicloBloque','cicloBloque',2,'p_cicloBloque','MyLittleDucky.py',49),
  ('cicloBloque -> <empty>','cicloBloque',0,'p_cicloBloque','MyLittleDucky.py',50),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyLittleDucky.py',53),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyLittleDucky.py',54),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyLittleDucky.py',55),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','MyLittleDucky.py',56),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','MyLittleDucky.py',57),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','MyLittleDucky.py',58),
  ('asignacion -> ID auxAsignacion1 EQUALA exp SEMICOLON','asignacion',5,'p_asignacion','MyLittleDucky.py',61),
  ('auxAsignacion1 -> LBRACKET exp RBRACKET','auxAsignacion1',3,'p_auxAsignacion1','MyLittleDucky.py',64),
  ('auxAsignacion1 -> <empty>','auxAsignacion1',0,'p_auxAsignacion1','MyLittleDucky.py',65),
  ('escritura -> PRINT LPAREN auxEscritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','MyLittleDucky.py',68),
  ('auxEscritura1 -> auxEscritura2 ambAuxEscritura1','auxEscritura1',2,'p_auxEscritura1','MyLittleDucky.py',71),
  ('ambAuxEscritura1 -> COMMA auxEscritura1','ambAuxEscritura1',2,'p_ambAuxEscritura1','MyLittleDucky.py',74),
  ('ambAuxEscritura1 -> <empty>','ambAuxEscritura1',0,'p_ambAuxEscritura1','MyLittleDucky.py',75),
  ('auxEscritura2 -> exp','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',78),
  ('auxEscritura2 -> CTESTRING','auxEscritura2',1,'p_auxEscritura2','MyLittleDucky.py',79),
  ('expresion -> exp auxExpresion exp','expresion',3,'p_expresion','MyLittleDucky.py',82),
  ('expresion -> <empty>','expresion',0,'p_expresion','MyLittleDucky.py',83),
  ('auxExpresion -> GTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',86),
  ('auxExpresion -> LTHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',87),
  ('auxExpresion -> NOTEQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',88),
  ('auxExpresion -> GETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',89),
  ('auxExpresion -> LETHAN','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',90),
  ('auxExpresion -> EQUAL','auxExpresion',1,'p_auxExpresion','MyLittleDucky.py',91),
  ('condicion -> IF LPAREN expresion RPAREN bloque auxCondicion','condicion',6,'p_condicion','MyLittleDucky.py',94),
  ('auxCondicion -> ELSE bloque','auxCondicion',2,'p_auxCondicion','MyLittleDucky.py',97),
  ('auxCondicion -> <empty>','auxCondicion',0,'p_auxCondicion','MyLittleDucky.py',98),
  ('exp -> cicloExp','exp',1,'p_exp','MyLittleDucky.py',101),
  ('cicloExp -> termino ambExp','cicloExp',2,'p_cicloExp','MyLittleDucky.py',104),
  ('ambExp -> auxExp cicloExp','ambExp',2,'p_ambExp','MyLittleDucky.py',107),
  ('ambExp -> <empty>','ambExp',0,'p_ambExp','MyLittleDucky.py',108),
  ('auxExp -> PLUS','auxExp',1,'p_auxExp','MyLittleDucky.py',111),
  ('auxExp -> MINUS','auxExp',1,'p_auxExp','MyLittleDucky.py',112),
  ('termino -> cicloTermino','termino',1,'p_termino','MyLittleDucky.py',115),
  ('cicloTermino -> factor ambCicloTermino','cicloTermino',2,'p_cicloTermino','MyLittleDucky.py',118),
  ('ambCicloTermino -> auxTermino cicloTermino','ambCicloTermino',2,'p_ambCicloTermino','MyLittleDucky.py',121),
  ('ambCicloTermino -> <empty>','ambCicloTermino',0,'p_ambCicloTermino','MyLittleDucky.py',122),
  ('auxTermino -> MULTI','auxTermino',1,'p_auxTermino','MyLittleDucky.py',125),
  ('auxTermino -> DIVIDE','auxTermino',1,'p_auxTermino','MyLittleDucky.py',126),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','MyLittleDucky.py',129),
  ('factor -> auxFactor varcte','factor',2,'p_factor','MyLittleDucky.py',130),
  ('auxFactor -> auxExp','auxFactor',1,'p_auxFactor','MyLittleDucky.py',133),
  ('auxFactor -> <empty>','auxFactor',0,'p_auxFactor','MyLittleDucky.py',134),
  ('varcte -> ID auxVarcte','varcte',2,'p_varcte','MyLittleDucky.py',137),
  ('varcte -> CTEINT','varcte',1,'p_varcte','MyLittleDucky.py',138),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','MyLittleDucky.py',139),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','MyLittleDucky.py',140),
  ('varcte -> CTEBOOL','varcte',1,'p_varcte','MyLittleDucky.py',141),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','MyLittleDucky.py',142),
  ('auxVarcte -> LPAREN exp RPAREN','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',145),
  ('auxVarcte -> LBRACKET exp LBRACKET','auxVarcte',3,'p_auxVarcte','MyLittleDucky.py',146),
  ('auxVarcte -> <empty>','auxVarcte',0,'p_auxVarcte','MyLittleDucky.py',147),
  ('cicloFuncion -> funcion cicloFuncion','cicloFuncion',2,'p_cicloFuncion','MyLittleDucky.py',150),
  ('cicloFuncion -> <empty>','cicloFuncion',0,'p_cicloFuncion','MyLittleDucky.py',151),
  ('funcion -> FUNCTION ID LPAREN auxFunction RPAREN bloque','funcion',6,'p_funcion','MyLittleDucky.py',154),
  ('auxFunction -> parametros','auxFunction',1,'p_auxFunction','MyLittleDucky.py',157),
  ('auxFunction -> <empty>','auxFunction',0,'p_auxFunction','MyLittleDucky.py',158),
  ('parametros -> auxParametros','parametros',1,'p_parametros','MyLittleDucky.py',161),
  ('auxParametros -> tipo ID ambAuxParametros','auxParametros',3,'p_auxParametros','MyLittleDucky.py',164),
  ('ambAuxParametros -> COMMA auxParametros','ambAuxParametros',2,'p_ambAuxParamentros','MyLittleDucky.py',167),
  ('ambAuxParametros -> <empty>','ambAuxParametros',0,'p_ambAuxParamentros','MyLittleDucky.py',168),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','MyLittleDucky.py',171),
  ('llamada -> ID LPAREN auxLlamada RPAREN SEMICOLON','llamada',5,'p_llamada','MyLittleDucky.py',174),
  ('auxLlamada -> argumentos','auxLlamada',1,'p_auxLlamada','MyLittleDucky.py',177),
  ('auxLlamada -> <empty>','auxLlamada',0,'p_auxLlamada','MyLittleDucky.py',178),
  ('argumentos -> auxArgumentos1','argumentos',1,'p_argumentos','MyLittleDucky.py',181),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','MyLittleDucky.py',182),
  ('auxArgumentos1 -> exp ambAuxArgumentos1','auxArgumentos1',2,'p_auxArgumentos1','MyLittleDucky.py',185),
  ('ambAuxArgumentos1 -> COMMA auxArgumentos1','ambAuxArgumentos1',2,'p_ambAuxArgumentos1','MyLittleDucky.py',188),
  ('ambAuxArgumentos1 -> <empty>','ambAuxArgumentos1',0,'p_ambAuxArgumentos1','MyLittleDucky.py',189),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','MyLittleDucky.py',192),
]
